BDMLIST  TITLE 'BDMLIST - LIST BROADCAST MESSAGES FOR A USERID.'
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  Documentation:   This program is meant to be run as a TSO-in-Batch *
*                   command.   Need not be authorized.                *
*                                                                     *
*                                                                     *
*       Copyright (C) 1995-2025 Sam Golob Systems Programming LLC     *
*                 All Rights Reserved                                 *
*                                                                     *
*                                                                     *
*         SYNTAX:   BDMLIST USERID  MSGS(MM) SKIP(NN)                 *
*                           USERID IS MANDATORY, OTHERS ARE           *
*                           OPTIONAL                                  *
*                                                                     *
*       Function:   To list BRODCAST messages for a USERID without    *
*                   deleting them.  If you invoke for special         *
*                   "USERID" ALL$#@, then all userids which have      *
*                   messages are displayed.  The special id for       *
*                   displaying all userids can be changed at label    *
*                   ALLSET.                                           *
*                                                                     *
*          Author:  Sam Golob               Version:   1.5.0A         *
*                                                                     *
*            Date:  April 28, 99                                      *
*                                                                     *
*       EXECUTION:  ALLOC F(BRODCAST) DA('SYS1.BRODCAST') SH REUSE    *
*                                                                     *
*         Changes:  01/06/26  -  ADDED 2 KEYWORD PARAMETERS TO        *
*                   (VER 2.0)    CONTROL WHICH MESSAGES ARE DISPLAYED *
*                                                                     *
*                                SKIP(NN) AND MSGS(MM)                *
*                                                                     *
*                                SKIP(NN) WILL SKIP NN RECORDS AT     *
*                                THE BEGINNNG OF THE CHAIN.           *
*                                                                     *
*                                MESSAGES(MM) WILL DISPLAY MM         *
*                                MESSAGES, AFTER THE SKIP, IF SKIP    *
*                                WAS CODED, OR ELSE IT WILL DISPLAY   *
*                                MM MESSAGES FROM THE BEGINNING OF    *
*                                THE CHAIN.                           *
*                                                                     *
*                   99/04/28  -  TOOK OFF RESTRICTIONS OF OPER, ACCT. *
*                   (VER 1.5)    OPEN SYS1.BRODCAST FOR INPUT INSTEAD *
*                                OF UPDAT.  OK FOR GENERAL USERS.     *
*                                                                     *
*                   95/05/31  -  HAS COUNT OF MSGS AND ID DISPLAY     *
*                                USERID ALL$#@ WILL DISPLAY ALL MSGS  *
*                                                                     *
*                   95/06/08  -  STRUCTURED SUBROUTINES AND COMMENTS  *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*       I N S T R E A M    M A C R O S                                *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         MACRO
         IKJZT301  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*        UPDATED                          31MAY95 SBG.
*
*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                                RECORD 1                             *
*                                                                     *
*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *
*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *
*        CONCERNING THE DATA SET.                                     *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
R1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET
         AGO   .SKIP
.NODSECT ANOP
R1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET
.SKIP    ANOP
R1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW
R1BCFLGS DS    B -            NOTICES FLAGS - NOT USED
R1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST
*                               NOTICES DIRECTORY RECORD
R1USPTRP DS    0A -           SAME AS R1USPTR BELOW
R1USFLGS DS    B -            USER MAIL FLAGS - NOT USED
R1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD
R1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS
R1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -
*                               FROM MASTER SCHEDULER BASEA, BABCMAX
*                                                                     *
R1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =
*                               ' SYS1.BRODCAST DATA SET '
R1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS
*                               A 1-DIGIT NUMBER
         DS    CL1 -          RESERVED
R1FRESRH DS    CL3 -          RBA OF FREE SEARCH RECORD
R1GENNUM DS    F -            GENERATION NUMBER FOR IN-STORAGE NOTICE
*                               TABLE
         DS    CL76 -         RESERVED
         MEND
         MACRO
         IKJZT304  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*
*        IKJZT304       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                       USER MAIL DIRECTORY RECORD                    *
*                                                                     *
*        THE USER MAIL DIRECTORY RECORD (USDIR) IS A LOGICAL          *
*        DIRECTORY RECORD IN THE SYS1.BRODCAST DATA SET.              *
*        THE DIRECTORY CONTAINS USERIDS AND PTRS TO THE FIRST AND     *
*        LAST MESSAGE FOR EACH USERID.                                *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
USDIR    DSECT , -            USER MAIL DIRECTORY RECORD
         AGO   .SKIP
.NODSECT ANOP
USDIR    DS    0F -           USER MAIL DIRECTORY RECORD
.SKIP    ANOP
USDENTRY DS    0CL13 -        DIRECTORY ENTRY FOR 1 USERID
USDID    DS    CL7 -          USERID (LEFT JUSTIFIED, PADDED W/ BLANKS)
USDRBA   DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST
*                               MESSAGE FOR THIS USERID (ZERO IF NONE)
USDEND   DS    AL3 -          RBA OF LAST MESSAGE FOR THIS USERID
*                               (ZERO IF NONE)
         DS    8CL13 -        RESERVE SPACE FOR 8 MORE DIRECTORY
*                               ENTRIES IDENTICAL IN FORMAT TO THE
*                               PRECEDING 'USDENTRY'
         DS    XL8 -          RESERVED
USDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'
USDNEXT  DS    AL3 -          CHAIN PTR TO NEXT USER MAIL DIRECTORY
*                               RECORD (ZERO IF LAST)
         MEND
         MACRO
         IKJZT305  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*
*        IKJZT305       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                        USER MAIL MESSAGE RECORD                     *
*                                                                     *
*        THE USER MAIL MESSAGE RECORD (USMSG) IS A RECORD IN          *
*        THE SYS1.BRODCAST DATA SET WHICH CONTAINS A MAIL MESSAGE     *
*        INTENDED FOR A PARTICULAR USERID.                            *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
USMSG    DSECT , -            USER MAIL MESSAGE RECORD
         AGO   .SKIP
.NODSECT ANOP
USMSG    DS    0F -           USER MAIL MESSAGE RECORD
.SKIP    ANOP
USMLNG   DS    FL1 -          LENGTH OF MAIL MSG TEXT
USMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)
USMNEXT  DS    AL3 -          CHAIN PTR TO NEXT MAIL MESSAGE RECORD
*                               FOR THIS USERID (ZERO IF LAST)
         MEND
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    DS    0H
         STM   R15,R1,HEXSAVE
         LA    R1,&FROM
         LA    R0,&LEN
         LA    R15,&TO
         BAL   R9,HEX
         LM    R15,R1,HEXSAVE
         MEND
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
*        REGS
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 1
SP000    EQU   0
         SPACE 1
         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV
         LCLC  &PGMNAME
&VERSNUM SETC  ' 1.5.0A'
&PKGNAME SETC  'BRODMSTR'
&PKGTITL SETC  'Broadcast Master'
&VERTITL SETC  ' Version '
&COPYRGT SETC  'Copyright (c) 1995-2025 Sam Golob Systems Programming'
&COPYRSV SETC  ' LLC - All Rights Reserved  '
&PGMNAME SETC  'BDMLIST '
&PGMNAME AMODE 24
&PGMNAME RMODE 24
&PGMNAME CSECT
         B     BEGINN-*(,R15)
AFLG     DC    X'FF'
ALLCHAR  DC    C'ALL$#@'
         DC    C'  '
         DC    CL8'&PGMNAME'
         DC    C' '
         DC    C'&PKGTITL'
         DC    C'&VERTITL'
         DC    C'&VERSNUM'
         DC    C' '
         DC    C'&COPYRGT'
         DC    C'&COPYRSV'
         DC    CL16' &SYSDATE &SYSTIME '
         DC    CL6'HLASM '
         DC    C'&SYSVER'
         DC    C' '
BEGINN   DS    0H
         STM   R14,R12,12(R13)
         USING BDMLIST,R12,R11,R10
         LR    R12,R15
         LA    R11,4095(,R12)      LOAD SECOND BASE
         LA    R11,1(,R11)
         LA    R10,4095(,R11)      LOAD THIRD BASE
         LA    R10,1(,R10)
         LR    R4,R1               PRESERVE CPPL POINTER.
         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         USING DATAAREA,R13
         BAL   R9,INITCON          INITIALIZE CONSTANTS IN DATA AREA
         BAL   R9,GETPSCB          GET PSCB IF ANY (IN R2)
         SPACE 1
         LTR   R2,R2               ANY PSCB?
         BZ    EOJ8                GET OUT.  NOT TSO.
         BAL   R9,CPPLPTRS         STORE STUFF OUT OF THE CPPL
         BAL   R9,SETIOPL          SET UP IOPL FOR PUTLINE
*        BAL   R9,CHEKAUTH         ARE WE OPER OR ACCT ?
CONT0    LTR   R4,R4               ANY CPPL?
         BZ    EOJ8                NO.  GET OUT
         L     R1,0(,R4)           PT TO CMD BUFFER.
         LTR   R1,R1               ANY CMD BUFFER?
         BZ    EOJ4                GET OUT IF NONE
         LH    R3,0(,R1)           LOAD LENGTH.
         CH    R3,=H'4'            ANYTHING?
         BNH   EOJ4                NO.  GET OUT.
         LR    R5,R3               LENGTH OF COMMAND + 4
         ICM   R5,14,FULLZERO      CLEAR HI ORDER 3 BYTES
         LH    R3,2(,R1)           LOAD OFFSET.
         SR    R5,R3               SUBTRACT OFFSET FROM FULL LENGTH+4
         SH    R5,=H'4'            CORRECT FOR LENGTH OF CMDBUFR HEADER
         BC    8,WMESS2            ZERO, WRITE MESSAGE TO ENTER USERID
         BC    5,EOJ8              LESS, OR OVERFLOW, OUT.
         BAL   R9,GETIDS           MAKE SURE YOU PULL THE NEWID OUT
*                                  OF THE KEYWORD (AND ITS LENGTH)
*                                  AND ALSO SAVE THE CURRENT ID&LENGTH
* ------------------------------------------------------------------ *
TESTNONN DS    0H                  Test for non-numeric MSGS, SKIP
         TM    BDMFLAG,X'01'
         BO    TESTNMSG
         TM    BDSFLAG,X'01'
         BO    TESTNMSG
         B     TESTNEND
TESTNMSG DS    0H
         STM   R0,R1,SAVER0R1
         MVC   LINE,LINE-1
         LA    R0,44
         BAL   R9,MSG
         MVC   LINE,LINE-1
         LA    R0,45
         MVC   LINE(45),=C'MSGS or SKIP keyword values were non-numericx
               .'
         BAL   R9,MSG
         MVC   LINE,LINE-1
         LA    R0,35
         MVC   LINE(35),=C'No User Messages have been listed. '
         BAL   R9,MSG
         MVC   LINE,LINE-1
         MVC   LINE(18),=C'  --------------- '
         LA    R0,18
         BAL   R9,MSG
         MVC   LINE,LINE-1
         MVC   LINE(18),=C'  Return Code = 8 '
         LA    R0,18
         BAL   R9,MSG
         MVC   LINE,LINE-1
         MVC   LINE(18),=C'  --------------- '
         LA    R0,18
         BAL   R9,MSG
         LM    R0,R1,SAVER0R1
         B     EOJ8
TESTNEND DS    0H
* ------------------------------------------------------------------ *
ALLSET   DS    0H
** -- >>
         MVC   NEWIDU(8),NEWID
         OC    NEWIDU(8),BLANKS
         CLC   =C'MSGS(',NEWIDU
         BE    WMESS3
         CLC   =C'SKIP(',NEWIDU
         BE    WMESS3
** -- >>
         CLC   NEWID(L'ALLCHAR),ALLCHAR    "USERID" FOR "ALL USERIDS"
         BNE   ONEID                       NOT EQUAL, ONLY ONE USERID
         MVC   ALLFLAG(1),AFLG     MOVE INITIAL FLAG SETTING
         CLI   ALLFLAG,X'FF'       IS IT X'FF'?
         BNE   ONEID               NO. NOT REAL "ALL" PROCESSING
         MVC   TRYID(8),BLANKS     YES. INITIAL ID IS 7 BLANKS.
         B     DOBROD
ONEID    DS    0H
         MVC   TRYID(8),NEWID      RUN USERID SCAN AGAINST NEW ID
DOBROD   OPEN  (BRODCAST,(INPUT))
         TM    BRODCAST+48,X'10'
         BNO   WMESS1
         RDJFCB BRODCAST
* ------------- Get the EESCB in a program -------------*  below
* -----------------  This needs AMODE 31  --------------*
GETEESCB DS    0H
         CNOP  0,4
         L     R15,CONST            Amode 31
         BASSM R0,R15
CONST    DC    X'80',AL3(CONST+4)
         ST    R5,SAVER5A           R5 is temporary.
         L     R5,X'10'             CVT
         L     R5,X'9C'(,R5)        Point to TSVT
         L     R5,X'4C'(,R5)        Point to TPVT
         ST    R5,SAVETPVT          Save the TPVT for reference.
         L     R5,X'20'(,R5)        Point to EESCB - R5
         ST    R5,SAVEESCB          Store away the IKJEESCB address
         L     R5,SAVER5A           Restore R5 quickly.
         L     R2,SAVEESCB          Use work register here.
         LTR   R2,R2                EESCB supported for this release?
         BZ    ENDEESCB             No. Bypass EESCB stuff.
         USING IKJEESCB,R2
USEEESCB DS    0H                   Save EESCB quantities.
         CLC   EESCB_IDENTIFIER(8),LITEESCB      Is this the EESCB?
         BNE   ENDEESCB             No. Can't do anything if not it.
         MVC   EESIDENT(8),EESCB_IDENTIFIER
         MVC   EESVERS(1),EESCB_VERSION  Save EESCB Version Number
         CLI   EESCB_VERSION,X'03'  At least EESCB version 3 ?
         BL    ENDEESCB             No. Don't support fancy stuff.
         MVC   EESDSN(44),EESCB_BROADCAST_DSNAME BRODCAST dataset name
         MVC   EESVOL(6),EESCB_BROADCAST_VOLSER  BRODCAST dataset volsr
         MVC   EESUNT(8),EESCB_BROADCAST_UNIT    BRODCAST dataset unit
         DROP  R2
         CNOP  0,4
         L     R15,CONSTX          Amode 24
         BASSM R0,R15
CONSTX   DC    A(CONSTX+4)
         B     ENDEESCB
SAVETPVT DC    F'0'                Needed for Get EESCB routine
SAVEESCB DC    F'0'                Needed for Get EESCB routine
EESDSN   DC    CL44' '             BRODCAST Dsname from EESCB
EESVOL   DC    CL6' '              BRODCAST Volser from EESCB
EESUNT   DC    CL8' '              BRODCAST Unit Name from EESCB
EESVERS  DC    X'00'               EESCB version number
EESIDENT DC    CL8' '              EESCB Identifier, copied.
LITEESCB DC    CL8'IKJEESCB'
ENDEESCB DS    0H
* ------------- Get the EESCB in a program -------------*  above
*
         TM    TITLFLG,X'01'       Has the title been printed yet?
         BO    NOTITLHE            Yes. Don't print it now.
         BAL   R9,PRTITLE          No. Print it.
NOTITLHE DS    0H
         OI    TITLFLG,X'01'       Show title has been printed.
*
* ------------------------------------------------------------------ *
         BAL   R9,HEADREAD         READ HEADER RECORD AND EXTRACT
*                                  RBA OF FIRST USER RECORD TO SEARCH
*                                  FOR THE USERID SLOT FOR OUR USERID.
*                                  THIS VALUE IS STORED IN SAVERBA(3).
* ------------------------------------------------------------------ *
* ---    MAIN LOOP TO READ EACH USERID'S MESSAGES.               --- *
* ------------------------------------------------------------------ *
INDEXUS  DS    0H                  READ THROUGH USERID RECORDS
         CLC   SAVERBA(3),ZEROS    ARE WE AT THE END OF USERID RECORDS
         BE    ENDUSER             NO USERID LIKE THIS. DEAL WITH IT.
         LA    R6,9                COUNT OF USERS PER RECORD
         MVC   BLOCKNO,SAVERBA     GET RBA FOR READ
         READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R3,MDLDECB+12       ADDRESS OF RECORD
         USING USDIR,R3
         MVC   LASTRBA(3),SAVERBA  SAVE CURRENT RBA
         MVC   SAVERBA(3),USDNEXT  GET NEXT RECORD'S RBA
         LA    R8,0                INITIALIZE USERID SLOT COUNTER
USRLOOP  DS    0H
         MVC   USERID(8),BLANKS    ENSURE BLANK IN 8TH PLACE
         MVC   USERIDI(7),USDID    COPY WHO THIS IS
         CLC   USERIDI(7),ZEROS    IS THIS A REAL USER?
         BE    TRYNEXT             NOPE. JUST GO TO NEXT ENTRY
         CLI   ALLFLAG,X'FF'       ARE WE DOING ALL NONEMPTIES?
         BNE   NOTALL1             NO, JUST DO THIS ONE (EVEN IF EMPTY)
         MVC   TRYID(7),USERIDI    COUNT THIS ID TO BE PROCESSED
NOTALL1  CLC   USERID(7),TRYID     IS THIS THE USERID WE WANT?
         BE    SAVPTRS             YEP. GO DEAL WITH IT
TRYNEXT  DS    0H
         LA    R3,13(,R3)          BUMP LOCATION TO NEXT USERID
         LA    R8,1(,R8)           BUMP COUNTER WITHIN RECORD
* -- >
         XC    SAVER6B,SAVER6B
         ST    R6,SAVER6B
* -                               Diagnostic print - below
*        MVC   LINE,LINE-1
*        HEX   LINET,4,SAVER6B
*        LA    R0,45
*        BAL   R9,MSG
* -                               Diagnostic print - above
         CLC   SAVER6B,=F'1'
         BE    TRYNEXTR
* -- >
         BCT   R6,USRLOOP          TRY FOR ANOTHER USER ENTRY
TRYNEXTR DS    0H
*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         MVC   UMSGCNT(3),PACKZERO   ZERO THE USERID'S MESSAGE COUNTER
         B     INDEXUS             END OF RECORD? GET ANOTHER.
         SPACE 3
SAVPTRS  MVC   MYUSRBA(3),LASTRBA  SAVE RBA OF RECORD WITH MY USERID
         STC   R8,MYUSSLOT         SAVE SLOT IN RECORD
         MVC   SAVEPTRS(6),USDRBA  SAVE POINTERS TO MY MESSAGES
*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
GOWRITE  DS    0H
         MVC   MESSRBA(3),SAVEPTRS   GET RBA OF FIRST MESSAGE
         CLI   ALLFLAG,X'FF'       ARE WE PROCESSING ALL NONEMPTIES?
         BE    TRYMORE             YES. KEEP TRYING MORE ID'S
* ----                   WRITLOOP NEEDS R5 AND R7 SAVED AND RESTORED
         ST    R5,SAVER5A          SAVE WORK REGISTER
         ST    R7,SAVER7B          SAVE WORK REGISTER
         BAL   R9,WRITLOOP         LOOP THRU CHAIN FOR THIS USERID
         L     R5,SAVER5A          RESTORE REGISTER
         L     R7,SAVER7B          RESTORE REGISTER
* ----
         BAL   R9,WRITEND          FINISH OFF USERID,
         B     ZEROUT                  AND SCRAM
TRYMORE  CLC   MESSRBA(3),ZEROS    DOES THIS ID HAVE ANY MESSAGES?
         BE    TRYMOREN            NO. GO TO THE NEXT ID.
* ----                   WRITLOOP NEEDS R5 AND R7 SAVED AND RESTORED
         ST    R5,SAVER5A          SAVE WORK REGISTER
         ST    R7,SAVER7B          SAVE WORK REGISTER
         BAL   R9,WRITLOOP         LOOP THRU CHAIN FOR THIS USERID
         L     R5,SAVER5A          RESTORE REGISTER
         L     R7,SAVER7B          RESTORE REGISTER
* ----
         BAL   R9,WRITEND          FINISH OFF USERID AND CHECK MORE
         MVC   BLOCKNO,MYUSRBA     GET RBA FOR READ TO CONTINUE
         BAL   R9,REFINDUS         FIND USER SLOT AGAIN TO GO FURTHER
TRYMOREN B     TRYNEXT             THEN GO FURTHER
* ------------------------------------------------------------------ *
* ---    END OF MAIN LOOP FOR USERID'S.                          --- *
* ------------------------------------------------------------------ *
BADEND   MVC   LINE,LINE-1                COME HERE IF ID KEY NOT X'01'
         LA    R0,L'MESPREND               WRITE MESSAGE THAT
         MVC   LINE(L'MESPREND),MESPREND      THINGS ARE NOT
         BAL   R9,MSG                            SO GOOD.
*                                         GET HERE AT END OF USER RCDS
ENDUSER  CLI   ALLFLAG,X'FF'                 ARE WE DOING ALL IDS ?
         BNE   NOTALL2                       NO. JUST FINISH THIS ONE.
         MVC   LINE,LINE-1                   YES. WE TOTAL 'EM ALL.
         LA    R0,60                           WRITE A BUNCH OF
         BAL   R9,MSG                          LINES AT THE END
         MVC   WK1ALL,MESALL                   WITH THE TOTAL COUNT
         MVC   WK1ALL+50(10),MASK10            AND ENDING MESSAGE
         ED    WK1ALL+50(10),TMSGCNT
         MVC   LINE(L'WK1ALL),WK1ALL
         LA    R0,L'WK1ALL
         BAL   R9,MSG                       THEN
         B     EOJ0                           GET THE HECK OUT
NOTALL2  MVC   LINE,LINE-1                  CLEAR LINE
         MVC   WK1NOUSR,MESNOUSR              AND JUST FINISH UP
         MVC   WK1NOUSR+32(7),TRYID             FOR THIS ID THAT
         MVC   LINE(L'WK1NOUSR),WK1NOUSR         YOU'VE BEEN
         LA    R0,L'WK1NOUSR                        DEALING WITH
         BAL   R9,MSG
ZEROUT   B     EOJ0                WE'RE DONE.
         SPACE 3
WMESS3   MVC   LINE,LINE-1                  WRITE MESSAGE THAT
         MVC   LINET,MESSAGE3                 MSGS( AND SKIP( ARE
         LA    R0,L'MESSAGE3+7                  INVALID IN USERID FIELD
         BAL   R9,MSG
         MVC   LINE,LINE-1
         MVC   LINET,MESSAGE4
         LA    R0,L'MESSAGE4+7
         BAL   R9,MSG
         B     EOJ4                                          PARS 06/99
WMESS2   MVC   LINE,LINE-1                  WRITE MESSAGE THAT
         MVC   LINET,MESSAGE2                 YOU HAVE TO ENTER A
         LA    R0,L'MESSAGE2+7                  USERID NAME.
         BAL   R9,MSG
         B     EOJ4                                          PARS 06/99
WMESS1   MVC   LINE,LINE-1                  WRITE MESSAGE THAT
         MVC   LINET,MESSAGE1                 SYS1.BRODCAST NOT ALLOC'D
         LA    R0,L'MESSAGE1+7                  TO DDNAME BRODCAST.
         BAL   R9,MSG
         B     EOJ4
EOJ0     LA    R5,0                SET CC = 0.
         B     EOJ                 CONT.
EOJ4     LA    R5,4                SET CC = 4.
         B     EOJ                 CONT
EOJ8     LA    R5,8                SET CC = 8.
         B     EOJ                 CONT
EOJ      DS    0H                  BYE.
         CLOSE (BRODCAST)
         LR    R1,R13
         L     R13,4(,R13)
         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000
         LR    R15,R5              Restore RC into corrupted R15
         ST    R15,16(,R13)        PUT RC INTO PASSED SAVE AREA
         L     R14,12(,R13)
         LM    R0,R12,20(R13)
         BR    R14
         EJECT
*-----------------------------------------------------------------*
*---*                S U B R O U T I N E S                    *---*
*-----------------------------------------------------------------*
         SPACE 2
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        GET THE NEW USERID FROM THE PARM, AND SAVE THE OLD ONE.  *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         USING PSCB,R2
GETIDS   DS    0H
         ST    R9,SAVER9B
         AR    R1,R3               POINT ...
         LA    R1,4(,R1)           ... TO CHAR.
         LA    R6,7                LOAD REG FOR BCT LOOP
         LR    R7,R1               INITIALIZE POINTER
         LA    R7,0(,R7)                TO FIRST CHARACTER OF ID
         LA    R8,0                INITIALIZE CHARACTER COUNT
CUTIDLEN CLI   0(R7),X'40'         IS THIS CHARACTER A BLANK?
         BE    NOMORCUT            YES, WE ARE AT THE END OF THE ID.
         LA    R7,1(,R7)           BUMP ANOTHER CHARACTER
         LA    R8,1(,R8)           COUNT ANOTHER CHARACTER
         CR    R8,R5               END OF COMMAND BUFFER ?
         BNL   NOMORCUT            YES. GET OUT NOW.
         BCT   R6,CUTIDLEN         TRY FOR BLANK AGAIN
NOMORCUT DS    0H
         MVC   NEWID(8),BLANKS     CLEAR FIELD
         BCTR  R8,0                SUBTRACT 1 FOR EXECUTE
         EX    R8,MOVEID           MAKE SUBCOMMAND INTO NEW ID
         LA    R8,1(,R8)           BUMP REG BACK TO WHERE IT WAS
         STC   R8,NEWPSCBL         SAVE NEW USER'S LENGTH
         OC    NEWID(8),BLANKS     UPPERCASE NEW USERID
         MVC   OLDID(8),BLANKS     CLEAR FIELD
         MVC   OLDID(7),PSCBUSER   SAVE ORIGINAL USERID
         OC    OLDID(8),BLANKS     MAKE SURE ALL 8 CHARS ARE INITLIZED
         MVI   OLDPSCBL,X'00'      INITIALIZE FIELD
         MVC   OLDPSCBL(1),PSCBUSRL  SAVE ORIGINAL USERID LENGTH
         DROP  R2
LOOKKEYW DS    0H                  LOOK FOR KEYWORDS MSGS AND SKIP
         LA    R7,1(,R7)           BUMP CMD BUFFER POINTER
         LA    R8,1(,R8)           BUMP CHARACTER COUNTER
         CR    R8,R5               END OF COMMAND BUFFER?
         BNL   GETIDEND            YES. DON'T LOOK ANY MORE
         MVC   MSGSWKL(5),BLANKS
         MVC   MSGSWKL(5),0(R7)    MOVE 5 CHARS TO WKAREA
         OC    MSGSWKL(4),BLANKS   UPPERCASE FIELD
         CLC   =C'MSGS(',MSGSWKL   MSGS KEYWORD THERE?
         BE    MSGSCODD            YES. HANDLE IT.
         MVC   SKIPWKL(5),BLANKS
         MVC   SKIPWKL(5),0(R7)    MOVE 5 CHARS TO WKAREA
         OC    SKIPWKL(5),BLANKS   UPPERCASE FIELD
         CLC   =C'SKIP(',SKIPWKL   SKIP KEYWORD THERE?
         BE    SKIPCODD            YES. HANDLE IT.
         B     LOOKKEYW            GO LOOP AND LOOK AT NEXT CHARACTER
MSGSCODD DS    0H                  MSGS Coded
         OI    MSGCFLG,X'01'       Show MSGS coded here
         NI    SKPCFLG,X'FF'-X'01' Show SKIP not coded here
         NI    MSGFLAG,X'FF'-X'01' Initialize MSGS error flag
         NI    SKPFLAG,X'FF'-X'01' Initialize SKIP error flag
         B     MSGSSKIP
SKIPCODD DS    0H                  SKIP Coded
         OI    SKPCFLG,X'01'       Show SKIP coded here
         NI    MSGCFLG,X'FF'-X'01' Show MSGS not coded here
         B     MSGSSKIP
MSGSSKIP DS    0H                  Central Processing Station for both
         TM    TITLFLG,X'01'       Has the title been printed yet?
         BO    MSGSNOPT            Yes. Don't print it now.
         BAL   R9,PRTITLE          No. Print it.
MSGSNOPT DS    0H
         OI    TITLFLG,X'01'       Show title has been printed.
         TM    MSGCFLG,X'01'
         BO    DOMSGS
         TM    SKPCFLG,X'01'
         BO    DOSKIP
* -- > One of the two flags should be on here - if not, error - below
         STM   R0,R1,SAVER0R1
         MVC   LINE,LINE-1
         MVC   LINE(43),=C'Error in Processing SKIP and MSGS Keywords.'
         LA    R0,43
         BAL   R9,MSG
         LM    R0,R1,SAVER0R1
         B     EOJ8
* -- > One of the two flags should be on here - if not, error - above
DOMSGS   DS    0H
         LA    R7,5(,R7)           BUMP CMD BUFFER POINTER
         LA    R8,5(,R8)           BUMP CHARACTER COUNTER
         CR    R8,R5               END OF COMMAND BUFFER?
         BNL   GETIDEND            YES. DON'T LOOK ANY MORE
         LR    R6,R7               GET START OF NUMBER
DOMSGSL  DS    0H
         CLI   0(R6),C' '
         BE    DOMSGSNO
         CLI   0(R6),C')'
         BE    DOMSGSNO
* -- >                  Check if the "numbers" are numeric - below
         CLI   0(R6),X'F0'         LESS THAN C'0'?
         BL    DOMSGSNN            NOT NUMERIC
         CLI   0(R6),X'F9'         MORE THAN C'9'?
         BH    DOMSGSNN            NOT NUMERIC
         B     DOMSGSNU            NUMERIC
DOMSGSNN DS    0H
         MVI   0(R6),C'*'
         NI    SKPFLAG,X'FF'-X'01'
         OI    MSGFLAG,X'01'
         OI    BDMFLAG,X'01'
DOMSGSNU DS    0H
* -- >                  Check if the "numbers" are numeric - above
         LA    R8,1(,R8)
         LA    R6,1(,R6)
         CR    R8,R5               END OF COMMAND BUFFER?
         BNL   DOMSGSNO
         B     DOMSGSL
DOMSGSNO DS    0H
         SR    R6,R7
         BCTR  R6,0
         TM    MSGFLAG,X'01'
         BO    DOMSNNMR
DOMSNRML DS    0H                     Good Message about MSGS number
         EX    R6,PACKM
         STM   R0,R1,SAVER0R1
         OI    WORKM+7,X'0F'     SIGN NIBBLE
         MVC   DATAMSGS+24(10),EDPAT
         ED    DATAMSGS+24,WORKM+3
         MVC   LINE,LINE-1
         LA    R0,L'DATAMSGS
         MVC   LINE(L'DATAMSGS),DATAMSGS
         BAL   R9,MSG
         LM    R0,R1,SAVER0R1
         B     DOMSGENT
DOMSNNMR DS    0H                     Bad Message about MSGS number
         EX    R6,MVSTRNGM
         STM   R0,R1,SAVER0R1
         MVC   DATAMSGS+26(10),STRNGM
         MVC   LINE,LINE-1
         MVC   LINE(L'DATAMSGS),DATAMSGS
         MVC   LINE+39(12),=C'Non-Numeric '
         LA    R0,L'DATAMSGS+12
         BAL   R9,MSG
         LM    R0,R1,SAVER0R1
         B     DOMSGERR
DOMSGENT DS    0H
         CVB   R0,WORKM
         ST    R0,COUNTM
DOMSGERR DS    0H
         LA    R6,1(,R6)           RESTORE R6
         AR    R7,R6               GET READY TO GO ON LOOKING
         MVC   STRNGM,BLANKS       Blank out error strings for
         MVC   STRNGS,BLANKS         further searches
         B     LOOKKEYW
DOSKIP   DS    0H
         LA    R7,5(,R7)           BUMP CMD BUFFER POINTER
         LA    R8,5(,R8)           BUMP CHARACTER COUNTER
         CR    R8,R5               END OF COMMAND BUFFER?
         BNL   GETIDEND            YES. DON'T LOOK ANY MORE
         LR    R6,R7               GET START OF NUMBER
DOSKIPL  DS    0H
         CLI   0(R6),C' '
         BE    DOSKIPNO
         CLI   0(R6),C')'
         BE    DOSKIPNO
* -- >                  Check if the "numbers" are numeric - below
         CLI   0(R6),X'F0'         LESS THAN C'0'?
         BL    DOSKIPNN            NOT NUMERIC
         CLI   0(R6),X'F9'         MORE THAN C'9'?
         BH    DOSKIPNN            NOT NUMERIC
         B     DOSKIPNU            NUMERIC
DOSKIPNN DS    0H
         MVI   0(R6),C'*'
         NI    MSGFLAG,X'FF'-X'01'
         OI    SKPFLAG,X'01'
         OI    BDSFLAG,X'01'
DOSKIPNU DS    0H
* -- >                  Check if the "numbers" are numeric - above
         LA    R8,1(,R8)
         LA    R6,1(,R6)
         CR    R8,R5               END OF COMMAND BUFFER?
         BNL   DOSKIPNO
         B     DOSKIPL
DOSKIPNO DS    0H
         SR    R6,R7
         BCTR  R6,0
         TM    SKPFLAG,X'01'
         BO    DOSKNNMR
DOSKNRML DS    0H                    Good Message about SKIP number
         EX    R6,PACKS
         STM   R0,R1,SAVER0R1
         OI    WORKS+7,X'0F'     SIGN NIBBLE
         MVC   DATASKIP+24(10),EDPAT
         ED    DATASKIP+24,WORKS+3
         MVC   LINE,LINE-1
         LA    R0,L'DATASKIP
         MVC   LINE(L'DATASKIP),DATASKIP
         BAL   R9,MSG
         LM    R0,R1,SAVER0R1
         B     DOSKPENT
DOSKNNMR DS    0H                    Bad Message about SKIP number
         EX    R6,MVSTRNGS
         STM   R0,R1,SAVER0R1
         MVC   DATASKIP+26(10),STRNGS
         MVC   LINE,LINE-1
         MVC   LINE(L'DATASKIP),DATASKIP
         MVC   LINE+39(12),=C'Non-Numeric '
         LA    R0,L'DATASKIP+12
         BAL   R9,MSG
         LM    R0,R1,SAVER0R1
         B     DOSKPERR
DOSKPENT DS    0H
         CVB   R0,WORKS
         ST    R0,COUNTS
DOSKPERR DS    0H
         LA    R6,1(,R6)           RESTORE R6
         AR    R7,R6               GET READY TO GO ON LOOKING
         MVC   STRNGM,BLANKS       Blank out error strings for
         MVC   STRNGS,BLANKS         further searches
         B     LOOKKEYW
GETIDEND DS    0H
         L     R9,SAVER9B
         BR    R9
PACKM    PACK  WORKM,0(0,7)
PACKS    PACK  WORKS,0(0,7)
MVSTRNGM MVC   STRNGM(0),0(R7)
MVSTRNGS MVC   STRNGS(0),0(R7)
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        READ THE SYS1.BRODCAST HEADER RECORD AND COPY FIELDS.    *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEADREAD DS    0H
         ST    R9,SAVER9C
         READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOKZERO,MF=E       RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R3,MDLDECB+12       ADDRESS OF RECORD
         USING R1BC,R3             ADDRESSABILITY TO HEADER RECORD MAP
         MVC   SAVERBA(3),R1USPTR  SAVE RBA OF FIRST USER DIR RECORD
         DROP  R3
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         L     R9,SAVER9C
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
MSG      DS    0H
         ST    R9,SAVER9D
         LA    R1,LINE             WRITE A LINE USING PUTLINE FACILITY
*        LOAD LENGTH OF MESSAGE INTO R0 BEFORE CALLING THIS ROUTINE.
         BAL   R14,PUTLINE
         MVC   LINE,LINE-1
         L     R9,SAVER9D
         BR    R9
         SPACE
* --------------------------------------------------------- *
HEX      DS    0H
         ST    R9,SAVER9A
         MVC   1(1,R15),0(R1)        Move byte
         UNPK  0(3,R15),1(2,R15)     Unpack
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)           Increment output pointer
         LA    R1,1(,R1)             Increment input pointer
         BCT   R0,HEX                Decrement length, then loop
         MVI   0(R15),C' '           Blank the trailing byte
         L     R9,SAVER9A
         BR    R9                    Return to caller
HEXTAB   DC    C'0123456789ABCDEF'   Translate table
HEXSAVE  DS    3F                    Register save for HEX macro
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        DATA AREAS THAT NEED TO BE INITIALIZED AT THE BEGINNING  *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
INITCON  DS    0H
         ST    R9,SAVER9E
         MVI   LINE-1,C' '         INITIALIZE BLANK
         MVC   LINE,LINE-1
         MVC   UMSGCNT(3),PACKZERO INITIALIZE COUNTER
         MVC   TMSGCNT(5),PACKZER5 INITIALIZE COUNTER
         MVC   SMSGCNT(5),PACKZER5 INITIALIZE COUNTER
         MVC   MMSGCNT(5),PACKZER5 INITIALIZE COUNTER
         MVC   WK1TOTAL,MESTOTAL    INIT AREAS
         MVC   WK1NOUSR,MESNOUSR
         MVC   WK1ALL,MESALL
         MVC   STRNGM(10),BLANKS
         MVC   STRNGS(10),BLANKS
         MVI   ALLFLAG,X'00'
         MVI   TITLFLG,X'00'       Title has not yet been printed.
         MVI   BDMFLAG,X'00'
         MVI   BDSFLAG,X'00'
         MVI   MSGFLAG,X'00'
         MVI   SKPFLAG,X'00'
         MVI   MSGCFLG,X'00'
         MVI   SKPCFLG,X'00'
         MVC   WORKM,DUBLZERO
         MVC   WORKS,DUBLZERO
         MVC   COUNTM,FULLZERO
         MVC   COUNTS,FULLZERO
         MVC   DATAMSGS,TESTMSGS
         MVC   DATASKIP,TESTSKIP
         MVC   WKLBLNK(2),BLANKS
         MVC   MSGSWKL(5),BLANKS
         MVC   SKIPWKL(5),BLANKS
         MVI   SKLSFLAG,X'00'
         MVI   EESVERS,X'00'       Don't assume EESCB exists.
         L     R9,SAVER9E
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
GETPSCB  DS    0H
         ST    R9,SAVER9F
         L     R1,16               POINT TO CVT.
         L     R1,0(,R1)           POINT TO TCB/ASCB WORDS
         L     R1,4(,R1)           POINT TO TCB.
         L     R1,X'B4'(,R1)       POINT TO JSCB.
         L     R1,X'108'(,R1)      POINT TO PSCB.
         LA    R2,0(,R1)           CLEAR HIGH BYTE.  DUMP INTO R2
         L     R9,SAVER9F
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         USING CPPL,R4
CPPLPTRS DS    0H
         ST    R9,SAVER9G
         L     R6,CPPLUPT          SAVE CPPL POINTERS, SUCH AS:
         ST    R6,SAVEUPT             THE UPT
         L     R6,CPPLPSCB
         ST    R6,SAVEPSCB            THE PSCB
         L     R6,CPPLECT
         ST    R6,SAVEECT             THE ECT
         L     R6,CPPLCBUF
         ST    R6,CMBUFAD             THE COMMAND BUFFER ADDRESS
         ST    R4,SAVECPPL            AND THE CPPL ADDRESS ITSELF
         LA    R6,0
         L     R9,SAVER9G
         BR    R9
         DROP  R4
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*              TEST IF USER HAS PSCB AUTHORIZATION.               *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         USING PSCB,R2
CHEKAUTH DS    0H
         ST    R9,SAVER9H
         TM    PSCBATR1,PSCBACCT   ACCT USER?
         BO    CONT0               YES.  CONTINUE.
         TM    PSCBATR1,PSCBCTRL   OPER USER?
         BZ    EOJ4                NO.  GET OUT.
         DROP  R2
         L     R9,SAVER9H
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        GIVEN THE RBA AND THE USERID SLOT NUMBER,                *
*        GO FIND THE SYS1.BRODCAST USERID SLOT.                   *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
REFINDUS DS    0H                  GET USER SLOT GIVEN RBA AND SLOT #
         ST    R9,SAVER9I
         READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R2,MDLDECB+20       ADDRESS OF KEY
         CLI   0(R2),X'01'         USERID RECORD?
         BNE   BADEND
         LA    R2,0
         LA    R3,0
         IC    R3,MYUSSLOT         RESET SLOT NUMBER
         LR    R8,R3               LOAD SLOT NUMBER IN R8 FOR RETRY
         M     R2,=F'13'
         L     R5,MDLDECB+12       ADDRESS OF RECORD
         LA    R2,0(R3,R5)         FIND OUR SLOT
         LR    R3,R2               PUT IN R3 TO SET UP RETRY
* -- >
         LA    R6,9                RECONSTRUCT BCT REGISTER FOR RETRY
         XC    SAVER6A,SAVER6A     CLEAR SAVE AREA
         MVC   SAVER6A+3(1),MYUSSLOT   INSERT SLOT NUMBER
* -                               Diagnostic print - below
*        MVC   LINE,LINE-1
*        HEX   LINET,4,SAVER6A
*        LA    R0,45
*        BAL   R9,MSG
* -                               Diagnostic print - above
         S     R6,SAVER6A              RECALCULATE BCT REGISTER
* -- >
         MVC   UMSGCNT(3),PACKZERO   ZERO USERID MESSAGE COUNT
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         L     R9,SAVER9I
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        BUMP THROUGH THE MESSAGES HOOKED TO A USERID             *
*        AND WRITE THEM ALL OUT, USING PUTLINE SERVICE.           *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        R5 AND R7 MUST BE SAVED BEFORE ENTERING THIS ROUTINE
*        AND THEY MUST BE RESTORED RIGHT AFTER LEAVING THIS ROUTINE.
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
WRITLOOP DS    0H
         ST    R9,SAVER9J
         NI    SKLSFLAG,X'FF'-X'07'   TURN OFF ALL FLAGS
         XR    R5,R5               CLEAR R5 FOR REUSE IN THIS ROUTINE
         XR    R7,R7               CLEAR R7 FOR REUSE IN THIS ROUTINE
         CLC   COUNTS,=F'0'        HAVE WE CODED A SKIP COUNT?
         BE    WRLOOPTM
         OI    SKLSFLAG,X'01'      SHOW WE'RE SKIPPING
         L     R5,COUNTS
WRLOOPTM DS    0H
         CLC   COUNTM,=F'0'
         BE    WRLOOP
         OI    SKLSFLAG,X'02'      SHOW WE'RE LIMITING MESSAGES
         L     R7,COUNTM
         TM    SKLSFLAG,X'01'      ARE WE ALSO SKIPPING?
         BZ    WRLOOP              NO. R7 IS FINE. OTHERWISE,
         LA    R7,1(,R7)           THEN COMPENSATE BCT REGISTER
WRLOOP   READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               MESSRBA,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R2,MDLDECB+20       ADDRESS OF KEY
         CLI   0(R2),X'03'         IS THIS A GOOD MESSAGE ?
         BNE   WRITLEND            NO. WE HAVE NO BUSINESS BEING HERE
         L     R2,MDLDECB+12       ADDRESS OF RECORD
         USING USMSG,R2
         XR    R0,R0
         IC    R0,USMLNG           LENGTH FOR PUTLINE
         LR    R6,R0
         BCTR  R6,0                ADJUST LENGTH FOR EXECUTE
         EX    R6,MOVEMSG
WRLSKIP1 DS    0H
         TM    SKLSFLAG,X'01'      ARE WE SKIPPING MESSAGES?
         BO    WRLSKIP2            YES. PASS THE PRINTING STUFF.
         TM    SKLSFLAG,X'04'      LIMITING-AND HAVE PASSED THE LIMIT?
         BO    WRLSKIP2            YES. PASS THE PRINTING STUFF.
WRLLIMS1 DS    0H
         TM    SKLSFLAG,X'02'      ARE WE LIMITING MESSAGES?
         BZ    WRLLIMS2            NO. THEN PRINT THEM.
         TM    SKLSFLAG,X'04'      LIMITING-AND PASSED THE LIMIT?
         BO    WRLLIMS3            YES, DON'T PRINT THIS MESSAGE
WRLLIMS2 DS    0H
         BAL   R9,MSG              WRITE MESSAGE OUT
WRLLIMS3 DS    0H
WRLSKIP2 DS    0H
         AP    UMSGCNT,=P'1'       ADD TO USER MESSAGE COUNT
         AP    TMSGCNT,=P'1'       ADD TO TOTAL MESSAGE COUNT
         CLC   USMNEXT(3),ZEROS
         BE    WRITLEND
         MVC   MESSRBA(3),USMNEXT
         DROP  R2
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
WRLSKIP3 DS    0H
         TM    SKLSFLAG,X'01'      SKIPPING, AND NOT FINISHED?
         BZ    WRLSKIP4            FINISHED SKIPPING. NO BCT.
         BCT   R5,WRLOOP
         NI    SKLSFLAG,X'FF'-X'01'
WRLSKIP4 DS    0H
         TM    SKLSFLAG,X'04'      LIMITING, AND FINISHED WRITING?
         BO    WRLLIMS4            YEAH. BYPASS BCT.
         BCT   R7,WRLOOP
         OI    SKLSFLAG,X'04'      SHOW THAT YOU'VE FINISHED WRITING
WRLLIMS4 DS    0H
         B     WRLOOP
WRITLEND DS    0H
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         L     R9,SAVER9J
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        FINISH WRITING END MESSAGES FOR USERID.                  *
*        IF ALLFLAG IS ON, GO TO THE NEXT ID, AND IF NOT,         *
*        JUST GET OUT.                                            *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
WRITEND  DS    0H
         ST    R9,SAVER9K
         MVC   LINE,LINE-1
         MVC   WK1TOTAL,MESTOTAL               WRITE
         MVC   WK1TOTAL+5(7),TRYID               TOTALS
         MVC   WK1TOTAL+18(6),MASK6                LINE
         ED    WK1TOTAL+18(6),UMSGCNT
         MVC   LINE(L'WK1TOTAL),WK1TOTAL
         LA    R0,L'WK1TOTAL
         BAL   R9,MSG
         MVC   LINE,LINE-1                     WRITE
         MVC   LINE,MESSEND                      END OF USER LINE
         LA    R0,L'MESSEND
         BAL   R9,MSG
         CLI   ALLFLAG,X'FF'                   IF NOT ALL USERS
         BNE   NOTALL4                         JUST CLEAR LINE AND OUT
         MVC   LINE,LINE-1
         BAL   R9,MSG                          OTHERWISE SEPARATE
         MVI   LINE-1,C'*'                     USERS WITH A LINE
         MVC   LINE(55),LINE-1                 OF ASTERISKS.
         BAL   R9,MSG
NOTALL4  MVI   LINE-1,X'40'
         MVC   LINE,LINE-1
         L     R9,SAVER9K
         BR    R9
************************************************************
*        SET UP IOPL FOR PUTLINE                           *
************************************************************
         SPACE
         USING CPPL,R4
SETIOPL  DS    0H
         ST    R9,SAVER9L
         LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         DROP  R4
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15
         SPACE
         L     R15,CVTPTR          POINT TO CVT                  JDM1
         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1
         TM    CVTPUTL,X'80'       IS PUTLINE LOADED? (VS2)      JDM1
         BNO   PUTLOAD             NO - BRANCH TO LOAD
         L     R15,CVTPUTL         YES - USE CVTPUTL             JDM1
         DROP  R15                                               JDM1
         B     PUTLOADX            BRANCH AROUND LOAD
PUTLOAD  LA    R0,=CL8'IKJPUTL '
         LOAD  EPLOC=(0)
         LR    R15,R0              GET ENTRY ADDRESS
         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE
PUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS
         L     R9,SAVER9L
         BR    R9
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
PRTITLE  DS    0H
         ST    R9,SAVER9M
         MVC   LINE,LINE-1                  WRITE MESSAGE WITH
         MVC   LINE(MSGTLEN),MESSAGET         THE COUNTS OF RECORDS
         LA    R0,MSGTLEN                       THAT WERE ZEROED.
         BAL   R9,MSG
         MVC   LINE,LINE-1
         MVC   LINE(MSGCLEN),MESSAGEC
         LA    R0,MSGCLEN
         BAL   R9,MSG
         MVC   LINE,LINE-1
         LA    R0,20
         BAL   R9,MSG
         MVC   LINE,LINE-1                  CLEAR MESSAGE LINE
         MVC   DSNAMEN(44),JFCBDSNM         MOVE IN DSNAME
         MVC   LINE(133),DSNAMET            ENTIRE MESSAGE TO LINE
         LA    R0,74                        LENGTH OF ENTIRE MESSAGE
         BAL   R9,MSG                       WRITE THE MESSAGE
         MVC   LINE,LINE-1                  CLEAR MESSAGE LINE
         MVC   DSVOLSN(6),JFCBVOLS          MOVE IN VOLSER
         MVC   LINE(133),DSVOLST            ENTIRE MESSAGE TO LINE
         LA    R0,36                        LENGTH OF ENTIRE MESSAGE
         BAL   R9,MSG                       WRITE THE MESSAGE
*  EESCB stuff  -  below
         CLC   EESIDENT(8),=C'IKJEESCB'
         BNE   NOEESCB1
         CLI   EESVERS,X'03'
         BL    NOEESCB1
         CLC   JFCBDSNM(44),EESDSN
         BNE   NOTOFFIC
         CLC   JFCBVOLS(6),EESVOL
         BNE   NOTOFFIC
         B     YESOFFIC
NOTOFFIC DS    0H
         MVC   LINE,LINE-1
         MVC   LINE+10(L'MESNOFFL),MESNOFFL
         LA    R0,L'MESNOFFL+10
         BAL   R9,MSG
         B     EESCBEND
YESOFFIC DS    0H
         MVC   LINE,LINE-1
         MVC   LINE+10(L'MESYOFFL),MESYOFFL
         LA    R0,L'MESYOFFL+10
         BAL   R9,MSG
         B     EESCBEND
EESCBEND DS    0H
NOEESCB1 DS    0H
*  EESCB stuff  -  above
         MVC   LINE,LINE-1
         LA    R0,20
         BAL   R9,MSG
         L     R9,SAVER9M
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
************************************************************
*        PUTMSG ROUTINE                                    *
************************************************************
         SPACE
PUTMSG   STM   R14,R1,PUTSAVE
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTSAVE
         BR    R14
************************************************************
*        PUTLINE ROUTINE                                   *
************************************************************
         SPACE
PUTLINE  STM   R14,R1,PUTSAVE
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTSAVE
         BR    R14
         EJECT
*-----------------------------------------------------------------*
*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*
*-----------------------------------------------------------------*
*--------------------------------------------------------------------*
         SPACE
DSNAMET  DS    0CL133
         DC    CL30' BRODCAST Dataset Name  : '
DSNAMEN  DS    CL44
         DC    CL59' '
         SPACE
*--------------------------------------------------------------------*
         SPACE
DSVOLST  DS    0CL133
         DC    CL30' BRODCAST Dataset Volser: '
DSVOLSN  DS    CL6
         DC    CL97' '
         SPACE
*--------------------------------------------------------------------*
MESNOFFL DC    C'This BRODCAST Dataset IS NOT IN USE by the system.'
MESYOFFL DC    C'This BRODCAST Dataset IS IN USE by the system.'
*--------------------------------------------------------------------*
PACKZERO DC    PL3'0'
PACKZER5 DC    PL5'0'
DUBLZERO DC    D'0'
FULLZERO DC    F'0'
TESTMSGS DC    C'Limit  of MSGS to List                '
TESTSKIP DC    C'Number of MSGS to Skip                '
EDPAT    DC    X'40202020202020202120'
* - - - - - - - - - - - - - - - - - - - - - - - - *
MOVEID   MVC   NEWID(*-*),0(R1)    EXECUTED
         USING USMSG,R2
MOVEMSG  MVC   LINE(*-*),USMTEXT   EXECUTED
         DROP  R2
* - - - - - - - - - - - - - - - - - - - - - - - - *
MESSBLNK DS    0CL133
BLANKS   DC    CL10'          '    10 BLANKS
         DC    CL125' '
BLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER
ZEROS    DS    0CL8
ZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING
         DC    X'0000'
MESSAGET DC    C'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM '
MSGTLEN  EQU   *-MESSAGET
MESSAGEC DC    C'&COPYRGT &COPYRSV'
MSGCLEN  EQU   *-MESSAGEC
MESSAGE1 DC    C'Bad Open - ALLOC F(BRODCAST) DA(SYS1.BRODCAST) SH REU'
MESSAGE2 DC    C'Please enter the USERID name after Command name'
MESSAGE3 DC    C' A Userid cannot begin with MSGS( or SKIP( .   '
MESSAGE4 DC    C' Please use MSGS( or SKIP( after the Userid.   '
MESSEND  DC    C'* - - - - End of Messages for this User - - - - *'
MESTOTAL DC    C'User         has           Deferred TSO Messages'
MESALL   DC    CL60'Total Deferred TSO Messages in BRODCAST dataset.'
MESNOUSR DC    C'* - - No USERID Record for User          - - *'
MESPREND DC    C'?????  Preliminary End of USERID Records - - *'
MASK6    DC    XL6'402020202120'
MASK10   DC    XL10'40202020202020202120'
BPARM    DC    AL2(BPARME-BPARM,0),C'NON'
BPARME   EQU   *
         SPACE 3
BRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X
               BLKSIZE=129,        LENGTH OF FILES BLOCK               X
               DSORG=DA,           IS DIRECT ACCESS FILE               X
               MACRF=(RISXC,WIC),  3 BYTE RBA, DYNAMIC BUF, READ/CHECK X
               OPTCD=R,            3 BYTE RBA WILL BE USED             X
               RECFM=F,            FIXED LENGTH                        X
               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X
               KEYLEN=1,           SIZE OF KEY                         X
               BUFL=130,           KEYLEN + BLKSIZE                    X
               EXLST=JFCB1
         SPACE 3
         DS    0F                  NEEDED FOR CORRECT EXLST
JFCB1    DC    X'87'
         DC    AL3(INFMJFCB)
         IEFJFCBN LIST=YES
         LTORG
         SPACE
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         DS    0F
         SPACE 3
*-----------------------------------------------------------------*
*----         GETMAINED DATA AREA FIELDS                      ----*
*-----------------------------------------------------------------*
DATAAREA DSECT
SAVE     DS    9D
WORKM    DS    D
WORKS    DS    D
SAVER0R1 DS    D
SAVER5A  DS    F
SAVER5B  DS    F
SAVER6A  DS    F                   SAVE COUNT FOR USERID SCAN
SAVER6B  DS    F                   SAVE COUNT FOR USERID SCAN
SAVER6C  DS    F                   SAVE COUNT FOR USERID SCAN
SAVER6D  DS    F                   SAVE COUNT FOR USERID SCAN
SAVER6E  DS    F                   SAVE COUNT FOR USERID SCAN
SAVER6F  DS    F                   SAVE COUNT FOR USERID SCAN
SAVER7A  DS    F
SAVER7B  DS    F
SAVER9A  DS    F                   SAVE BAL REGISTER
SAVER9B  DS    F                   SAVE BAL REGISTER
SAVER9C  DS    F                   SAVE BAL REGISTER
SAVER9D  DS    F                   SAVE BAL REGISTER
SAVER9E  DS    F                   SAVE BAL REGISTER
SAVER9F  DS    F                   SAVE BAL REGISTER
SAVER9G  DS    F                   SAVE BAL REGISTER
SAVER9H  DS    F                   SAVE BAL REGISTER
SAVER9I  DS    F                   SAVE BAL REGISTER
SAVER9J  DS    F                   SAVE BAL REGISTER
SAVER9K  DS    F                   SAVE BAL REGISTER
SAVER9L  DS    F                   SAVE BAL REGISTER
SAVER9M  DS    F                   SAVE BAL REGISTER
SAVER9N  DS    F                   SAVE BAL REGISTER
SAVER9O  DS    F                   SAVE BAL REGISTER
SAVER9P  DS    F                   SAVE BAL REGISTER
SAVER9Q  DS    F                   SAVE BAL REGISTER
SAVER9R  DS    F                   SAVE BAL REGISTER
SAVER9S  DS    F                   SAVE BAL REGISTER
COUNTM   DS    F
COUNTS   DS    F
CMBUFAD  DS    F                   COMMAND BUFFER ADDRESS
SKLSFLAG DS    X
*              X'01' MEANS WE ARE SKIPPING RECORDS
*              X'02' MEANS WE ARE LIMITING RECORDS DISPLAYED
*              X'04' MEANS WE HAVE PASSED THE DISPLAY LIMIT
WKLBLNK  DS    CL2
MSGSWKL  DS    CL5                 THIS ONE FIRST FOR INIT TO BLANKS
SKIPWKL  DS    CL5
DATAMSGS DS    CL38                TEST MSGS AREA
         DC    CL45' '     PADDING
DATASKIP DS    CL38                TEST SKIP AREA
         DC    CL45' '     PADDING
NEWID    DC    C'        '         STORE PARM USERID HERE
         DS    CL8' '              PADDING
NEWIDU   DC    C'        '         UPPERCASED USERID PARM
ADDADR   DS    0CL12
UMSGCNT  DC    PL3'0'              COUNT OF MESSAGES FOR EACH USER
TMSGCNT  DC    PL5'0'              COUNT OF ALL MESSAGES DISPLAYED
SMSGCNT  DC    PL5'0'              COUNT OF SKIPPED MESSAGES
MMSGCNT  DC    PL5'0'              COUNT OF LISTED MESSAGES
NEXT     DS    F                   FOR IKJIFRIF ADD ADDRESS
OLDID    DC    C'        '         STORE OLD USERID HERE
SAVEPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR NEW USERID
SVMYPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR MY USERID
FINDPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR MY USERID
WRITPTRS DC    X'000000000000'     NEW MSG POINTER TO WRITE
CMPRPTRS DC    X'000000000000'     COMPARE POINTERS FOR FINDUSR RTN
OLDPSCBL DC    X'00'               STORE OLD PSCBUSRL HERE
NEWPSCBL DC    X'00'               STORE NEW PSCBUSRL HERE
BLOCKNO  DC    X'000000'           STORE BLOCK NUMBER FOR READ
LASTRBA  DC    X'000000'           STORE CURRENT RBA
SAVERBA  DC    X'000000'           STORE RBA FOR LATER READ
MYUSRBA  DC    X'000000'           STORE RBA OF MY USERID FOR LATER
NMSGRBA  DC    X'000000'           RBA OF NEXT MESSAGE
MESSRBA  DC    X'000000'           RBA OF CURRENT MESSAGE
MYUSSLOT DC    X'00'               STORE SLOT OF MY USERID IN RECORD
NWUSRBA  DC    X'000000'           STORE RBA OF NEW USERID FOR LATER
NWUSSLOT DC    X'00'               STORE SLOT OF NEW USERID IN RECORD
FNUSRBA  DC    X'000000'           RBA OF USERID TO BE FOUND
FNUSSLOT DC    X'00'               SLOT OF THIS USERID IN RECORD
USERID   DS    0CL8                STORE FOUND USERID HERE
USERIDI  DS    CL7                 STORE FOUND USERID HERE
USERIDF  DS    CL1                 8TH CHARACTER
FINDID   DS    0CL8                USERID NAME TO BE FOUND
FINDIDI  DS    CL7                 FIRST 7 CHARACTERS
FINDIDF  DS    CL1                 8TH CHARACTER
TRYID    DS    0CL8                STORE TEST USERID HERE
TRYIDI   DS    CL7                 STORE TEST USERID HERE
TRYIDF   DS    CL1                 8TH CHARACTER
SCANFLAG DC    X'00'               FLAG FOR USERID SCANS
COMPFLAG DC    X'00'               FLAG FOR USERID SCANS
         DS    0F                  ALIGN ON FULLWORD
SAVECPPL DS    F                   SAVE THE CPPL
SAVEUPT  DS    F                   SAVE FOR IKJIFRIF
SAVEPSCB DS    F                   SAVE FOR IKJIFRIF
SAVEECT  DS    F                   SAVE FOR IKJIFRIF
MYPPL    DS    7F
MYANS    DS    F
MYECB    DS    F                   USED BY PUTLINE ROUTINE
MYIOPL   DS    4F                  USED BY PUTLINE ROUTINE
MYPTPB   DS    3F                  USED BY PUTLINE ROUTINE
MYPUTLEP DS    F                   USED BY PUTLINE ROUTINE
MYOLD    DS    2F                  USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL130            USED BY PUTLINE ROUTINE
PUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE
LINEB    DS    C                   LINE-1
LINE     DS    CL133
LINET    EQU   LINE+7
         DS    0F
RDWR     READ  MDLDECB,DI,MF=L
RDWREND  DS    0F
RDWRLEN  EQU   *-RDWR
STOR0001 DS    2F
STOR1415 DS    2F
WK1TOTAL DC    C'                                                '
WK1ALL   DC    CL60' '
WK1NOUSR DC    C'                                              '
         DC    C' '
ALLFLAG  DS    X
TITLFLG  DS    X
MSGFLAG  DS    X
SKPFLAG  DS    X
BDMFLAG  DS    X
BDSFLAG  DS    X
MSGCFLG  DS    X
SKPCFLG  DS    X
STRNGM   DS    CL10
STRNGS   DS    CL10
DATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA
         IKJCPPL
         IKJUPT
         IKJPSCB
         IKJECT
         IKJIOPL
         IKJZT301 DSECT=YES
         IKJZT304 DSECT=YES
         IKJZT305 DSECT=YES
         IKJEESCB DSECT=YES
         CVT  DSECT=YES
         END
