BDMNLIST TITLE 'BDMNLIST - LIST BROADCAST NOTICES TO ALL USERS.'
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  DOCUMENTATION:   THIS PROGRAM MAY BE RUN AS A TSO-IN-BATCH         *
*                   COMMAND.   NEED NOT BE AUTHORIZED.                *
*                                                                     *
*       Copyright (C) 1995-2025 Sam Golob Systems Programming LLC     *
*                 All Rights Reserved                                 *
*                                                                     *
*         SYNTAX:   BDMNLIST                                          *
*                                                                     *
*       FUNCTION:   TO LIST BROADCAST NOTICES FOR ALL USERS, ON       *
*                   SYS1.BRODCAST, OR ON A COPY OF IT.                *
*                                                                     *
*          AUTHOR:  SAM GOLOB               VERSION:   1.5.0A         *
*                                                                     *
*            DATE:  APRIL 26, 05                                      *
*                                                                     *
*       EXECUTION:  ALLOC F(BRODCAST) DA('SYS1.BRODCAST') SH REUSE    *
*                                                                     *
*       NOTE:       BDMNLIST READS THE BRODCAST DATASET DIRECTLY,     *
*                   AND REPORTS THE NOTICES ONLY FROM IT.  AT         *
*                   PRESENT, IT DOES NOT READ THE INCORE COPY         *
*                   OF THE NOTICES POINTED TO BY CVTTVT (THE TSO      *
*                   VECTOR TABLE) AND THE NCT WHICH IS DESCRIBED      *
*                   IN MACRO IKJTSVT.  (THE INCORE NOTICES TABLE)     *
*                                                                     *
*       COMMENTS:   THIS PROGRAM PRODUCES A LISTING OF NOTICES THAT   *
*                   IS VERY SIMILAR TO THE LISTING PRODUCED BY THE    *
*                   "SEND LIST" SUBCOMMAND OF THE "OPER" TSO COMMAND, *
*                   EXCEPT THAT IF THERE ARE NO NOTICES, THERE IS     *
*                   A "BDM576I" MESSAGE ID, INSTEAD OF "IKJ576I".     *
*                                                                     *
*       CHANGES:    07/25/01  -  CLEANED OUT A LOT OF THE BDMLIST     *
*                   (VER 1.1)    CODE, AND ISSUED A MESSAGE IF A      *
*                                "NOTICES INDEX RECORD" IS CORRUPTED. *
*                                                                     *
*                   04/10/05  -  REPRESENT MESSAGE NUMBERS IN DECIMAL *
*                                INSTEAD OF IN HEX - LIKE LISTBC.     *
*                                                                     *
*                   04/26/05  -  FIX SITUATION IN WHICH INDEX RECORD  *
*                   (VER 1.4)    MARKS A MESSAGE AS USED, BUT THE     *
*                                MESSAGE LENGTH IS ZERO.              *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*       I N S T R E A M    M A C R O S                                *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         MACRO
         IKJZT301  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*        UPDATED                          31MAY95 SBG.
*
*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                                RECORD 1                             *
*                                                                     *
*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *
*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *
*        CONCERNING THE DATA SET.                                     *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
R1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET
         AGO   .SKIP
.NODSECT ANOP
R1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET
.SKIP    ANOP
R1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW
R1BCFLGS DS    B -            NOTICES FLAGS - NOT USED
R1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST
*                               NOTICES DIRECTORY RECORD
R1USPTRP DS    0A -           SAME AS R1USPTR BELOW
R1USFLGS DS    B -            USER MAIL FLAGS - NOT USED
R1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD
R1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS
R1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -
*                               FROM MASTER SCHEDULER BASEA, BABCMAX
*                                                                     *
R1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =
*                               ' SYS1.BRODCAST DATA SET '
R1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS
*                               A 1-DIGIT NUMBER
         DS    CL1 -          RESERVED
R1FRESRH DS    CL3 -          RBA OF FREE SEARCH RECORD
R1GENNUM DS    F -            GENERATION NUMBER FOR IN-STORAGE NOTICE
*                               TABLE
         DS    CL76 -         RESERVED
         MEND
         MACRO
         IKJZT302  &DSECT=YES
*        IKJZT302      RELEASE=OS/VS2.2   LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                        NOTICES DIRECTORY RECORD                     *
*                                                                     *
*        THE BROADCAST NOTICES DIRECTORY RECORD (BCDIR) HAS BROADCAST *
*        MESSAGE NUMBERS AND A POINTER TO THE MESSAGE RECORD          *
*        ASSOCIATED WITH EACH MSG. NUMBER.                            *
*                                                                     *
*        NOTE: THIS MACRO USES EQUATES GENERATED BY 'IEZBITS' MACRO.  *
*              THEREFORE, THE IEZBITS MACRO MUST BE CODED             *
*              PREVIOUS TO CALLING THIS MACRO.                        *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
BCDIR    DSECT , -
         AGO   .SKIP
.NODSECT ANOP
BCDIR    DS    0F
.SKIP    ANOP
BCDNENT  EQU   25             NUMBER OF ENTRIES
BCDENTRY DS    0CL5 -         ENTRY FOR 1 BROADCAST MSG NO.
BCDMFLG  DS    0BL1 -         BROADCAST DIRECTORY MSG. FLAG:
BCDNOMSG EQU   BIT0
*                               '1' = NO NOTICES MSG ASSIGNED
*                                     TO THIS MSG NUMBER
*                               '0' = NOTICES MSG FOR THIS NUMBER
*                                     IS ASSIGNED
BCDMSGNO DS    FL2 -          BROADCAST NOTICES MSG NO. IN HEX
BCDMRBA  DS    AL3 -          RELATIVE BLOCK ADDR OF NOTICE MSG RCD
         DS    24CL5 -        RESERVE SPACE FOR 24 MORE ENTRIES
*                               IDENTICAL IN FORMAT TO 'BCDENTRY'
BCDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'
BCDNEXT  DS    AL3 -          CHAIN PTR TO NEXT NOTICE DIRECTORY RCD
*                               (ZERO IF LAST)
         MEND  , */
         MACRO
         IKJZT303   &DSECT=YES
*        IKJZT303      RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                         NOTICES MESSAGE RECORD                      *
*                                                                     *
*          THE BRODCAST NOTICES MESSAGE RECORD (BCMSG) IS A           *
*          RECORD IN THE SYS1.BRODCAST DATA SET WHICH CONTAINS A      *
*          NOTICES MESSAGE INTENDED FOR ALL USERS.                    *
*                                           10/1/72     LEVEL=1       *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
BCMSG    DSECT , -            BRODCAST NOTICES MESSAGE RECORD
         AGO   .SKIP
.NODSECT ANOP
BCMSG    DS    0F -           BRODCAST NOTICES MESSAGE RECORD
.SKIP    ANOP
BCMLNG   DS    FL1 -          LENGTH OF BRODCAST NOTICES MSG TEXT
BCMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)
         DS    XL3 -          RESERVED
         MEND  , */
         SPACE
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    STM   15,1,HEXSAVE
         LA    1,&FROM
         LA    0,&LEN
         LA    15,&TO
         BAL   4,HEX
         LM    15,1,HEXSAVE
         MEND
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
*        REGS
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 1
SP000    EQU   0
         SPACE 1
         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV
         LCLC  &PGMNAME
&VERSNUM SETC  ' 1.5.0A'
&PKGNAME SETC  'BRODMSTR'
&PKGTITL SETC  'Broadcast Master'
&VERTITL SETC  ' Version '
&COPYRGT SETC  'Copyright (c) 1995-2025 Sam Golob Systems Programming'
&COPYRSV SETC  ' LLC - All Rights Reserved  '
&PGMNAME SETC  'BDMNLIST'
&PGMNAME AMODE 24
&PGMNAME RMODE 24
&PGMNAME CSECT
         USING &PGMNAME,R12,R10
         B     BEGINN-*(,R15)
         DC    CL8'&PGMNAME'
         DC    C' '
         DC    C'&PKGTITL'
         DC    C'&VERTITL'
         DC    C'&VERSNUM'
         DC    C' '
         DC    C'&COPYRGT'
         DC    C'&COPYRSV'
         DC    CL16' &SYSDATE &SYSTIME '
         DC    CL6'HLASM '
         DC    C'&SYSVER'
         DC    C' '
BEGINN   DS    0H
         STM   R14,R12,12(R13)
         LR    R12,R15
         LA    R10,4095(,R12)      LOAD SECOND BASE
         LA    R10,1(,R10)
         LR    R11,R1              PRESERVE CPPL POINTER.
         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         USING DATAAREA,R13
         BAL   R9,INITCON          INITIALIZE CONSTANTS IN DATA AREA
         SPACE 1
         BAL   R9,GETPSCB          GET PSCB IF ANY (IN R2)
         LTR   R2,R2               ANY PSCB?
         BZ    EOJ8                GET OUT.  NOT TSO.
         BAL   R9,CPPLPTRS         STORE STUFF OUT OF THE CPPL
         BAL   R9,SETIOPL          SET UP IOPL FOR PUTLINE
*        BAL   R9,CHEKAUTH         ARE WE OPER OR ACCT ?
CONT0    LTR   R11,R11             ANY CPPL?
         BZ    EOJ8                NO.  GET OUT
         L     R1,0(,R11)          PT TO CMD BUFFER.
         LTR   R1,R1               ANY CMD BUFFER?
         BZ    EOJ4                GET OUT IF NONE
         LH    R3,0(,R1)           LOAD LENGTH.
*        CH    R3,=H'4'            ANYTHING?
*        BNH   EOJ4                NO.  GET OUT.
         LR    R5,R3               LENGTH OF COMMAND + 4
         ICM   R5,14,FULLZERO      CLEAR HI ORDER 3 BYTES
         LH    R3,2(,R1)           LOAD OFFSET.
         SR    R5,R3               SUBTRACT OFFSET FROM FULL LENGTH+4
         SH    R5,=H'4'            CORRECT FOR LENGTH OF CMDBUFR HEADER
*        BC    8,WMESS2            ZERO, THIS PROGRAM IS RUN W/O PARAMS
*        BC    5,EOJ8              LESS, OR OVERFLOW, OUT.
* -- >  Title message - below
         MVC   LINE,LINE-1                  WRITE MESSAGE WITH
         MVC   LINE(MSGTLEN),MESSAGET         THE COUNTS OF RECORDS
         LA    R0,MSGTLEN                       THAT WERE ZEROED.
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE(MSGCLEN),MESSAGEC
         LA    R0,MSGCLEN
         BAL   R4,MSG
         MVC   LINE,LINE-1
         LA    R0,20
         BAL   R4,MSG
* -- >  Title message - above
DOBROD   OPEN  (BRODCAST,(INPUT))
         TM    BRODCAST+48,X'10'
         BNO   WMESS1
         BAL   R9,HEADREAD         READ HEADER RECORD AND EXTRACT
*                                  RBA OF FIRST NOTICES RECORD, AND
*                                  ALSO THE MAXIMUM NUMBER OF NOTICES
*                                  IN THIS BROADCAST DATASET.
* ------------------------------------------------------------------ *
* ---    MAIN LOOP TO READ EACH NOTICE RECORD.                   --- *
* ---     FIRST, WE HAVE TO GO THRU THE INDEX RECORDS            --- *
* ------------------------------------------------------------------ *
INDEXBC  DS    0H                  READ THROUGH NOTICE INDEX RECORDS
         MVC   SAVERBA(3),FSTNOTI    GET THE BALL ROLLING
INDXLOOP DS    0H
         CLC   SAVERBA(3),ZEROS    ARE WE AT THE END OF NOTICE INDEXES
         BE    ENDINDEX            END OF NOTICE INDEX RECORDS. FINISH.
*   PLEASE MAKE SURE THAT THIS REGISTER R7 ISN'T MESSED WITH, OR
*    IS PROPERLY SAVED, SO THE BCT INSTRUCTION IS PROPER, AND
*    NOTICES AREN'T MISSED.
         LA    R7,25               COUNT OF INDEXES PER RECORD
         MVC   BLOCKNO,SAVERBA     GET RBA FOR READ
         READ  MDIDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDIDECB
         L     R3,MDIDECB+20       ADDRESS OF RECORD
         CLI   0(R3),X'00'         NOTICE INDEX RECORD?
         BNE   BADEND              NO. ERROR.
         L     R3,MDIDECB+12       ADDRESS OF RECORD
         USING BCDIR,R3
         MVC   LASTRBA(3),SAVERBA  SAVE CURRENT RBA
         MVC   SAVERBA(3),BCDNEXT  GET NEXT RECORD'S RBA
         LA    R8,0                INITIALIZE INDEX SLOT COUNTER
         DROP  R3
*                       R3 IS STILL POINTING AT THE FIRST INDEX ENTRY
BCILOOP  DS    0H
         USING BCDENTRY,R3
* --->
*        MVC   LINE,LINE-1
*        HEX   LINE,5,BCDENTRY
*        LA    R0,20
*        BAL   R4,MSG
         MVC   LINE,LINE-1
* --->
         TM    0(R3),X'80'                   VALID NOTICE ?
         BO    TRYNEXT                       NO. BUMP TO NEXT ONE.
         CLC   BCDENTRY(5),=X'0000000000'    BLANK ENTRY?
         BE    TRYNEXT                       IF SO, JUST BUMP.
         MVC   SHOWNUMB(2),BCDMSGNO          SAVE NOTICE NUMBER
         MVC   SHOWRBA(3),BCDMRBA            SAVE NOTICE RBA
         ST    R9,SAVERG9
         BAL   R9,SHOWNOTE                   WRITE NOTICE OUT
         AP    BMSGCNT,=P'1'
         L     R9,SAVERG9
TRYNEXT  LA    R3,5(,R3)           BUMP LOCATION TO NEXT INDEX SLOT
         LA    R8,1(,R8)           BUMP COUNTER WITHIN RECORD
         BCT   R7,BCILOOP          TRY FOR ANOTHER NOTICE SLOT
*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.
         FREEDBUF MDIDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         B     INDXLOOP            END OF RECORD? GET ANOTHER.
         SPACE 3
* ------------------------------------------------------------------ *
* ---    END OF MAIN LOOP FOR NOTICES                            --- *
* ------------------------------------------------------------------ *
BADEND   MVC   LINE,LINE-1                COME HERE IF ID KEY NOT X'01'
         LA    R0,L'MESPREND               WRITE MESSAGE THAT
         MVC   LINE(L'MESPREND),MESPREND      THINGS ARE NOT
         BAL   R4,MSG                            SO GOOD.
*                                         GET HERE AT END OF USER RCDS
ENDINDEX DS    0H                            END OF NOTICES, COME HERE.
         CP    BMSGCNT,=P'0'
         BE    ENDNONE
         B     ZEROUT
ENDNONE  DS    0H                            NO NOTICES. ISSUE MESSAGE.
         MVC   LINE,LINE-1
         LA    R0,L'MESDONE
         MVC   LINE(L'MESDONE),MESDONE       BDM576I MESSAGE
         BAL   R4,MSG
         B     EOJ0                          CODE = 0
ZEROUT   DS    0H
         B     EOJ0                          CODE = 0
         SPACE 3
WMESS2   MVC   LINE,LINE-1                  NEVER EXECUTED IN
         MVC   LINE,MESSAGE2                  THIS PROGRAM
         LA    R0,L'MESSAGE2                    (NO KEYWORDS)
         BAL   R4,MSG
         B     EOJ4
WMESS1   MVC   LINE,LINE-1                  WRITE MESSAGE THAT
         MVC   LINE,MESSAGE1                  SYS1.BRODCAST NOT ALLOC'D
         LA    R0,L'MESSAGE1                    TO DDNAME BRODCAST.
         BAL   R4,MSG
         B     EOJ4
EOJ0     DS    0H
         LA    R5,0                    Zero Return Code
         B     EOJ
EOJ4     DS    0H
         LA    R5,4                    RC = 4
         B     EOJ
EOJ8     DS    0H
         LA    R5,8                    RC = 8
         B     EOJ
EOJ12    DS    0H
         LA    R5,12                   RC = 12
         B     EOJ
EOJ16    DS    0H
         LA    R5,16                   RC = 16
         B     EOJ
EOJ      DS    0H                      Normal Close and Exit.
         CLOSE (BRODCAST)
         LR    R1,R13
         L     R13,4(,R13)
         LA    R0,DATALEN
         FREEMAIN RU,LV=(R0),A=(R1),SP=SP000
         LR    R15,R5              Load return code into R15.
         ST    R15,16(,R13)        Put RC into passed save area.
         LM    R14,R12,12(R13)
         BR    R14                 Go back to system.
         EJECT
*-----------------------------------------------------------------*
*---*                S U B R O U T I N E S                    *---*
*-----------------------------------------------------------------*
         SPACE 2
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
GETPSCB  L     R1,16               POINT TO CVT.
         L     R1,0(,R1)           POINT TO TCB/ASCB WORDS
         L     R1,4(,R1)           POINT TO TCB.
         L     R1,X'B4'(,R1)       POINT TO JSCB.
         L     R1,X'108'(,R1)      POINT TO PSCB.
         LA    R2,0(,R1)           CLEAR HIGH BYTE.  DUMP INTO R2
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        READ THE SYS1.BRODCAST HEADER RECORD AND COPY FIELDS.    *
*
HEADREAD READ  MDIDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOKZERO,MF=E       RBA OF THE RECORD
         SPACE
         CHECK MDIDECB
         L     R3,MDIDECB+12       ADDRESS OF RECORD
         USING R1BC,R3             ADDRESSABILITY TO HEADER RECORD MAP
         MVC   FSTNOTI(3),R1BCPTR  SAVE RBA OF FIRST NOTICES INDEX
         MVC   NUMNOTES(2),R1BCMAX  SAVE MAXIMUM NUMBER OF NOTES
         DROP  R3
         FREEDBUF MDIDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
SHOWNOTE DS    0H
         MVC   MESSRBA(3),SHOWRBA
         READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               MESSRBA,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R2,MDLDECB+20       ADDRESS OF KEY
         CLI   0(R2),X'02'         IS THIS A GOOD NOTICE ?
         BNE   SHOWNOTN            NO. WE HAVE NO BUSINESS BEING HERE
         L     R2,MDLDECB+12       ADDRESS OF RECORD
         USING BCMSG,R2
         XR    R0,R0
         IC    R0,BCMLNG           LENGTH FOR PUTLINE
         LR    R6,R0               LOAD IT INTO R6
         BCTR  R6,0                SUBTRACT ONE FOR EXECUTE
*>BELOW<-COVER CASE IN WHICH MSG LENGTH WAS INCORRECTLY MARKED AS ZERO.
         C     R6,=X'FFFFFFFF'     IS R6 EQUAL TO MINUS ONE?
         BNE   SHOWNMIN            NO. THERE WON'T BE A PROBLEM.
         LA    R6,0                YES. SET IT EQUAL TO ZERO.
         MVC   LINE,LINE-1         DUPLICATE LINE BELOW.
         B     SHOWNMWR            SKIP MESSAGE MOVE BUT REPORT NUMBER.
SHOWNMIN DS    0H
*>ABOVE<-COVER CASE IN WHICH MSG LENGTH WAS INCORRECTLY MARKED AS ZERO.
         MVC   LINE,LINE-1         CLEAR MESSAGE LINE.
         EX    R6,MOVEMSG          MOVE MESSAGE TEXT TO BRODCAST BUFFER
SHOWNMWR DS    0H
         A     R0,=F'10'           TSO MESSAGE LENGTH OF 10
*        HEX   LINE+5,2,SHOWNUMB
         LH    R1,SHOWNUMB         LOAD REGISTER WITH HEX NUMBER
         CVD   R1,DWORD            CONVERT BLOCK COUNT TO DECIMAL
* ->
         MVC   WORK10,MASK10            Move in mask.
         ED    WORK10,DWORD+3           Make 10 digit number.
         MVC   LINE+5(4),BLANKMSG       INITIALIZE AREA TO BLANKS
         MVC   LINE(5),=C'MSGNO'        APPEND TITLE TO NUMBER
         MVC   LINE+5(4),WORK10+6       Take last 4 digits.
         CLI   LINE+6,C' '
         BNE   ZEROA
         MVI   LINE+6,C'0'
ZEROA    DS    0H
         CLI   LINE+7,C' '
         BNE   ZEROB
         MVI   LINE+7,C'0'
ZEROB    DS    0H
* ->
         BAL   R4,MSG                   AND SHOW THE MESSAGE ON SCREEN
SHOWNOTN DS    0H
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         BR    R9
MOVEMSG  MVC   LINE+10(*-*),BCMTEXT   EXECUTED
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
MSG      LA    R1,LINE             WRITE A LINE USING PUTLINE FACILITY
*        LOAD LENGTH OF MESSAGE INTO R0 BEFORE CALLING THIS ROUTINE.
         BAL   R14,PUTLINE
         MVC   LINE,LINE-1
         BR    R4
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEX      MVC   1(1,R15),0(R1)      MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         BR    R4                  RETURN TO CALLER
HEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        DATA AREAS THAT NEED TO BE INITIALIZED AT THE BEGINNING  *
*
INITCON  MVI   LINE-1,C' '         INITIALIZE BLANK
         MVC   LINE,LINE-1         BLANK THE MESSAGE LINE
         MVC   WORK10(10),BLANKMSG
         ZAP   BMSGCNT,=P'0'
         MVC   WK1NOUSR,MESNOUSR
         MVC   WK1ALL,MESALL
         MVI   ALLFLAG,X'00'
         MVC   WKLBLNK(2),BLANKS
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         USING CPPL,R11
CPPLPTRS L     R6,CPPLUPT          SAVE CPPL POINTERS, SUCH AS:
         ST    R6,SAVEUPT             THE UPT
         L     R6,CPPLPSCB
         ST    R6,SAVEPSCB            THE PSCB
         L     R6,CPPLECT
         ST    R6,SAVEECT             THE ECT
         L     R6,CPPLCBUF
         ST    R6,CMBUFAD             THE COMMAND BUFFER ADDRESS
         ST    R11,SAVECPPL           AND THE CPPL ADDRESS ITSELF
         LA    R6,0
         BR    R9
         DROP  R11
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*              TEST IF USER HAS PSCB AUTHORIZATION.               *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         USING PSCB,R2
CHEKAUTH TM    PSCBATR1,PSCBACCT   ACCT USER?
         BO    CONT0               YES.  CONTINUE.
         TM    PSCBATR1,PSCBCTRL   OPER USER?
         BZ    EOJ4                NO.  GET OUT.
         DROP  R2
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
************************************************************
*        SET UP IOPL FOR PUTLINE                           *
************************************************************
         SPACE
         USING CPPL,R11
SETIOPL  LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         DROP  R11
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15
         SPACE
         L     R15,CVTPTR          POINT TO CVT                  JDM1
         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1
         TM    CVTPUTL,X'80'       IS PUTLINE LOADED? (VS2)      JDM1
         BNO   PUTLOAD             NO - BRANCH TO LOAD
         L     R15,CVTPUTL         YES - USE CVTPUTL             JDM1
         DROP  R15                                               JDM1
         B     PUTLOADX            BRANCH AROUND LOAD
PUTLOAD  LA    R0,=CL8'IKJPUTL '
         LOAD  EPLOC=(0)
         LR    R15,R0              GET ENTRY ADDRESS
         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE
PUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS
         BR    R9
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
************************************************************
*        PUTMSG ROUTINE                                    *
************************************************************
         SPACE
PUTMSG   STM   R14,R1,PUTSAVE
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTSAVE
         BR    R14
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
************************************************************
*        PUTLINE ROUTINE                                   *
************************************************************
         SPACE
PUTLINE  STM   R14,R1,PUTSAVE
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTSAVE
         BR    R14
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         EJECT
*-----------------------------------------------------------------*
*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*
*-----------------------------------------------------------------*
BLANKMSG DC    CL125' '
DUBLZERO DC    D'0'
FULLZERO DC    F'0'
EDPAT    DC    X'40202020202020202120'
* - - - - - - - - - - - - - - - - - - - - - - - - *
BLANKS   DC    CL10'     '         10 BLANKS
BLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER
ZEROS    DS    0CL8
ZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING
         DC    X'0000'
MESSAGET DC    C'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM '
MSGTLEN  EQU   *-MESSAGET
MESSAGEC DC    C'&COPYRGT &COPYRSV'
MSGCLEN  EQU   *-MESSAGEC
MESSAGE1 DC    C'BAD OPEN - ALLOC F(BRODCAST) DA(SYS1.BRODCAST) SH REU'
MESSAGE2 DC    C'PLEASE ENTER THE USERID NAME AFTER COMMAND NAME'
MESSEND  DC    C'* - - - - NO BRODCAST NOTICES - - - - *'
MESTOTAL DC    C'USER         HAS           DEFERRED TSO MESSAGES'
MESALL DC C'TOTAL DEFERRED TSO MESSAGES IN SYS1.BRODCAST              '
MESNOUSR DC    C'* - - NO USERID RECORD FOR USER          - - *'
MESPREND DC    C'?????  PRELIMINARY END OF NOTICES  - - - - - *'
MESDONE  DC    C'BDM576I   NO BROADCAST MESSAGE '
MASK6    DC    XL6'402020202120'
MASK10   DC    XL10'40202020202020202120'
BPARM    DC    AL2(BPARME-BPARM,0),C'NON'
BPARME   EQU   *
         SPACE 3
BRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X
               BLKSIZE=129,        LENGTH OF FILES BLOCK               X
               DSORG=DA,           IS DIRECT ACCESS FILE               X
               MACRF=(RISXC,WIC),  3 BYTE RBA, DYNAMIC BUF, READ/CHECK X
               OPTCD=R,            3 BYTE RBA WILL BE USED             X
               RECFM=F,            FIXED LENGTH                        X
               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X
               KEYLEN=1,           SIZE OF KEY                         X
               BUFL=130            KEYLEN + BLKSIZE
         SPACE 3
         LTORG
         SPACE
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         DS    0F
         SPACE 3
*-----------------------------------------------------------------*
*----         GETMAINED DATA AREA FIELDS                      ----*
*-----------------------------------------------------------------*
DATAAREA DSECT
SAVE     DS    9D
DWORD    DC    D'0'
SAVER0R1 DS    D
SAVE4    DS    F
SAVERG4  DS    F
SAVERG5  DS    F
SAVERG7  DS    F
SAVERG9  DS    F
CMBUFAD  DS    F                   COMMAND BUFFER ADDRESS
WKLBLNK  DS    CL2
         DS    CL72                PADDING
BMSGCNT  DC    PL3'0'              COUNT OF MESSAGES FOR EACH NOTICE
NEXT     DS    F                   FOR IKJIFRIF ADD ADDRESS
NUMNOTES DC    X'0000'             MAX NUMBER OF NOTICE RECORDS
SAVEPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR NEW USERID
BLOCKNO  DC    X'000000'           STORE BLOCK NUMBER FOR READ
SHOWRBA  DC    X'000000'           STORE RBA OF NOTICE
SHOWNUMB DC    X'0000'             STORE NUMBER OF NOTICE
LASTRBA  DC    X'000000'           STORE CURRENT RBA
SAVERBA  DC    X'000000'           STORE RBA FOR LATER READ
FSTNOTI  DC    X'000000'           STORE RBA OF FIRST NOTICE INDEX
NMSGRBA  DC    X'000000'           RBA OF NEXT MESSAGE
MESSRBA  DC    X'000000'           RBA OF CURRENT MESSAGE
         DS    0F                  ALIGN ON FULLWORD
SAVECPPL DS    F                   SAVE THE CPPL
SAVEUPT  DS    F                   SAVE FOR IKJIFRIF
SAVEPSCB DS    F                   SAVE FOR IKJIFRIF
SAVEECT  DS    F                   SAVE FOR IKJIFRIF
SAVER7   DS    F                   SAVE COUNT FOR USERID SCAN
HEXSAVE  DS    3F                  SAVE FOR HEX MACRO
MYPPL    DS    7F
MYANS    DS    F
MYECB    DS    F                   USED BY PUTLINE ROUTINE
MYIOPL   DS    4F                  USED BY PUTLINE ROUTINE
MYPTPB   DS    3F                  USED BY PUTLINE ROUTINE
MYPUTLEP DS    F                   USED BY PUTLINE ROUTINE
MYOLD    DS    2F                  USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL130            USED BY PUTLINE ROUTINE
PUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE
LINEB    DS    C                   LINE-1
LINE     DS    CL133
LINET    EQU   LINE+7
         DS    0F
RDWR     READ  MDLDECB,DI,MF=L     NOTICE READ
RDWREND  DS    0F
RDWRLEN  EQU   *-RDWR
RDWI     READ  MDIDECB,DI,MF=L     INDEX READ
RDWIEND  DS    0F
RDWILEN  EQU   *-RDWI
WK1TOTAL DC    C'                                                '
WK1ALL DC C'                                                          '
WK1NOUSR DC    C'                                              '
ALLFLAG  DS    X
WORK10   DC    XL10'00'
         SPACE 1
DATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA
         IKJCPPL
         IKJUPT
         IKJPSCB
         IKJECT
         IKJIOPL
         IKJZT301 DSECT=YES
         IEZBITS
         IKJZT302 DSECT=YES
         IKJZT303 DSECT=YES
         CVT  DSECT=YES
         END
