BDMULOAD TITLE 'BDMULOAD - EXTRACT USERIDS DEFINED TO SYS1.BRODCAST'
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  Documentation:   This program is a batch program which bulk        *
*                   loads a file of userid names into a BRODCAST      *
*                   Dataset.  The BRODCAST Dataset has to have        *
*                   no userids in it currently.  For example,         *
*                   if the BRODCAST Dataset was initialized by the    *
*                   BDMINIT program, it is a candidate for loading    *
*                   of userids by this BDMULOAD program.              *
*                                                                     *
*       Copyright (C) 1995-2025 Sam Golob Systems Programming LLC     *
*                 All Rights Reserved                                 *
*                                                                     *
*       Batch Program - Execution JCL                                 *
*                                                                     *
*  //  JOB CARD                                                       *
*  //*----------------------------------------------------------*//   *
*  //*   BDMULOAD EXECUTION - BULK LOAD OF USERIDS INTO EMPTY   *//   *
*  //*                        BRODCAST DATASET                  *//   *
*  //*----------------------------------------------------------*//   *
*  //GETUSERS EXEC PGM=BDMULOAD                                       *
*  //STEPLIB  DD DISP=SHR,DSN=SBGOLOB.BRODMSTR.LOADLIB                *
*  //BRODCAST DD DISP=SHR,DSN=newly.initted.brodcast.dataset          *
*  //SYSPRINT DD SYSOUT=*                                             *
*  //UIDPRES  DD SYSOUT=*                                             *
*  //BDMUSIN  DD DISP=SHR,DSN=input.sorted.userid.file                *
*  //BDMUSOUT DD DSN=error.user.dump.file,DISP=(,CATLG,DELETE),       *
*  //    UNIT=SYSALLDA,                                               *
*  //    DCB=(RECFM=FB,LRECL=8,BLKSIZE=8000,DSORG=PS),                *
*  //    SPACE=(TRK,(15,15),RLSE),VOL=SER=WORK04                      *
*  //SYSUDUMP DD SYSOUT=*                                             *
*                                                                     *
*  Function:   To load all userids from a BDMUSOUT format file        *
*              into an initialized BRODCAST Dataset.                  *
*                                                                     *
*  Author:     Sam Golob               Version:   1.5.0               *
*                                                                     *
*  Date:       Dec 17, 2006                                           *
*                                                                     *
*  Changes:    12/17/06 -                                             *
*                                                                     *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*       I N S T R E A M    M A C R O S                                *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         MACRO
         IKJZT301  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*        UPDATED                          31MAY95 SBG.
*
*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                                RECORD 1                             *
*                                                                     *
*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *
*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *
*        CONCERNING THE DATA SET.                                     *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
R1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET
         AGO   .SKIP
.NODSECT ANOP
R1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET
.SKIP    ANOP
R1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW
R1BCFLGS DS    B -            NOTICES FLAGS - NOT USED
R1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST
*                               NOTICES DIRECTORY RECORD
R1USPTRP DS    0A -           SAME AS R1USPTR BELOW
R1USFLGS DS    B -            USER MAIL FLAGS - NOT USED
R1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD
R1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS
R1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -
*                               FROM MASTER SCHEDULER BASEA, BABCMAX
*                                                                     *
R1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =
*                               ' SYS1.BRODCAST DATA SET '
R1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS
*                               A 1-DIGIT NUMBER
         DS    CL1 -          RESERVED
R1FRESRH DS    CL3 -          RBA OF FREE SEARCH RECORD
R1GENNUM DS    F -            GENERATION NUMBER FOR IN-STORAGE NOTICE
*                               TABLE
         DS    CL76 -         RESERVED
         MEND
         MACRO
         IKJZT304  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*
*        IKJZT304       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                       USER MAIL DIRECTORY RECORD                    *
*                                                                     *
*        THE USER MAIL DIRECTORY RECORD (USDIR) IS A LOGICAL          *
*        DIRECTORY RECORD IN THE SYS1.BRODCAST DATA SET.              *
*        THE DIRECTORY CONTAINS USERIDS AND PTRS TO THE FIRST AND     *
*        LAST MESSAGE FOR EACH USERID.                                *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
USDIR    DSECT , -            USER MAIL DIRECTORY RECORD
         AGO   .SKIP
.NODSECT ANOP
USDIR    DS    0F -           USER MAIL DIRECTORY RECORD
.SKIP    ANOP
USDENTRY DS    0CL13 -        DIRECTORY ENTRY FOR 1 USERID
USDID    DS    CL7 -          USERID (LEFT JUSTIFIED, PADDED W/ BLANKS)
USDRBA   DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST
*                               MESSAGE FOR THIS USERID (ZERO IF NONE)
USDEND   DS    AL3 -          RBA OF LAST MESSAGE FOR THIS USERID
*                               (ZERO IF NONE)
         DS    8CL13 -        RESERVE SPACE FOR 8 MORE DIRECTORY
*                               ENTRIES IDENTICAL IN FORMAT TO THE
*                               PRECEDING 'USDENTRY'
         DS    XL8 -          RESERVED
USDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'
USDNEXT  DS    AL3 -          CHAIN PTR TO NEXT USER MAIL DIRECTORY
*                               RECORD (ZERO IF LAST)
         MEND
         MACRO
         IKJZT305  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*
*        IKJZT305       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                        USER MAIL MESSAGE RECORD                     *
*                                                                     *
*        THE USER MAIL MESSAGE RECORD (USMSG) IS A RECORD IN          *
*        THE SYS1.BRODCAST DATA SET WHICH CONTAINS A MAIL MESSAGE     *
*        INTENDED FOR A PARTICULAR USERID.                            *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
USMSG    DSECT , -            USER MAIL MESSAGE RECORD
         AGO   .SKIP
.NODSECT ANOP
USMSG    DS    0F -           USER MAIL MESSAGE RECORD
.SKIP    ANOP
USMLNG   DS    FL1 -          LENGTH OF MAIL MSG TEXT
USMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)
USMNEXT  DS    AL3 -          CHAIN PTR TO NEXT MAIL MESSAGE RECORD
*                               FOR THIS USERID (ZERO IF LAST)
         MEND
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    STM   15,1,HEXSAVE
         LA    1,&FROM
         LA    0,&LEN
         LA    15,&TO
         BAL   4,HEX
         LM    15,1,HEXSAVE
         MEND
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
*        Register Equates
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 1
SP000    EQU   0
         SPACE 1
         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV
         LCLC  &PGMNAME
&VERSNUM SETC  ' 1.5.0A'
&PKGNAME SETC  'BRODMSTR'
&PKGTITL SETC  'Broadcast Master'
&VERTITL SETC  ' Version '
&COPYRGT SETC  'Copyright (c) 1995-2025 Sam Golob Systems Programming'
&COPYRSV SETC  ' LLC - All Rights Reserved  '
&PGMNAME SETC  'BDMULOAD'
&PGMNAME AMODE 24
&PGMNAME RMODE 24
&PGMNAME CSECT
         B     BEGINN-*(,R15)       Branch over Eyecatchers
         DC    CL8'&PGMNAME'
         DC    C' '
         DC    C'&PKGTITL'
         DC    C'&VERTITL'
         DC    C'&VERSNUM'
         DC    C' '
         DC    C'&COPYRGT'
         DC    C'&COPYRSV'
         DC    CL16' &SYSDATE &SYSTIME '
         DC    CL6'HLASM '
         DC    C'&SYSVER'
         DC    C' '
BEGINN   DS    0H
         STM   R14,R12,12(R13)
         USING BDMULOAD,R12,R11,R10
         LR    R12,R15              Set up base registers
         LA    R11,4095(,R12)
         LA    R11,1(,R11)
         LA    R10,4095(,R11)
         LA    R10,1(,R10)
         LR    R5,R1                Preserve PARM Pointer.
         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         USING DATAAREA,R13
         ST    R5,SAVEPRM           PARM Pointer to Data Area Field
         L     R1,SAVEPRM           Restore PARM Pointer
         BAL   R9,INITCON           Initialize Constants in Data Area
         SPACE 1
* ----------------------------------------------------------------- *    06223
TIOTSCAN DS    0H             Determine the presence of DD names in      06224
*                             the JCL:  BRODCAST, BDMUSIN, UIDPRES,      06225
*                                       BDMUSOUT.                        06225
* ----->                      Then OPEN them if there is JCL for them.   06226
* ----->                      Then test the OPEN if it was good.         06226
* ----->                      Set DDNFLAG on if the appropriate DD       06226
* ----->                       was in the JCL.                           06226
* ----->                      Set BDMNOFLG on if the appropriate OPEN    06226
* ----->                       for the DD DIDN'T WORK!!!                 06226
* ----------------------------------------------------------------- *    06227
         MVI   DDNFLAG,X'00'        ZERO OUT DDNFLAG - Nothing OPEN
         ST    R3,SAVER3            Save work registers
         ST    R5,SAVER5
         L     R5,16                R5=CVT                               06228
         L     R5,0(,R5)            R5=TCB WORDS                         06229
         L     R5,4(,R5)            R5=MY TCB                            06230
         L     R5,12(,R5)           R5=TIOT                              06231
         LA    R5,24(,R5)           R5=FIRST DD ENTRY                    06232
TIOTLOOP CLC   0(4,R5),=XL4'00'     END OF TIOT?                         06233
         BE    TIOTSEND             Yes. Go on with OPENs.               06234
         CLC   4(8,R5),BRODCASN     BRODCAST DDNAME there?               06235
         BNE   TIOTPRTN             No                                   06236
         OI    DDNFLAG,X'01'        Show presence of BRODCAST DD         06237
         B     TIOTNEXT             Try next entry                       06238
TIOTPRTN CLC   4(8,R5),BDMUSINN     BDMUSIN DDNAME there?                06239
         BNE   TIOTUSRN             No                                   06240
         OI    DDNFLAG,X'02'        Show presence of BDMUSIN DD          06241
         B     TIOTNEXT             Try next entry                       06242
TIOTUSRN CLC   4(8,R5),UIDPRESN     UIDPRES DDNAME there?                06239
         BNE   TIOTUSON             No                                   06240
         OI    DDNFLAG,X'04'        Show presence of UIDPRES  DD         06241
         B     TIOTNEXT             Try next entry                       06242
TIOTUSON CLC   4(8,R5),BDMUSOUN     BDMUSOUT DDNAME there?               06239
         BNE   TIOTSYSP             No                                   06240
         OI    DDNFLAG,X'08'        Show presence of BDMUSOUT DD         06241
         B     TIOTNEXT             Try next entry                       06242
TIOTSYSP CLC   4(8,R5),SYSPRINN     SYSPRINT DDNAME there?               06239
         BNE   TIOTNEXT             No                                   06240
         OI    DDNFLAG,X'10'        Show presence of SYSPRINT DD         06241
         B     TIOTNEXT             Try next entry                       06242
TIOTNEXT SR    R3,R3                                                     06243
         IC    R3,0(,R5)            R3=LENGTH OF DD ENTRY                06244
         AR    R5,R3                R5=NEXT DD ENTRY                     06245
         B     TIOTLOOP             GO CHECK IT                          06246
TIOTSEND DS    0H                                                        06247
         L     R3,SAVER3            Restore work registers
         L     R5,SAVER5
         B     WTOULOAD             Jump over Constants
* ---- >     - - - - - - - - - - - -
BRODCASN DC    CL8'BRODCAST'        Literals for the DD names.
BDMUSINN DC    CL8'BDMUSIN'
BDMUSOUN DC    CL8'BDMUSOUT'
UIDPRESN DC    CL8'UIDPRES '
SYSPRINN DC    CL8'SYSPRINT'
* ---- >     - - - - - - - - - - - -
WTOULOAD DS    0H
         HEX   DDNREPR,1,DDNFLAG
         MVC   DIAGWTO+8(8),=C'BDMUL01I'
         MVC   DIAGWTO+21(7),=C'DDNFLAG'
         MVI   DIAGWTO+29,C'='
         MVC   DIAGWTO+31(2),DDNREPR
         TM    DDNFLAG,X'19'
         BNO   DIAGGOON
         MVC   DIAGWTO+40(9),=C' - OK -  '
DIAGGOON DS    0H
DIAGWTO  WTO   '                              * diagnosis *',ROUTCDE=11X
               ,DESC=7
         TM    DDNFLAG,X'01'
         BO    NOUSERID
         WTO   'BDMUL00I     ----------------------------  ',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMUL10E     BRODCAST DD Name is missing...',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMUL00I     ----------------------------  ',ROUTCDE=11X
               ,DESC=7
NOUSERID DS    0H
         TM    DDNFLAG,X'02'
         BO    NOBDMUSI
         WTO   'BDMUL00I     ------------------------------',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMUL07I     //BDMUSIN DD input is needed. ',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMUL06I     Reports are for Diagnosis only',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMUL00I     ------------------------------',ROUTCDE=11X
               ,DESC=7
NOBDMUSI DS    0H
         TM    DDNFLAG,X'04'
         BO    NOUIDDIA
         WTO   'BDMUL00I     ------------------------------',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMUL08I     //UIDPRES DD SYSOUT=* Optional',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMUL00I     ------------------------------',ROUTCDE=11X
               ,DESC=7
NOUIDDIA DS    0H
         TM    DDNFLAG,X'08'
         BO    NOBDMUSO
         WTO   'BDMUL00I     ----------------------------  ',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMUL10E     BDMUSOUT DD Name is missing...',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMUL00I     ----------------------------  ',ROUTCDE=11X
               ,DESC=7
NOBDMUSO DS    0H
         TM    DDNFLAG,X'10'
         BO    NOSYSPRI
         WTO   'BDMUL00I     ----------------------------  ',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMUL10E     SYSPRINT DD Name is missing...',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMUL00I     ----------------------------  ',ROUTCDE=11X
               ,DESC=7
NOSYSPRI DS    0H
TSTEOJ16 DS    0H
         TM    DDNFLAG,X'19'    Change if testing more DD Names
         BO    DOOPENS
         WTO   'BDMUL00I     ----------------------------  ',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMUL09E     Please correct your JCL.......',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMUL00I     ----------------------------  ',ROUTCDE=11X
               ,DESC=7
         B     EOJ16
* ---------------------------------------------------------------- *
*                                                                  *
*   OPEN FILES -                                                   *
*                                                                  *
*    When we're finished here, we should have a good idea about    *
*    how the DD names were coded in the JCL, and which files were  *
*    actually opened.  We use 2 flags:  DDNFLAG (if on) shows      *
*    that the DD name was actually coded in the JCL.  BDMNOFLG     *
*    (if on) shows that the actual file is NOT OPEN.  In either    *
*    flag:                                                         *
*                                                                  *
*    BRODCAST DD  -  flag = X'01'                                  *
*    BDMUSIN  DD  -  flag = X'02'                                  *
*    UIDPRES  DD  -  flag = X'04'                                  *
*    BDMUSOUT DD  -  flag = X'08'                                  *
*    SYSPRINT DD  -  flag = X'10'                                  *
*                                                                  *
* ---------------------------------------------------------------- *
DOOPENS  DS    0H                   OPEN SYSPRINT and print titles
         OPEN  (SYSPRINT,(OUTPUT))
         PUT   SYSPRINT,TITLINE
         PUT   SYSPRINT,CPYRLINE
         PUT   SYSPRINT,ULOTITLE
         PUT   SYSPRINT,BLNKLINE
         TM    DDNFLAG,X'01'        Is BRODCAST DD in JCL?
         BZ    NOBRODDD             No. Don't OPEN. Flag as Bad OPEN.
         OPEN  (BRODCAST,(UPDAT))
         TM    BRODCAST+48,X'10'    Did the OPEN work?
         BO    TRYOOPN1             Yes. Go OPEN the other files.
NOBRODDD DS    0H
         OI    BDMNOFLG,X'01'       Flag that BRODCAST DD is not OPEN
*        B     TRYOOPNO
TRYOOPN1 DS    0H
         TM    DDNFLAG,X'02'        Is BDMUSIN DD in JCL?
         BZ    NOUOUTDD             No. Don't OPEN. Flag as Bad OPEN.
         OPEN  (BDMUSIN,(INPUT))
         TM    BDMUSIN+48,X'10'     Did the OPEN work?
         BO    USOUTOPN             Yes. Don't flag that it didn't.
NOUOUTDD DS    0H
         OI    BDMNOFLG,X'02'       Flag that BDMUSIN DD is not OPEN
         B     TRYOOPN2             Go to the next DD name.
USOUTOPN DS    0H                   Report on BDMUSIN Characteristics
* ----------------------------------------------------------------- *
*   BDMUSIN has to be OPEN here, because we branched if not OPEN.   *
* ----------------------------------------------------------------- *
         RDJFCB BRODCAST
         MVC   OUTLINE,OUTLINE-1    Clear work area for output line
         MVC   OUTLINE,MSGDSN       Move in message skeleton
         TM    DDNFLAG,X'07'        3 DD'S are OPEN?
         BO    TRYOOPN2             Yes-then don't print here yet.
         BAL   R6,PRTJFCB           Has to be Diagnostics Only.
TRYOOPN2 DS    0H
         TM    DDNFLAG,X'04'        UIDPRES DD present?
         BZ    NOUIDDDD             No. So don't try to OPEN it.
         OPEN  (UIDPRES,(OUTPUT))
         TM    UIDPRES+48,X'10'     Did the OPEN work?
         BO    PUTUIDTL             Yes. So put out title information.
NOUIDDDD DS    0H
         OI    BDMNOFLG,X'04'       Flag that UIDPRES DD is not OPEN.
         B     TRYOOPNO             If so, no UID report. But go on.
PUTUIDTL DS    0H                   Begin printing UID Diagnostics.
         PUT   UIDPRES,TITLINE
         PUT   UIDPRES,CPYRLINE
         PUT   UIDPRES,UIDTITLE
         PUT   UIDPRES,BLNKLINE
         TM    DDNFLAG,X'07'        3 DD'S are OPEN?
         BNO   OUTNDIAG             Not all OPEN. Don't print JFCB here
         BAL   R6,PRTJFCB           Print characteristics of BDMUSIN
OUTNDIAG DS    0H                   Diagnostics only message.
         TM    DDNFLAG,X'02'        BDMUSIN there?
         BO    NOMSG3               Yes. No Diagnosis Only report.
         TM    DDNFLAG,X'05'        BRODCAST and UIDPRES only?
         BNO   NOMSG3               Not this combination. Omit message.
         BAL   R6,DIAGONLY          Diagnostics report only, for UIDs.
NOMSG3   DS    0H                   Finish up UID report Header.
         PUT   UIDPRES,UIDDESCL
         PUT   UIDPRES,UIDDASH
         PUT   UIDPRES,BLNKLINE
TRYOOPNO DS    0H
         TM    DDNFLAG,X'03'        BRODCAST and BDMUSIN DDs there?
         BO    TRYUSOUT             They are there, so go on.
         TM    DDNFLAG,X'05'        BRODCAST and UIDPRES DDs there?
         BO    TRYUSOUT             They are there, so go on.
         B     WMESS                They are not there - Error & Exit.
TRYUSOUT DS    0H
         TM    DDNFLAG,X'08'        Is BDMUSOUT OPEN?
         BZ    HREAD                No. Don't try to OPEN it.
         OPEN  (BDMUSOUT,(OUTPUT))
         TM    BDMUSOUT+48,X'10'    Did the OPEN work?
         BO    BDMUSGUD             Yes, it was good. Go on.
         OI    BDMNOFLG,X'08'       Mark that it was not OPENed.
BDMUSGUD DS    0H
*
*
* ------------------------------------------------------------------ *
HREAD    DS    0H
         BAL   R9,HEADREAD         Read Header Record and extract
*                                  RBA of first UID record to search.
*                                  This value is stored in SAVERBA(3).
* ------------------------------------------------------------------ *
* ---     Check that there are no USERIDs in BRODCAST now,       --- *
* ---     and if there are any, dump them into BDMUSOUT          --- *
* ---     and stop the program withoug doing any loading.        --- *
* ------------------------------------------------------------------ *
INDEXUS  DS    0H                  Read through USERID records
         CLC   SAVERBA(3),ZEROS    Are we at the end of USERID records?
         BE    END1PASS            End of USERID record chain.
         ZAP   SLOTCNT,=P'0'       New slot count for new READ.
         LA    R7,9                Count of USERIDS per record.
         MVC   BLOCKNO,SAVERBA     Get RBA for READ.
         READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R3,MDLDECB+12       Address of Record
         USING USDIR,R3
         MVC   LASTRBA(3),SAVERBA  Save current RBA.
         MVC   UIDPRBA(3),SAVERBA  Save current RBA for UID report.
         MVC   SAVERBA(3),USDNEXT  Get next record's RBA.
         LA    R8,0                Initialize USERID slot counter.
USRLOOP  DS    0H
         AP    SLOTCNT,=P'1'       Count which slot this is.
         MVC   USERID(8),BLANKS    Ensure blank in 8th place.
         MVC   USERIDI(7),USDID    Copy who this is.
         CLC   USERIDI(7),ZEROS    Is this a real user?
         BE    GOTZERO             No. This is actually what we want.
         OI    NONEMFLG,X'01'      Exist real id's here. Can't load.
         TM    BDMNOFLG,X'08'      Is BDMUSOUT not OPEN?
         BO    NXBDMUSO            Yes. Can't PUT anything to it.
         PUT   BDMUSOUT,USERID     PUT out this ID to output file,
*                                   so if we need to, we can reload
*                                   it later.
NXBDMUSO DS    0H
         AP    USERCNT,=P'1'       Increment user counter.
         TM    BDMNOFLG,X'04'        UIDPRES not OPEN?
         BO    NOUIDPRT               Then we can't do UID print out.
*
* -- > This is the guts of the UID diagnostics report - below
*
         MVC   SLOTLINE(133),SLOTLINE-1    Clear slot line.
         MVC   SLOTLINE+5(10),MASK10       Move in mask.
         ED    SLOTLINE+5(10),USERCNT      Count of all Userids.
         MVC   SLOTLINE+20(8),USERID       Name of this Userid.
         HEX   SLOTLINE+30,3,UIDPRBA       Hex display of record's RBA
         MVC   SLOTLINE+40(10),BLNKLINE    Prepare for Decimal display
         L     R5,UIDPRB                   Get RBA number
         CVD   R5,DWORK                    Convert it to decimal
         MVC   SLOTLINE+40(7),MASK7A       Move in edit mask
         ED    SLOTLINE+40(7),DWORK+5      Edit the Decimal number in
         MVC   SLOTLINE+50(6),MASK6        Report which slot this is
         ED    SLOTLINE+50(6),SLOTCNT+4    Edit the slot number
         MVC   SLOTLINE+54(30),BLNKLINE    Clean out rest of the line.
         PUT   UIDPRES,SLOTLINE
         MVC   SLOTLINE(133),SLOTLINE-1    Clear the entire SLOT line.
NOUIDPRT DS    0H
*
* -- > This is the guts of the UID diagnostics report - above
*
GOTZERO  DS    0H
         AP    EMPTYCNT,=P'1'              Count empty slots we have.
TRYNEXT  DS    0H
         LA    R3,13(,R3)            Bump location to next USERID.
         LA    R8,1(,R8)             Bump counter within record.
         BCT   R7,USRLOOP            Try for another user entry.
*                           Free buffers before getting another record.
         FREEDBUF MDLDECB,           DECB ADDR USED TO READ            X
               D,                    USED BDAM READ                    X
               BRODCAST              DCB FOR PROCESS DATA SET
         B     INDEXUS               END OF RECORD? GET ANOTHER.
         SPACE 3
* ------------------------------------------------------------------ *
* ---    END OF FIRST LOOP FOR USERIDS.                          --- *
* ------------------------------------------------------------------ *
BADEND   MVC   LINE,LINE-1                COME HERE IF ID KEY NOT X'01'
*        LA    R0,L'MESPREND+7             WRITE MESSAGE THAT
         MVC   LINET(L'MESPREND),MESPREND     THINGS ARE NOT
         PUT   SYSPRINT,LINE                     SO GOOD.
* ------------------------------------------------------------------ *
*        *---------------------------------------------------*       *
*        *  GET HERE AT END OF FIRST PASS THRU USER RECORDS  *       *
*        *---------------------------------------------------*       *
*        *  The idea was to measure how many empty slots we  *       *
*        *   have, so we can see how many USERIDs fit in.    *       *
*        *---------------------------------------------------*       *
* -- >      Put out the Summary Report line....                      *
* ------------------------------------------------------------------ *
END1PASS DS    0H                         End of pass thru UID slots.
         MVC   LINE,LINE-1                Print blank line.
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   WK1ALL,USRALL              Show how many real UIDs are
         MVC   WK1ALL+46(10),MASK10         in BRODCAST. This is an
         ED    WK1ALL+46(10),USERCNT        error condition for the
         MVC   LINET(L'WK1ALL),WK1ALL       program if not zero.
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   WK2ALL,EMTALL              Show how many empty slots
         MVC   WK2ALL+46(10),MASK10         are in BRODCAST, available
         ED    WK2ALL+46(10),EMPTYCNT       to contain new USERIDs.
         MVC   LINET(L'WK2ALL),WK2ALL
         PUT   SYSPRINT,LINE
         TM    BDMNOFLG,X'04'             Also doing for UIDPRES?
         BO    END1PEOJ                     Not there - don't do.
         PUT   UIDPRES,BLNKLINE           Print blank line to UIDPRES.
         PUT   UIDPRES,LINE
END1PEOJ DS    0H
         TM    NONEMFLG,X'01'             Were there real USERIDs?
         BO    END1NONE                   Yes. Send message.
         TM    DDNFLAG,X'02'              Was BDMUSIN coded?
         BZ    END1PERR                   No. End here.
         TM    BDMNOFLG,X'02'             Was BDMUSIN OPENed?
         BO    END1PERR                   No. End here.
         TM    NONEMFLG,X'01'             Were there real USERIDs?
         BZ    GO2PASS                    No. So we're good to go.
END1NONE DS    0H
         MVC   LINE,LINE-1                Clear line.
         PUT   SYSPRINT,LINE              Blank line.
         MVC   LINE,LINE-1                  Clear Line
         MVC   LINET(L'MESSAGE4),MESSAGE4   Show we can't load UIDs.
         PUT   SYSPRINT,LINE
         B     EOJ4                         Now get the heck out.
END1PERR DS    0H                         No BDMUSIN present.
         MVC   LINE,LINE-1                Clear line.
         PUT   SYSPRINT,LINE              Blank line.
         MVC   LINE,LINE-1                  Clear Line
         MVC   LINET(L'MESSAG14),MESSAG14   Show we can't load UIDs.
         PUT   SYSPRINT,LINE
         TM    BDMNOFLG,X'04'
         BO    END1NOLO
         PUT   UIDPRES,LINE
END1NOLO DS    0H
         B     EOJ4                         Now get the heck out.
* ------------------------------------------------------------------ *
* ---    SECOND LOOP TO LOAD NEW USERIDS.                        --- *
* ------------------------------------------------------------------ *
*   This pass reads through the BDMUSIN file and checks if it is     *
*    sorted, and that there are no duplicate records.  An error      *
*    condition will stop the action at the indicated USERID count.   *
* ------------------------------------------------------------------ *
GO2PASS  DS    0H                           Initialize second pass.
         MVC   LINE,LINE-1                  Print a blank line.
         PUT   SYSPRINT,LINE
         MVC   SVUIDIN(8),BLANKS            Initialize previous UID.
COUNTUID DS    0H                           See if there is an error.
         GET   BDMUSIN,UIDIN                Get a new USERID.
         CLC   SVUIDIN,UIDIN                Compare to previous one.
         BL    GO2GOON                      Previous one is less-good!
         BE    GO2DUPS                      Previous is equal-duplicate
         BH    GO2NSRT                      Previous is high-unsorted
GO2DUPS  DS    0H                           Report duplicate USERIDs.
         MVC   LINE,LINE-1                  Clear Line
         MVC   WK4ALL,LINE
         MVC   WK4ALL,MESSAGE6              Duplicate User Message
         MVC   LINET(L'WK4ALL),WK4ALL
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1                  Clear Line
         MVC   WK5ALL,LINE
         MVC   WK5ALL,MESSAGE7              Where in the file is it?
         MVC   WK5ALL+32(10),MASK10
         ED    WK5ALL+32(10),UIDSCNT
         MVC   LINET(L'WK5ALL),WK5ALL
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1                  Clear Line
         MVC   LINET(L'MESSAG10),MESSAG10   Run the program over.
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1                  Clear Line
         PUT   SYSPRINT,LINE
         B     EOJ8
GO2NSRT  DS    0H                           Report Non-sorted USERIDs.
         MVC   LINE,LINE-1                  Clear Line
         MVC   WK4ALL,LINE
         MVC   WK4ALL,MESSAGE8              Not in sort order.
         MVC   LINET(L'WK4ALL),WK4ALL
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1                  Clear Line
         MVC   WK5ALL,LINE
         MVC   WK5ALL,MESSAGE9              Where in the file
         MVC   WK5ALL+32(10),MASK10          is the unsorted record?
         ED    WK5ALL+32(10),UIDSCNT        Here.....
         MVC   LINET(L'WK5ALL),WK5ALL       Move to print line.
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1                  Clear Line
         MVC   LINET(L'MESSAG10),MESSAG10   Run the program over.
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1                  Clear Line
         PUT   SYSPRINT,LINE                Print blank line.
         B     EOJ8
GO2GOON  DS    0H                           UIDs are sorted-increasing.
         MVC   SVUIDIN,UIDIN                Update the previous USERID
         AP    UIDSCNT,=P'1'                And add 1 to the count.
         B     COUNTUID                     Go get another one.
END2P    DS    0H                           EODAD address for BDMUSIN.
         TM    END2PFLG,X'01'               Is this from the first OPEN
         BO    END3P                        No. From the second OPEN.
         OI    END2PFLG,X'01'               After first pass-prevent.
         MVC   LINE,LINE-1                  Clear Line
         MVC   LINET(L'MESSAG11),MESSAG11   Enough slots for the UIDs.
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1                  Clear Line.
         PUT   SYSPRINT,LINE                Blank line.
         MVC   LINE,LINE-1                  Clear Line.
         MVC   WK5ALL,LINE
         MVC   WK5ALL,MESSAG13              Print number
         MVC   WK5ALL+32(10),MASK10            of USERIDs in
         ED    WK5ALL+32(10),UIDSCNT              the BDMUSIN file.
         MVC   LINET(L'WK5ALL),WK5ALL
         PUT   SYSPRINT,LINE
         CP    UIDSCNT,EMPTYCNT             Compare to number of slots.
         BNH   GO3PASS                      Enough. Go to 3rd pass.
         MVC   LINE,LINE-1
         MVC   WK3ALL,MESSAGE5              Print error message
         MVC   WK3ALL+13(10),MASK10            that there are
         ED    WK3ALL+13(10),EMPTYCNT             not enough slots.
         MVC   WK3ALL+43(10),MASK10
         ED    WK3ALL+43(10),UIDSCNT
         MVC   LINET(L'WK3ALL),WK3ALL
         PUT   SYSPRINT,LINE
         B     EOJ8                         And return with code 8.
* ------------------------------------------------------------------ *
GO3PASS  DS    0H                           Good second pass thru UIDs.
         TM    BDMNOFLG,X'02'      Was BDMUSIN DD never opened?
         BO    GO3NCLUI            Then don't try to close it.
         TM    DDNFLAG,X'02'
         BZ    GO3NCLUI
         CLOSE (BDMUSIN)                    So CLOSE the BDMUSIN file
GO3NCLUI DS    0H
         NI    BDMNOFLG,X'FE'               Show it is "not not OPEN"
         TM    DDNFLAG,X'02'                BDMUSIN DD name there?
         BZ    GO3NBDUI                     No. Don't try to OPEN it.
         OPEN  (BDMUSIN,(INPUT))            And reopen it.
         TM    BDMUSIN+48,X'10'             Did the OPEN work?
         BO    GO3UINOP                 Yes. Don't flag that it didn't.
GO3NBDUI DS    0H
         OI    BDMNOFLG,X'02'           Mark BDMUSIN DD not opened.
         B     EOJ16                        Go back with a code 16.
GO3UINOP DS    0H                           The OPEN was good, so
         BAL   R9,WRITUSID                  Insert the UIDs in BRODCAST
GO3END   DS    0H                           Then....
         B     EOJ                          Go to normal EOJ.
* ------------------------------------------------------------------ *
         SPACE 3
WMESS    DS    0H                           Crucial DD names missing.
         TM    BDMNOFLG,X'03'               BRODCAST and BDMUSIN  OPEN?
         BZ    EOJ                          Both are, just get out.
         TM    BDMNOFLG,X'01'               Is BRODCAST DD not OPEN?
         BZ    WMESS2                       OPEN--Don't write message
         MVC   LINE,LINE-1                  Clear Line
         MVC   LINET(L'MESSAGE1),MESSAGE1   Write OPEN Error message
         PUT   SYSPRINT,LINE
WMESS2   DS    0H
         TM    BDMNOFLG,X'02'               Is BDMUSIN DD not OPEN?
         BZ    EXIT16                       No message--just bad code
         MVC   LINE,LINE-1                  Clear Line
         MVC   LINET(L'MESSAGE2),MESSAGE2   Write OPEN Error message
         PUT   SYSPRINT,LINE
EXIT16   B     EOJ16                        Fall to here, RC=16.
EOJ0     DS    0H                  BYE. CC = 0.
EOJ      DS    0H                  BYE. CC = 0.
         LA    R5,0                Set return code in R5 to load later.
         B     EOJOUT
EOJ4     DS    0H                  Set CC = 4.
         LA    R5,4                Set return code in R5 to load later.
         B     EOJOUT
EOJ8     DS    0H                  Set CC = 8.
         LA    R5,8                Set return code in R5 to load later.
         B     EOJOUT
EOJ16    DS    0H                  Set CC = 16.
         LA    R5,16               Set return code in R5 to load later.
         B     NOCLNONE
EOJOUT   DS    0H
         TM    BDMNOFLG,X'01'      Was BRODCAST DD never opened?
         BO    EOJBCCLS            Then don't try to close it.
         TM    DDNFLAG,X'01'
         BZ    EOJBCCLS
         CLOSE (BRODCAST)
EOJBCCLS DS    0H
         TM    DDNFLAG,X'02'       Was BDMUSIN DDname never coded?
         BZ    EOJBUCLS            Then don't try to close it.
         TM    BDMNOFLG,X'02'      Was BDMUSIN DD never opened?
         BO    EOJBUCLS            Then don't try to close it.
         CLOSE (BDMUSIN)
EOJBUCLS DS    0H
         TM    BDMNOFLG,X'04'      Was UIDPRES DD never opened?
         BO    EOJBOCLS            Then don't try to close it.
         TM    DDNFLAG,X'04'       Was UIDPRES DDname never coded?
         BZ    EOJBOCLS            Then don't try to close it.
         CLOSE (UIDPRES)
EOJBOCLS DS    0H
         TM    BDMNOFLG,X'08'      Was BDMUSOUT DD never opened?
         BO    EOJUSCLS            Then don't try to close it.
         TM    DDNFLAG,X'08'       Was BDMUSOUT DDname never coded?
         BZ    EOJUSCLS            Then don't try to close it.
         CLOSE (BDMUSOUT)
EOJUSCLS DS    0H                  Close SYSPRINT after everything.
         TM    DDNFLAG,X'10'
         BZ    NOCLNONE
         CLOSE (SYSPRINT)
NOCLNONE DS    0H
         LR    R1,R13              Restore address of GETMAINed area.
         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000
         LR    R15,R5              Restore corrupted RC register
         L     R13,4(,R13)         Prepare return to the system.
         L     R14,12(,R13)        Restore R12
         ST    R15,16(,R13)        Put RC into passed savearea
         LM    R0,R12,20(R13)      Other registers
         BR    R14                 Back to system
         EJECT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* - -           S  U  B  R  O  U  T  I  N  E  S               - - *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEX      MVC   1(1,R15),0(R1)      MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         BR    R4                  RETURN TO CALLER
HEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        Initialize Data Areas that have been GETMAINed.          *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
INITCON  MVI   LINE-1,C' '                INITIALIZE BLANKER
         MVI   OUTLINE-1,X'40'            INITIALIZE BLANKER
         MVC   OUTLINE(133),OUTLINE-1     CLEAR LINE AREA
         MVC   GETRCD(8),OUTLINE          BLANK GETRCD
         MVC   USERCNT(5),PACKZER5        INITIALIZE COUNTER
         MVC   USOPCNT(5),PACKZER5        INITIALIZE COUNTER
         MVC   UIDSCNT(5),PACKZER5        INITIALIZE COUNTER
         MVC   SLOTCNT(5),PACKZER5        INITIALIZE COUNTER
         MVC   EMPTYCNT(5),PACKZER5       INITIALIZE COUNTER
         MVI   BDMNOFLG,X'00'             MARK ALL FILES OPENABLE
         MVI   SLOTLINE-1,X'40'           INITIALIZE BLANKER
         MVC   SLOTLINE(133),SLOTLINE-1   CLEAR SLOT LINE
         XC    DWORK,DWORK                CLEAR WORK AREA
         MVI   NONEMFLG,X'00'
         MVI   END2PFLG,X'00'
         MVI   JFCB1,X'87'                INITIALIZE JFCB HEADER
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        READ THE SYS1.BRODCAST HEADER RECORD AND COPY FIELDS.    *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEADREAD DS    0H
         ST    R9,SAVER9A
         READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOKZERO,MF=E       RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R3,MDLDECB+12       ADDRESS OF RECORD
         USING R1BC,R3             ADDRESSABILITY TO HEADER RECORD MAP
         MVC   SAVERBA(3),R1USPTR  SAVE RBA OF FIRST USER DIR RECORD
         MVC   SAVEUSP(3),R1USPTR  SAVE RBA OF FIRST USER DIR RECORD
         DROP  R3
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         L     R9,SAVER9A
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
WRITUSID DS    0H                  Write the USERIDs into BRODCAST.
         ST    R9,SAVER9C          Save BAL register.
LOADINIT DS    0H                  LOAD USERID RECORDS WITH USERIDS
         MVC   SAVERBA(3),SAVEUSP  START WITH FIRST USERID RECORD
         ST    R3,SAVER3A
LOADUSR  DS    0H                  READ THROUGH USERID RECORDS
         CLC   SAVERBA(3),ZEROS    ARE WE AT THE END OF USERID RECORDS
         BE    END3PASS            NO USERID LIKE THIS. DEAL WITH IT.
         ZAP   SLOTCNT,=P'0'       NEW SLOT COUNT FOR NEW READ
         LA    R7,9                COUNT OF USERS PER RECORD
         MVC   BLOCKNO,SAVERBA     GET RBA FOR READ
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R2,MDLDECB+20       ADDRESS OF KEY
         CLI   0(R2),X'01'
         BNE   LOADUEND
         L     R3,MDLDECB+12       ADDRESS OF RECORD
         USING USDIR,R3
         ST    R3,OUTRECRD
         MVC   LASTRBA(3),SAVERBA  SAVE CURRENT RBA
         MVC   SAVERBA(3),USDNEXT  GET NEXT RECORD'S RBA
         LA    R8,0                INITIALIZE USERID SLOT COUNTER
LODLOOP  DS    0H
         AP    SLOTCNT,=P'1'       COUNT WHICH SLOT THIS IS
         MVC   GETRCD(8),BLANKS    ENSURE BLANK IN 8TH PLACE
         STM   R14,R2,SAVE1402
         GET   BDMUSIN,GETRCD      GET A USERID FROM THE FILE
         LM    R14,R2,SAVE1402
         MVC   USDID(7),GETUSIN    LOAD IT INTO A SLOT?
         AP    USOPCNT,=P'1'       INCREMENT USER COUNTER
LOOPNEXT DS    0H
         LA    R3,13(,R3)          BUMP LOCATION TO NEXT USERID
         LA    R8,1(,R8)           BUMP COUNTER WITHIN RECORD
         BCT   R7,LODLOOP          TRY FOR ANOTHER USER ENTRY
         DROP  R3
END3PB   DS    0H
         WRITE MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         TM    END2PFLG,X'02'
         BO    END3PASS
         B     LOADUSR             END OF RECORD? GET ANOTHER.
         L     R3,SAVER3A
         SPACE 3
END3PASS DS    0H
         MVC   LINE,LINE-1                  Clear Line
         MVC   WK5ALL,LINE
         MVC   WK5ALL,MESSAG12
         MVC   WK5ALL+32(10),MASK10
         ED    WK5ALL+32(10),USOPCNT
         MVC   LINET(L'WK5ALL),WK5ALL
         PUT   SYSPRINT,LINE
         TM    BDMNOFLG,X'04'
         BO    LOADUEND
         PUT   UIDPRES,LINE
LOADUEND DS    0H
         L     R9,SAVER9C
         BR    R9
END3P    DS    0H
         OI    END2PFLG,X'02'
         B     END3PB
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* -- BELOW ---------------  SUBROUTINE TO PRINT JFCB INFORMATION ---- *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
PRTJFCB  DS    0H                         Print JFCB info for BDMUSIN
         ST    R6,SAVER6                  Save the BAL register
         MVC   OUTLINE+19(44),JFCBDSNM    DSNAME
         PUT   SYSPRINT,OUTLINE
         TM    DDNFLAG,X'04'              Is UIDPRES DD in the JCL?
         BZ    NOPRTU01                   No. Bypass printing to it.
         TM    BDMNOFLG,X'04'             UIDPRES not OPEN?
         BO    NOPRTU01                   No. Don't print info to it.
         PUT   UIDPRES,OUTLINE
NOPRTU01 DS    0H                         SKIP OVER UIDPRES PRINT.
         MVC   OUTLINE,OUTLINE-1
         MVC   OUTLINE,MSGMBR
         MVC   OUTLINE+19(8),JFCBELNM     MEMBER NAME
         PUT   SYSPRINT,OUTLINE
         TM    DDNFLAG,X'04'              Is UIDPRES DD in the JCL?
         BZ    NOPRTU02                   No. Bypass printing to it.
         TM    BDMNOFLG,X'04'             UIDPRES not OPEN?
         BO    NOPRTU02                   No. Don't print info to it.
         PUT   UIDPRES,OUTLINE
NOPRTU02 DS    0H                         SKIP OVER UIDPRES PRINT.
         MVC   OUTLINE,OUTLINE-1
         MVC   OUTLINE,MSGVOLSR           VOLSER
         MVC   OUTLINE+19(6),JFCBVOLS
         MVC   OUTLINE+26(6),JFCBVOLS+6
         MVC   OUTLINE+33(6),JFCBVOLS+12
         MVC   OUTLINE+40(6),JFCBVOLS+18
         MVC   OUTLINE+47(6),JFCBVOLS+24
         PUT   SYSPRINT,OUTLINE
         TM    DDNFLAG,X'04'              Is UIDPRES DD in the JCL?
         BZ    NOPRTU03                   No. Bypass printing to it.
         TM    BDMNOFLG,X'04'             UIDPRES not OPEN?
         BO    NOPRTU03                   No. Don't print info to it.
         PUT   UIDPRES,OUTLINE
NOPRTU03 DS    0H                         SKIP OVER UIDPRES PRINT.
         MVC   OUTLINE,OUTLINE-1
         MVC   OUTLINE,MSGDSORG           DSORG
         MVC   OUTLINE+19(3),=C'IS '
         CLI   JFCDSRG1,JFCORGIS
         BE    PUTDSRG
         MVC   OUTLINE+19(3),=C'ISU'
         CLI   JFCDSRG1,JFCORGIS+JFCORGU
         BE    PUTDSRG
         MVC   OUTLINE+19(3),=C'PS '
         CLI   JFCDSRG1,JFCORGPS
         BE    PUTDSRG
         MVC   OUTLINE+19(3),=C'PSU'
         CLI   JFCDSRG1,JFCORGPS+JFCORGU
         BE    PUTDSRG
         MVC   OUTLINE+19(3),=C'DA '
         CLI   JFCDSRG1,JFCORGDA
         BE    PUTDSRG
         MVC   OUTLINE+19(3),=C'DAU'
         CLI   JFCDSRG1,JFCORGDA+JFCORGU
         BE    PUTDSRG
         MVC   OUTLINE+19(3),=C'PO '
         CLI   JFCDSRG1,JFCORGPO
         BE    PUTDSRG
         MVC   OUTLINE+19(3),=C'POU'
         CLI   JFCDSRG1,JFCORGPO+JFCORGU
         BE    PUTDSRG
         OI    FLAG1,X'01'                FLAG DSORG MISSING
         MVC   OUTLINE+19(15),=C'MISSING OR VSAM'
PUTDSRG  PUT   SYSPRINT,OUTLINE
         TM    DDNFLAG,X'04'              Is UIDPRES DD in the JCL?
         BZ    NOPRTU04                   No. Bypass printing to it.
         TM    BDMNOFLG,X'04'             UIDPRES not OPEN?
         BO    NOPRTU04                   No. Don't print info to it.
         PUT   UIDPRES,OUTLINE
NOPRTU04 DS    0H                         SKIP OVER UIDPRES PRINT.
RECFM    DS    0H
         MVC   OUTLINE,OUTLINE-1
         MVC   OUTLINE,MSGRECFM           RECFM
         LA    R4,OUTLINE+19
         TM    JFCRECFM,JFCUND
         BNO   NOTUND
         MVI   0(R4),C'U'
         OI    FLAG2,X'01'                FLAG RECFM=U
         A     R4,ONE
         B     CHKB
NOTUND   TM    JFCRECFM,JFCFIX
         BNO   NOTFIX
         MVI   0(R4),C'F'
         A     R4,ONE
NOTFIX   TM    JFCRECFM,JFCVAR
         BNO   CHKB
         MVI   0(R4),C'V'
         A     R4,ONE
CHKB     TM    JFCRECFM,JFCRFB
         BNO   NOTBLK
         MVI   0(R4),C'B'
         A     R4,ONE
NOTBLK   TM    JFCRECFM,JFCRFS
         BNO   NOTSCN
         MVI   0(R4),C'S'
         A     R4,ONE
NOTSCN   TM    JFCRECFM,JFCASA
         BNO   NOTASA
         MVI   0(R4),C'A'
         A     R4,ONE
NOTASA   TM    JFCRECFM,JFCMAC
         BNO   PUTRCFM
         MVI   0(R4),C'M'
PUTRCFM  PUT   SYSPRINT,OUTLINE
         TM    DDNFLAG,X'04'              Is UIDPRES DD in the JCL?
         BZ    NOPRTU05                   No. Bypass printing to it.
         TM    BDMNOFLG,X'04'             UIDPRES not OPEN?
         BO    NOPRTU05                   No. Don't print info to it.
         PUT   UIDPRES,OUTLINE
NOPRTU05 DS    0H                         Skip over UIDPRES print.
LRECL    DS    0H
         MVC   OUTLINE,OUTLINE-1          Clear line.
         MVC   OUTLINE,MSGLRECL           Put LRECL skeleton into it.
         SR    R4,R4                      Clear work register
         LH    R4,JFCLRECL                Load LRECL in from JFCB
         C     R4,=F'0'                   Is it zero?
         BNE   LRECPRT                    No. Don't check for RECFM=U.
         TM    FLAG2,X'01'                Is RECFM=U?
         BO    LRECPRT                    Yes-0 is legitimate.
         OI    FLAG1,X'04'
         MVC   OUTLINE+19(7),=C'MISSING'
         B     LRECPUT
LRECPRT  DS    0H
         CVD   R4,DECVALUE
         MVC   OUTLINE+19(12),EDPAT       LRECL
         ED    OUTLINE+19(12),DECVALUE+3
LRECPUT  PUT   SYSPRINT,OUTLINE
         TM    DDNFLAG,X'04'              Is UIDPRES DD in the JCL?
         BZ    NOPRTU06                   No. Bypass printing to it.
         TM    BDMNOFLG,X'04'             UIDPRES not OPEN?
         BO    NOPRTU06                   No. Don't print info to it.
         PUT   UIDPRES,OUTLINE
NOPRTU06 DS    0H                         SKIP OVER UIDPRES PRINT.
BLKSIZE  MVC   OUTLINE,OUTLINE-1
         MVC   OUTLINE,MSGBLKSZ
         SR    R4,R4
         LH    R4,JFCBLKSI
         C     R4,=F'0'
         BNE   BLKSIZEG                   BLOCK SIZE IS GOOD
         OI    FLAG1,X'02'                FLAG BLKSIZE MISSING
         MVC   OUTLINE+19(15),=C'ZERO OR MISSING'
         B     BLKSZPUT
BLKSIZEG CVD   R4,DECVALUE
         MVC   OUTLINE+19(12),EDPAT       BLKSIZE
         ED    OUTLINE+19(12),DECVALUE+3
BLKSZPUT PUT   SYSPRINT,OUTLINE
         TM    DDNFLAG,X'04'              Is UIDPRES DD in the JCL?
         BZ    NOPRTU07                   No. Bypass printing to it.
         TM    BDMNOFLG,X'04'             UIDPRES not OPEN?
         BO    NOPRTU07                   No. Don't print info to it.
         PUT   UIDPRES,OUTLINE
         PUT   UIDPRES,BLNKLINE
NOPRTU07 DS    0H                         SKIP OVER UIDPRES PRINT.
         L     R6,SAVER6
         BR    R6
* -- ABOVE ---------------  SUBROUTINE TO PRINT JFCB INFORMATION ---- *
DIAGONLY DS    0H                  Diagnostics Only
* - - - >
         ST    R6,SAVER6
         MVC   LINE,LINE-1                  Clear line.
         MVC   LINET(L'MESSAGE3),MESSAGE3   Write no BDMUSIN output.
         PUT   SYSPRINT,LINE
         PUT   SYSPRINT,BLNKLINE
         PUT   UIDPRES,LINE                 Also write to UIDPRES reprt
         PUT   UIDPRES,BLNKLINE
         L     R6,SAVER6                    Restore BAL register
         BR    R6                           Go back to caller.
* - - - >
         EJECT
*-----------------------------------------------------------------*
*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*
*-----------------------------------------------------------------*
*--------------------------------------------------------------------*
TITLINE  DS    0CL133              Program Title on Report
         DC    C'1'
         DC    CL3' '
         DC    CL6'---'
         DC    CL79'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM   -X
               --'
         DC    CL46' '
         SPACE
*--------------------------------------------------------------------*
ULOTITLE DS    0CL133              Userid Diagnostics Report Title
         DC    C'0'
         DC    CL11' '
         DC    CL3'-  '
         DC    CL79'&PGMNAME Program  -  Userid Bulk Loader Program  - X
                 '
         DC    CL41' '
*--------------------------------------------------------------------*
UIDTITLE DS    0CL133              Userid Diagnostics Report Title
         DC    C'0'
         DC    CL11' '
         DC    CL3'-  '
         DC    CL79'&PGMNAME Program  -  Userids Already Present  -    X
                 '
         DC    CL41' '
*--------------------------------------------------------------------*
UIDDESCL DS    0CL133              Userid Diagnostics Report Header
         DC    C'0'
         DC    CL6' '
         DC    CL9'UID Count'
         DC    CL4' '
         DC    CL8'Userid  '
         DC    CL1' '
         DC    CL8'RBA Hex '
         DC    CL2' '
         DC    CL8'RBA Dec '
         DC    CL2' '
         DC    CL8'Slot #'
         DC    CL76' '
*--------------------------------------------------------------------*
UIDDASH  DS    0CL133              Dashes under Report Heading
         DC    C' '
         DC    CL6' '
         DC    CL9'---------'
         DC    CL4' '
         DC    CL8'------  '
         DC    CL1' '
         DC    CL8'------- '
         DC    CL2' '
         DC    CL8'------- '
         DC    CL2' '
         DC    CL8'------'
         DC    CL76' '
*--------------------------------------------------------------------*
         SPACE
CPYRLINE DS    0CL133              Copyright information for program
         DC    C'0'
         DC    CL3' '
* -->                              Currently 77 characters
         DC    C'&COPYRGT'
         DC    C'&COPYRSV'
* -->
         DC    CL48' '
         SPACE
*--------------------------------------------------------------------*
BLNKLINE DC    CL133' '            Blank Line sample
*-----------------------------------------------------------------*
FLAG1    DC    X'00'
*              X'01'               DSORG IS MISSING
FLAG2    DC    X'00'
ONE      DC    F'1'
DECVALUE DS    CL8
EDPAT    DC    X'402020206B2020206B202120'
PACKZERO DC    PL3'0'
PACKZER5 DC    PL5'0'
FULLZERO DC    F'0'
* - - - - - - - - - - - - - - - - - - - - - - - - *
FF       EQU   X'FF'
F16      DC    F'16'
F00      DC    F'0'
BLANKS   DC    C'        '         8 BLANKS
BLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER
ZEROS    DS    0CL8
ZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING
         DC    X'0000'
MESSAGE1 DC    C'Bad Open - BRODCAST DD name is missing from the JCL  '
MESSAGE2 DC    C'Bad Open - BDMUSIN DD name is missing from the JCL  '
MESSAGE3 DC    C'Diagnostic Report Only - No BDMUSIN was present.    '
MESSAGE4 DC    C'Real userids are in BRODCAST. Cannot load new ones. '
MESSAGE5 DC    C'Empty slots:            not enough to load            x
               Userids.'
MESSAGE6 DC    C'Duplicate Userid exists in BDMUSIN dataset.  '
MESSAGE7 DC    C'Duplicate Userid is at Record :              '
MESSAGE8 DC    C'BDMUSIN Userids are not in EBCDIC sort order.'
MESSAGE9 DC    C'Unsorted Userid is at Record  :              '
MESSAG10 DC    C'Run the BDMUSORT program against the BDMUSIN file.'
MESSAG11 DC    C'BRODCAST can contain all the Userids in BDMUSIN.  '
MESSAG12 DC    C'Userids Successfully Loaded   :              '
MESSAG13 DC    C'Userids in  BDMUSIN  Dataset  :              '
MESSAG14 DC    C'BDMUSID was not present, so Userids were not loaded.'
USRALL DC C'Total # of Userids Present in BRODCAST DSNAME             '
EMTALL DC C'Total # of Empty Slots in Brodcast available:             '
MESPREND DC    C'?????  Preliminary end of USERID Records - - *'
MSGDSN   DC    CL133'0   BRODCAST DSN ='
MSGVOLSR DC    CL133'         VOLSER  ='
MSGMBR   DC    CL133'         MEMBER  ='
MSGDSORG DC    CL133'         DSORG   ='
MSGBLKSZ DC    CL133'         BLKSIZE ='
MSGLRECL DC    CL133'         LRECL   ='
MSGRECFM DC    CL133'         RECFM   ='
         DC    CL133' '
MASK6    DC    XL6'402020202120'
MASK7A   DC    XL7'40202020212020'
MASK10   DC    XL10'40202020202020202120'
         DS    0F                  NEEDED FOR CORRECT EXLST
JFCB1    DC    X'87'
         DC    AL3(INFMJFCB)
         IEFJFCBN LIST=YES
         SPACE 3
BRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X
               BLKSIZE=129,        LENGTH OF FILES BLOCK               X
               DSORG=DA,           IS DIRECT ACCESS FILE               X
               MACRF=(RISXC,WIC),  3 BYTE RBA, DYNAMIC BUF, READ/CHECK X
               OPTCD=R,            3 BYTE RBA WILL BE USED             X
               RECFM=F,            FIXED LENGTH                        X
               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X
               KEYLEN=1,           SIZE OF KEY                         X
               BUFL=130,           KEYLEN + BLKSIZE                    X
               EXLST=JFCB1
         SPACE 3
SYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FA,LRECL=133,   X 05426
               BLKSIZE=133                                               05427
UIDPRES  DCB   MACRF=PM,DDNAME=UIDPRES,DSORG=PS,RECFM=FA,LRECL=133,    X 05426
               BLKSIZE=133                                               05427
BDMUSIN  DCB   DDNAME=BDMUSIN,MACRF=GM,DSORG=PS,RECFM=FB,EODAD=END2P,  X
               LRECL=8
BDMUSOUT DCB   DDNAME=BDMUSOUT,MACRF=PM,DSORG=PS,RECFM=FB,             X
               LRECL=8,EXLST=JFCB1
         LTORG
         SPACE
         DS    0F
         SPACE 3
*-----------------------------------------------------------------*
*----         GETMAINED DATA AREA FIELDS                      ----*
*-----------------------------------------------------------------*
DATAAREA DSECT
SAVE     DS    9D
DWORK    DC    D'0'
CMBUFAD  DS    F                   COMMAND BUFFER ADDRESS
NEWID    DC    C'        '         STORE PARM USERID HERE
         DS    CL72                PADDING
ADDADR   DS    0CL12
USERCNT  DC    PL5'0'              COUNT OF ALL MESSAGES DISPLAYED
UIDSCNT  DC    PL5'0'              COUNT OF USERIDS IN BDMUSIN
USOPCNT  DC    PL5'0'              COUNT OF USERIDS IN BDMUSIN
SLOTCNT  DC    PL5'0'              COUNT OF SLOT NUMBER IN UID RECORD
EMPTYCNT DC    PL5'0'
BLOCKNO  DC    X'000000'           STORE BLOCK NUMBER FOR READ
LASTRBA  DC    X'000000'           STORE CURRENT RBA
UIDPRB   DS    0F
UIDPRBAX DC    X'00'
UIDPRBA  DC    X'000000'           STORE CURRENT RBA FOR DIAG PRINT
SAVERBA  DC    X'000000'           STORE RBA FOR LATER READ
SAVEUSP  DC    X'000000'           STORE RBA FOR LATER READ
MYUSSLOT DC    X'00'               STORE SLOT OF MY USERID IN RECORD
NWUSRBA  DC    X'000000'           STORE RBA OF NEW USERID FOR LATER
NWUSSLOT DC    X'00'               STORE SLOT OF NEW USERID IN RECORD
USERID   DS    0CL8                STORE FOUND USERID HERE
USERIDI  DS    CL7                 STORE FOUND USERID HERE
         DS    0F                  ALIGN ON FULLWORD
SAVER3   DS    F                   WORK REGS FOR TIOT SCAN
SAVER3A  DS    F                   WORK REGS FOR TIOT SCAN
SAVER5   DS    F                   WORK REGS FOR TIOT SCAN
SAVEPRM  DS    F                   TEMP SAVE FOR PARM POINTER
SAVER6   DS    F                   BAL REGISTER SAVE AREA
SAVER9A  DS    F                   BAL REGISTER SAVE AREA
SAVER9B  DS    F                   BAL REGISTER SAVE AREA
SAVER9C  DS    F                   BAL REGISTER SAVE AREA
SAVER9D  DS    F                   BAL REGISTER SAVE AREA
SAVER9E  DS    F                   BAL REGISTER SAVE AREA
SAVER9F  DS    F                   BAL REGISTER SAVE AREA
SAVER9G  DS    F                   BAL REGISTER SAVE AREA
SAVER9H  DS    F                   BAL REGISTER SAVE AREA
SAVER9I  DS    F                   BAL REGISTER SAVE AREA
SAVE1402 DS    5F
HEXSAVE  DS    3F                  SAVE FOR HEX MACRO
LINEB    DS    C                   LINE-1
LINE     DS    CL133
LINET    EQU   LINE+7
OUTLINEB DS    C                   OUTLINE-1
OUTLINE  DS    CL133
         DS    0F
RDWR     READ  MDLDECB,DI,MF=L
RDWREND  DS    0F
RDWRLEN  EQU   *-RDWR
WK1ALL DC C'                                                          '
WK2ALL DC C'                                                          '
WK3ALL   DC    C'                                                      x
                       '
WK4ALL   DC    C'                                             '
WK5ALL   DC    C'                                             '
BDMNOFLG DS    X
*        EQU   X'01'               BRODCAST DD MISSING
*        EQU   X'02'               BDMUSIN  DD MISSING
*        EQU   X'04'               UIDPRES  DD MISSING
         SPACE 1
DDNFLAG  DS    X
DDNREPR  DS    2C
NONEMFLG DS    X
END2PFLG DS    X
         DS    CL6                 FILLER
         DS    C
SLOTLINE DS    CL133
SVUIDIN  DS    CL8
UIDIN    DS    CL8
GETRCD   DS    0CL8
GETUSIN  DS    CL7
GETUSBLK DS    C
OUTRECRD DS    F
DATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA
         IKJZT301 DSECT=YES
         IKJZT304 DSECT=YES
         IKJZT305 DSECT=YES
         CVT  DSECT=YES,LIST=YES
         END
