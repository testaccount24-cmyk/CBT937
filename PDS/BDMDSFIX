BDMDSFIX TITLE 'BDMDSFIX - FIX A BRODCAST DATASET ACROSS DEVICE TYPE CH-
               ANGE'
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  DOCUMENTATION:   THIS PROGRAM CAN BE RUN AS A TSO-IN-BATCH         *
*                   COMMAND.   NEED NOT BE AUTHORIZED.                *
*                                                                     *
*       Copyright (C) 1995-2025 Sam Golob Systems Programming LLC     *
*                 All Rights Reserved                                 *
*                                                                     *
*         SYNTAX:   BDMDSFIX                                          *
*                                                                     *
*       FUNCTION:   To fix a Broadcast Dataset whose free records     *
*                   have become corrupted.  This can arise from       *
*                   copying a Broadcast Dataset from one device type  *
*                   to another.  IBM says you can't do it.  This is   *
*                   why.  For example, if you copy a Broadcast        *
*                   dataset from a 3380, where X'35' records fit into *
*                   a track, to a 3390, where X'32' records fit into  *
*                   a track, the X'FF' records will mostly be wrong,  *
*                   and the Broadcast Dataset will be unusable by the *
*                   system.  Let us explain some more.                *
*                                                                     *
*                   The free records of a Broadcast Dataset have to   *
*                   contain the "record number on the track" or in    *
*                   other words, the "R" of the CCHHR of the record,  *
*                   hard-coded into the first data byte of the record *
*                   after the key.  So if the key is X'FF', meaning   *
*                   a free record, the first data byte of that record *
*                   HAS TO CONTAIN a hex value equal to the exact     *
*                   record number on that track.                      *
*                                                                     *
*                   This program will reset any "errant first bytes"  *
*                   of X'FF' records (free Broadcast records) in      *
*                   the Broadcast Dataset back to their correct       *
*                   value, for the device type that the Broadcast     *
*                   Dataset is on.                                    *
*                                                                     *
*          AUTHOR:  SAM GOLOB               VERSION:   1.5.0A         *
*                                                                     *
*            DATE:  December 26, 2008                                 *
*                                                                     *
*       EXECUTION:  ALLOC F(BRODCAST) DA('SYS1.BRODCAST') SH REUSE    *
*                                                                     *
*         CHANGES:  12/26/08  -  Got it to work.                      *
*                                                                     *
*                                                                     *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*       I N S T R E A M    M A C R O S                                *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         MACRO
         IKJZT301  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*        UPDATED                          31MAY95 SBG.
*
*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                                RECORD 1                             *
*                                                                     *
*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *
*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *
*        CONCERNING THE DATA SET.                                     *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
R1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET
         AGO   .SKIP
.NODSECT ANOP
R1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET
.SKIP    ANOP
R1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW
R1BCFLGS DS    B -            NOTICES FLAGS - NOT USED
R1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST
*                               NOTICES DIRECTORY RECORD
R1USPTRP DS    0A -           SAME AS R1USPTR BELOW
R1USFLGS DS    B -            USER MAIL FLAGS - NOT USED
R1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD
R1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS
R1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -
*                               FROM MASTER SCHEDULER BASEA, BABCMAX
*                                                                     *
R1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =
*                               ' SYS1.BRODCAST DATA SET '
R1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS
*                               A 1-DIGIT NUMBER
         DS    CL1 -          RESERVED
R1FRESRH DS    CL3 -          RBA OF FREE SEARCH RECORD
R1GENNUM DS    F -            GENERATION NUMBER FOR IN-STORAGE NOTICE
*                               TABLE
         DS    CL76 -         RESERVED
         MEND
         MACRO
         IKJZT304  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*
*        IKJZT304       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                       USER MAIL DIRECTORY RECORD                    *
*                                                                     *
*        THE USER MAIL DIRECTORY RECORD (USDIR) IS A LOGICAL          *
*        DIRECTORY RECORD IN THE SYS1.BRODCAST DATA SET.              *
*        THE DIRECTORY CONTAINS USERIDS AND PTRS TO THE FIRST AND     *
*        LAST MESSAGE FOR EACH USERID.                                *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
USDIR    DSECT , -            USER MAIL DIRECTORY RECORD
         AGO   .SKIP
.NODSECT ANOP
USDIR    DS    0F -           USER MAIL DIRECTORY RECORD
.SKIP    ANOP
USDENTRY DS    0CL13 -        DIRECTORY ENTRY FOR 1 USERID
USDID    DS    CL7 -          USERID (LEFT JUSTIFIED, PADDED W/ BLANKS)
USDRBA   DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST
*                               MESSAGE FOR THIS USERID (ZERO IF NONE)
USDEND   DS    AL3 -          RBA OF LAST MESSAGE FOR THIS USERID
*                               (ZERO IF NONE)
         DS    8CL13 -        RESERVE SPACE FOR 8 MORE DIRECTORY
*                               ENTRIES IDENTICAL IN FORMAT TO THE
*                               PRECEDING 'USDENTRY'
         DS    XL8 -          RESERVED
USDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'
USDNEXT  DS    AL3 -          CHAIN PTR TO NEXT USER MAIL DIRECTORY
*                               RECORD (ZERO IF LAST)
         MEND
         MACRO
         IKJZT305  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*
*        IKJZT305       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                        USER MAIL MESSAGE RECORD                     *
*                                                                     *
*        THE USER MAIL MESSAGE RECORD (USMSG) IS A RECORD IN          *
*        THE SYS1.BRODCAST DATA SET WHICH CONTAINS A MAIL MESSAGE     *
*        INTENDED FOR A PARTICULAR USERID.                            *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
USMSG    DSECT , -            USER MAIL MESSAGE RECORD
         AGO   .SKIP
.NODSECT ANOP
USMSG    DS    0F -           USER MAIL MESSAGE RECORD
.SKIP    ANOP
USMLNG   DS    FL1 -          LENGTH OF MAIL MSG TEXT
USMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)
USMNEXT  DS    AL3 -          CHAIN PTR TO NEXT MAIL MESSAGE RECORD
*                               FOR THIS USERID (ZERO IF LAST)
         MEND
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    STM   R15,R1,HEXSAVE
         LA    R1,&FROM
         LA    R0,&LEN
         LA    R15,&TO
         BAL   R9,HEX
         LM    R15,R1,HEXSAVE
         MEND
         SPACE
* ------------------------------------------------------------------ *
* ---   MAINLINE CODE BEGINS HERE                                --- *
* ------------------------------------------------------------------ *
         SPACE 1
*        REGS
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 1
SP000    EQU   0
         SPACE 1
         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV
         LCLC  &PGMNAME
&VERSNUM SETC  ' 1.5.0A'
&PKGNAME SETC  'BRODMSTR'
&PKGTITL SETC  'Broadcast Master'
&VERTITL SETC  ' Version '
&COPYRGT SETC  'Copyright (c) 1995-2025 Sam Golob Systems Programming'
&COPYRSV SETC  ' LLC - All Rights Reserved  '
&PGMNAME SETC  'BDMDSFIX'
&PGMNAME AMODE 24
&PGMNAME RMODE 24
&PGMNAME CSECT
         B     BEGINN-*(,R15)
         DC    CL8'&PGMNAME'
         DC    C' '
         DC    C'&PKGTITL'
         DC    C'&VERTITL'
         DC    C'&VERSNUM'
         DC    C' '
         DC    C'&COPYRGT'
         DC    C'&COPYRSV'
         DC    CL16' &SYSDATE &SYSTIME '
         DC    CL6'HLASM '
         DC    C'&SYSVER'
         DC    C' '
BEGINN   DS    0H
         STM   R14,R12,12(R13)
         USING BDMDSFIX,R12,R11,R10
         LR    R12,R15
         LA    R11,4095(,R12)      LOAD SECOND BASE
         LA    R11,1(,R11)
         LA    R10,4095(,R11)      LOAD THIRD BASE
         LA    R10,1(,R10)
         LR    R4,R1               PRESERVE CPPL POINTER.
         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         USING DATAAREA,R13
         BAL   R9,INITCON          INITIALIZE CONSTANTS IN DATA AREA
         BAL   R9,GETPSCB          GET PSCB IF ANY (IN R2)
         SPACE 1
         LTR   R2,R2               ANY PSCB?
         BZ    EOJ8                GET OUT.  NOT TSO.
         BAL   R9,CPPLPTRS         STORE STUFF OUT OF THE CPPL
         BAL   R9,SETIOPL          SET UP IOPL FOR PUTLINE
CONT0    LTR   R4,R4               ANY CPPL?
         BZ    EOJ8                NO.  GET OUT
         L     R1,0(,R4)           PT TO CMD BUFFER.
         LTR   R1,R1               ANY CMD BUFFER?
         BZ    EOJ4                GET OUT IF NONE
         LH    R3,0(,R1)           LOAD LENGTH.
         CH    R3,=H'4'            ANYTHING?
         BNH   EOJ4                NO.  GET OUT.
         LR    R5,R3               LENGTH OF COMMAND + 4
         ICM   R5,14,FULLZERO      CLEAR HI ORDER 3 BYTES
         LH    R3,2(,R1)           LOAD OFFSET.
         SR    R5,R3               SUBTRACT OFFSET FROM FULL LENGTH+4
         SH    R5,=H'4'            CORRECT FOR LENGTH OF CMDBUFR HEADER
         BC    5,EOJ8              LESS, OR OVERFLOW, OUT.
*                                  OF THE KEYWORD (AND ITS LENGTH)
*                                  AND ALSO SAVE THE CURRENT ID&LENGTH
* ------------------------------------------------------------------ *
** -- >>
DOBROD   OPEN  (BRODCAST,(UPDAT))
         TM    BRODCAST+48,X'10'
         BNO   WMESS1
         RDJFCB BRODCAST
* ------------- Get the EESCB in a program -------------*  below
* -----------------  This needs AMODE 31  --------------*
GETEESCB DS    0H
         CNOP  0,4
         L     R15,CONST            Amode 31
         BASSM R0,R15
CONST    DC    X'80',AL3(CONST+4)
         ST    R5,SAVER5A           R5 is temporary.
         L     R5,X'10'             CVT
         L     R5,X'9C'(,R5)        Point to TSVT
         L     R5,X'4C'(,R5)        Point to TPVT
         ST    R5,SAVETPVT          Save the TPVT for reference.
         L     R5,X'20'(,R5)        Point to EESCB - R5
         ST    R5,SAVEESCB          Store away the IKJEESCB address
         L     R5,SAVER5A           Restore R5 quickly.
         L     R2,SAVEESCB          Use work register here.
         LTR   R2,R2                EESCB supported for this release?
         BZ    ENDEESCB             No. Bypass EESCB stuff.
         USING IKJEESCB,R2
USEEESCB DS    0H                   Save EESCB quantities.
         CLC   EESCB_IDENTIFIER(8),LITEESCB      Is this the EESCB?
         BNE   ENDEESCB             No. Can't do anything if not it.
         MVC   EESIDENT(8),EESCB_IDENTIFIER
         MVC   EESVERS(1),EESCB_VERSION  Save EESCB Version Number
         CLI   EESCB_VERSION,X'03'  At least EESCB version 3 ?
         BL    ENDEESCB             No. Don't support fancy stuff.
         MVC   EESDSN(44),EESCB_BROADCAST_DSNAME BRODCAST dataset name
         MVC   EESVOL(6),EESCB_BROADCAST_VOLSER  BRODCAST dataset volsr
         MVC   EESUNT(8),EESCB_BROADCAST_UNIT    BRODCAST dataset unit
         DROP  R2
         CNOP  0,4
         L     R15,CONSTX          Amode 24
         BASSM R0,R15
CONSTX   DC    A(CONSTX+4)
         B     ENDEESCB
SAVETPVT DC    F'0'                Needed for Get EESCB routine
SAVEESCB DC    F'0'                Needed for Get EESCB routine
EESDSN   DC    CL44' '             BRODCAST Dsname from EESCB
EESVOL   DC    CL6' '              BRODCAST Volser from EESCB
EESUNT   DC    CL8' '              BRODCAST Unit Name from EESCB
EESVERS  DC    X'00'               EESCB version number
EESIDENT DC    CL8' '              EESCB Identifier, copied.
LITEESCB DC    CL8'IKJEESCB'
ENDEESCB DS    0H
* ------------- Get the EESCB in a program -------------*  above
*
         TM    TITLFLG,X'01'       Has the title been printed yet?
         BO    NOTITLHE            Yes. Don't print it now.
         BAL   R9,PRTITLE          No. Print it.
NOTITLHE DS    0H
         OI    TITLFLG,X'01'       Show title has been printed.
*
* ------------------------------------------------------------------ *
         BAL   R9,HEADREAD         READ HEADER RECORD AND GET TOTRECS
         BAL   R9,READLOOP         Go through BRODCAST and fix X'FF's
         MVC   LINE,LINE-1         Blank line
         MVC   LINE(43),=C'Fix free message records that are in error.'
         LA    R0,55
         BAL   R9,MSG
         MVC   LINE,LINE-1         Blank line
         MVC   LINE(43),=C'--- ---- ------- ------- ---- --- -- ----- '
         LA    R0,55
         BAL   R9,MSG
         MVC   LINE,LINE-1         Display results.
         MVC   LINE+39(10),MASK10
         ED    LINE+39(10),CHANGREC
         MVC   LINE(39),=C'Records    changed by BDMDSFIX program:'
         LA    R0,55
         BAL   R9,MSG
         MVC   LINE,LINE-1
         MVC   LINE+39(10),MASK10
         ED    LINE+39(10),FREEREC
         MVC   LINE(39),=C'Total free records in BRODCAST dataset:'
         LA    R0,55
         BAL   R9,MSG
         MVC   LINE,LINE-1
         LA    R0,55
         BAL   R9,MSG
         B     EOJ0                End program.
* ------------------------------------------------------------------ *
* ---    END OF PROGRAM    ---                                   --- *
* ------------------------------------------------------------------ *
WMESS1   MVC   LINE,LINE-1                  WRITE MESSAGE THAT
         MVC   LINET,MESSAGE1                 SYS1.BRODCAST NOT ALLOC'D
         LA    R0,L'MESSAGE1+7                  TO DDNAME BRODCAST.
         BAL   R9,MSG
         B     EOJ4
* ------------------------------------------------------------------ *
EOJ0     LA    R5,0                SET RC = 0.
         B     EOJ                 CONT.
EOJ4     LA    R5,4                SET RC = 4.
         B     EOJ                 CONT
EOJ8     LA    R5,8                SET RC = 8.
         B     EOJ                 CONT
* ------------------------------------------------------------------ *
EOJ      DS    0H                  BYE.
         CLOSE (BRODCAST)
         LR    R1,R13
         L     R13,4(,R13)
         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000
         LR    R15,R5              Restore RC into corrupted R15
         ST    R15,16(,R13)        Put RC into passed save area
         L     R14,12(,R13)        Load R14 back.
         LM    R0,R12,20(R13)      All the other registers.
         BR    R14
* ------------------------------------------------------------------ *
* ---   MAINLINE CODE ENDS HERE                                  --- *
* ------------------------------------------------------------------ *
         EJECT
*-----------------------------------------------------------------*
*---*                S U B R O U T I N E S                    *---*
*-----------------------------------------------------------------*
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        READ THE SYS1.BRODCAST HEADER RECORD AND COPY FIELDS.    *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEADREAD DS    0H
         ST    R9,SAVER9E
         READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOKZERO,MF=E       RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R3,MDLDECB+12       ADDRESS OF RECORD
         USING R1BC,R3             ADDRESSABILITY TO HEADER RECORD MAP
         MVC   TOTLRECS(4),R1RECNUM  TOTAL NUMBER OF RECORDS IN DATASET
         MVC   LEVEL(7),R1LEVEL    LEVEL+6 IS VERSION OF TSO
         CLC   LEVEL+6(1),=C'2'    IS THIS TSO LEVEL 1?
         BL    SKIPFREE            YEP. NO TYPE 5 RECORD ADDRESS
         MVC   TYP5RBA(3),R1FRESRH    STORE RBA OF TYPE 5
SKIPFREE DS    0H
         DROP  R3
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         L     R9,SAVER9E
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
MSG      DS    0H                  WRITE A LINE USING PUTLINE FACILITY
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         ST    R9,SAVER9F
         LA    R1,LINE
*        LOAD LENGTH OF MESSAGE INTO R0 BEFORE CALLING THIS ROUTINE.
         BAL   R14,PUTLINE
         MVC   LINE,LINE-1
         L     R9,SAVER9F
         BR    R9
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEX      DS    0H
         ST    R9,SAVER9G
         MVC   1(1,R15),0(R1)      MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         L     R9,SAVER9G
         BR    R9                  RETURN TO CALLER
HEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        DATA AREAS THAT NEED TO BE INITIALIZED AT THE BEGINNING  *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
INITCON  DS    0H
         ST    R9,SAVER9A
         MVI   LINE-1,C' '         INITIALIZE BLANK
         MVC   LINE,LINE-1
         MVI   KEYHOLD,X'00'
         MVC   RECHOLD,RECHOLD-1
         XC    TOTLRECS,TOTLRECS
         MVI   EESVERS,X'00'       Don't assume EESCB exists.
         MVC   LEVEL(7),BLANKS
         MVC   TYP5RBA(3),ZEROS
         MVI   TITLFLG,X'00'       Title has not yet been printed.
         ZAP   FREEREC,=P'0'
         ZAP   CHANGREC,=P'0'
         L     R9,SAVER9A
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
GETPSCB  DS    0H
         ST    R9,SAVER9B
         L     R1,16               POINT TO CVT.
         L     R1,0(,R1)           POINT TO TCB/ASCB WORDS
         L     R1,4(,R1)           POINT TO TCB.
         L     R1,X'B4'(,R1)       POINT TO JSCB.
         L     R1,X'108'(,R1)      POINT TO PSCB.
         LA    R2,0(,R1)           CLEAR HIGH BYTE.  DUMP INTO R2
         L     R9,SAVER9B
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         USING CPPL,R4
CPPLPTRS DS    0H
         ST    R9,SAVER9C
         ST    R6,SAVER6A
         L     R6,CPPLUPT          SAVE CPPL POINTERS, SUCH AS:
         ST    R6,SAVEUPT             THE UPT
         L     R6,CPPLPSCB
         ST    R6,SAVEPSCB            THE PSCB
         L     R6,CPPLECT
         ST    R6,SAVEECT             THE ECT
         L     R6,CPPLCBUF
         ST    R6,CMBUFAD             THE COMMAND BUFFER ADDRESS
         ST    R4,SAVECPPL            AND THE CPPL ADDRESS ITSELF
*        LA    R6,0
         L     R6,SAVER6A
         L     R9,SAVER9C
         BR    R9
         DROP  R4
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
************************************************************
*        SET UP IOPL FOR PUTLINE                           *
************************************************************
         SPACE
         USING CPPL,R4
SETIOPL  DS    0H
         ST    R9,SAVER9D
         LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         DROP  R4
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15
         SPACE
         L     R15,CVTPTR          POINT TO CVT                  JDM1
         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1
         TM    CVTPUTL,X'80'       IS PUTLINE LOADED? (VS2)      JDM1
         BNO   PUTLOAD             NO - BRANCH TO LOAD
         L     R15,CVTPUTL         YES - USE CVTPUTL             JDM1
         DROP  R15                                               JDM1
         B     PUTLOADX            BRANCH AROUND LOAD
PUTLOAD  LA    R0,=CL8'IKJPUTL '
         LOAD  EPLOC=(0)
         LR    R15,R0              GET ENTRY ADDRESS
         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE
PUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS
         L     R9,SAVER9D
         BR    R9
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
PRTITLE  DS    0H                  Print the title lines
         ST    R9,SAVER9H
         MVC   LINE,LINE-1                  WRITE MESSAGE WITH
         MVC   LINE(MSGTLEN),MESSAGET         THE COUNTS OF RECORDS
         LA    R0,MSGTLEN                       THAT WERE ZEROED.
         BAL   R9,MSG
         MVC   LINE,LINE-1
         MVC   LINE(MSGCLEN),MESSAGEC
         LA    R0,MSGCLEN
         BAL   R9,MSG
         MVC   LINE,LINE-1
         LA    R0,20
         BAL   R9,MSG
         MVC   LINE,LINE-1                  CLEAR MESSAGE LINE
         MVC   DSNAMEN(44),JFCBDSNM         MOVE IN DSNAME
         MVC   LINE(133),DSNAMET            ENTIRE MESSAGE TO LINE
         LA    R0,74                        LENGTH OF ENTIRE MESSAGE
         BAL   R9,MSG                       WRITE THE MESSAGE
         MVC   LINE,LINE-1                  CLEAR MESSAGE LINE
         MVC   DSVOLSN(6),JFCBVOLS          MOVE IN VOLSER
         MVC   LINE(133),DSVOLST            ENTIRE MESSAGE TO LINE
         LA    R0,36                        LENGTH OF ENTIRE MESSAGE
         BAL   R9,MSG                       WRITE THE MESSAGE
         MVC   LINE,LINE-1
         LA    R0,36
         BAL   R9,MSG
*  EESCB stuff  -  below
         CLC   EESIDENT(8),=C'IKJEESCB'
         BNE   NOEESCB1
         CLI   EESVERS,X'03'
         BL    NOEESCB1
         CLC   JFCBDSNM(44),EESDSN
         BNE   NOTOFFIC
         CLC   JFCBVOLS(6),EESVOL
         BNE   NOTOFFIC
         B     YESOFFIC
NOTOFFIC DS    0H
         MVC   LINE,LINE-1
         MVC   LINE+10(L'MESNOFFL),MESNOFFL
         LA    R0,L'MESNOFFL+10
         BAL   R9,MSG
         B     EESCBEND
YESOFFIC DS    0H
         MVC   LINE,LINE-1
         MVC   LINE+10(L'MESYOFFL),MESYOFFL
         LA    R0,L'MESYOFFL+10
         BAL   R9,MSG
         B     EESCBEND
EESCBEND DS    0H
NOEESCB1 DS    0H
*  EESCB stuff  -  above
         MVC   LINE,LINE-1
         LA    R0,20
         BAL   R9,MSG
         L     R9,SAVER9H
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*--------------------------------------------------------------------*
*        This is now our READ loop as we do a successive READ,
*        incrementing the RBA number until we reach the BCNUMREC
*        value saved in 'HIGHVAL'.  Once we have read all the
*        records, we will go and analyze them.
*--------------------------------------------------------------------*
*    BLOCKNO has started with an RBA of X'000000' from the initial   *
*     READ of the BRODCAST Header record.                            *
*--------------------------------------------------------------------*
         SPACE
READLOOP DS    0H
         ST    R9,SAVER9I
         ICM   R1,7,BLOCKNO        Get RBA processed previously.
         LA    R1,1(,R1)           Increment by one.
         STCM  R1,7,BLOCKNO        Store it back for the next READ.
         CLC   BLOCKNO(3),TOTLRECS+1  Did we reach max?
         BE    READLEND            Totals after fixing them all.
         SPACE
         READ  MDLDECB,            DECB TO USE IN MACRO EXPANSION      X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO,MF=E        RBA TO HOLD THE KEY
         SPACE
         CHECK MDLDECB
         SPACE
         L     R2,MDLDECB+20       Address of Key
         MVC   KEYHOLD(1),0(R2)    Move the key data where we can see
         L     R3,MDLDECB+12       Address of Data
         MVC   RECHOLD(129),0(R3)  Move the data where it is accessible
         L     R2,MDLDECB+16       Point to IOB
         USING IOBSTDRD,R2
         MVC   SAVEINF1(8),IOBSEEK Save CCHHR of record
         DROP  R2
         CLI   KEYHOLD,X'FF'       Is this an unused message record?
         BE    CHKFF               Yes. No fixing necessary.
         B     FREEB
*--------------------------------------------------------------------*
*        Count the X'FF' record type, and change the bad ones.
*--------------------------------------------------------------------*
CHKFF    DS    0H                  Deal with X'FF' record type.
         AP    FREEREC,=P'1'       Yes. Add one to total for this type.
         CLC   SAVEINF1+7(1),RECHOLD  Does data byte need changing?
         BNE   CHANGFF
         B     FREEB
CHANGFF  DS    0H
         USING USMSG,R3            Change record, count, write it back.
         MVC   USMLNG(1),SAVEINF1+7  Move "R" from CCHHR into 1st byte
         AP    CHANGREC,=P'1'      Count a record changed.
         DROP  R3
         WRITE MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
FREEB    DS    0H                  Every READ needs a FREEDBUF.         009
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         SPACE
         B     READLOOP            Read another BRODCAST record.
READLEND DS    0H
         L     R9,SAVER9I
         BR    R9
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
************************************************************
*        PUTMSG ROUTINE                                    *
************************************************************
         SPACE
PUTMSG   STM   R14,R1,PUTSAVE
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTSAVE
         BR    R14
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
************************************************************
*        PUTLINE ROUTINE                                   *
************************************************************
         SPACE
PUTLINE  STM   R14,R1,PUTSAVE
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTSAVE
         BR    R14
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         EJECT
*-----------------------------------------------------------------*
*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*
*-----------------------------------------------------------------*
*--------------------------------------------------------------------*
         SPACE
DSNAMET  DS    0CL133
         DC    CL30' BRODCAST Dataset Name  : '
DSNAMEN  DS    CL44
         DC    CL59' '
         SPACE
*--------------------------------------------------------------------*
         SPACE
DSVOLST  DS    0CL133
         DC    CL30' BRODCAST Dataset Volser: '
DSVOLSN  DS    CL6
         DC    CL97' '
         SPACE
*--------------------------------------------------------------------*
MESNOFFL DC    C'This BRODCAST Dataset IS NOT IN USE by the system.'
MESYOFFL DC    C'This BRODCAST Dataset IS IN USE by the system.'
*--------------------------------------------------------------------*
PACKZERO DC    PL3'0'
PACKZER5 DC    PL5'0'
DUBLZERO DC    D'0'
FULLZERO DC    F'0'
* - - - - - - - - - - - - - - - - - - - - - - - - *
MOVEID   MVC   NEWID(*-*),0(R1)    EXECUTED
         USING USMSG,R2
MOVEMSG  MVC   LINET(*-*),USMTEXT  EXECUTED
         DROP  R2
* - - - - - - - - - - - - - - - - - - - - - - - - *
BLANKS   DC    CL10'          '    10 BLANKS
BLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER
ZEROS    DS    0CL8
ZERREC   DS    0CL128
ZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING
         DC    X'0000'
         DC    121X'00'
MESSAGET DC    C'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM '
MSGTLEN  EQU   *-MESSAGET
MESSAGEC DC    C'&COPYRGT &COPYRSV'
MSGCLEN  EQU   *-MESSAGEC
MESSAGE1 DC    C'Bad Open - ALLOC F(BRODCAST) DA(SYS1.BRODCAST) SH REU'
MASK10   DC    XL10'40202020202020202120'
BPARM    DC    AL2(BPARME-BPARM,0),C'NON'
BPARME   EQU   *
         DS    0F
QNAM     DC    CL8'SYSIKJBC'
RNAME    DC    X'000000'
         SPACE 3
BRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X
               BLKSIZE=129,        LENGTH OF FILES BLOCK               X
               DSORG=DA,           IS DIRECT ACCESS FILE               X
               MACRF=(RISXC,WIC),  3 BYTE RBA, DYNAMIC BUF, READ/CHECK X
               OPTCD=R,            3 BYTE RBA WILL BE USED             X
               RECFM=F,            FIXED LENGTH                        X
               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X
               KEYLEN=1,           SIZE OF KEY                         X
               BUFL=130,           KEYLEN + BLKSIZE                    X
               EXLST=JFCB1
         SPACE 3
         DS    0F                  NEEDED FOR CORRECT EXLST
JFCB1    DC    X'87'
         DC    AL3(INFMJFCB)
         IEFJFCBN LIST=YES
         LTORG
         SPACE
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         DS    0F
ENQUSER  ENQ   (QNAM,RNAME,E,,SYSTEM),MF=L
         SPACE 3
*-----------------------------------------------------------------*
*----         GETMAINED DATA AREA FIELDS                      ----*
*-----------------------------------------------------------------*
DATAAREA DSECT
SAVE     DS    9D
SAVER5A  DS    F
REC130   DS    0CL130              Dump Record made with Key+Data
KEYHOLD  DS    XL1                 Key slot
RECHOLD  DS    XL129               Data slot
TOTLRECS DS    F
CMBUFAD  DS    F                   COMMAND BUFFER ADDRESS
         DS    CL80
         DS    CL80
         DC    CL8' '
NEWID    DC    C'        '         STORE PARM USERID HERE
         DS    CL8' '              PADDING
NEWIDU   DC    C'        '         UPPERCASED USERID PARM
ADDADR   DS    0CL12
LEVEL    DS    0CL7                LEVEL OF SYS1.BRODCAST
LEVELLIT DS    CL6                    LITERAL 'LEVEL'
LEVELLEV DS    CL1                       LEVEL NUMBER - CHAR FMT
TYP5RBA  DC    X'000000'           STORE ADDRESS OF TYPE X'05'
BLOCKNO  DC    X'000000'           STORE BLOCK NUMBER FOR READ
RNAM     DC    X'000000'           FREE SEARCH RECORD RBA - STORED
USERID   DS    0CL8                STORE FOUND USERID HERE
USERIDI  DS    CL7                 STORE FOUND USERID HERE
USERIDF  DS    CL1                 8TH CHARACTER
         DS    0F                  ALIGN ON FULLWORD
SAVECPPL DS    F                   SAVE THE CPPL
SAVEUPT  DS    F                   SAVE FOR IKJIFRIF
SAVEPSCB DS    F                   SAVE FOR IKJIFRIF
SAVEECT  DS    F                   SAVE FOR IKJIFRIF
SAVER6A  DS    F                   SAVE COUNT FOR USERID SCAN
SAVER9   DS    F                   SAVE BAL REGISTER
SAVER9A  DS    F                   SAVE BAL REGISTER
SAVER9B  DS    F                   SAVE BAL REGISTER
SAVER9C  DS    F                   SAVE BAL REGISTER
SAVER9D  DS    F                   SAVE BAL REGISTER
SAVER9E  DS    F                   SAVE BAL REGISTER
SAVER9F  DS    F                   SAVE BAL REGISTER
SAVER9G  DS    F                   SAVE BAL REGISTER
SAVER9H  DS    F                   SAVE BAL REGISTER
SAVER9I  DS    F                   SAVE BAL REGISTER
SAVER9J  DS    F                   SAVE BAL REGISTER
SAVER9K  DS    F                   SAVE BAL REGISTER
SAVER9L  DS    F                   SAVE BAL REGISTER
SAVER9M  DS    F                   SAVE BAL REGISTER
SAVER9N  DS    F                   SAVE BAL REGISTER
SAVER9O  DS    F                   SAVE BAL REGISTER
SAVER9P  DS    F                   SAVE BAL REGISTER
SAVER9Q  DS    F                   SAVE BAL REGISTER
SAVER9R  DS    F                   SAVE BAL REGISTER
SAVER9S  DS    F                   SAVE BAL REGISTER
HEXSAVE  DS    3F                  SAVE FOR HEX MACRO
MYPPL    DS    7F
MYANS    DS    F
MYECB    DS    F                   USED BY PUTLINE ROUTINE
MYIOPL   DS    4F                  USED BY PUTLINE ROUTINE
MYPTPB   DS    3F                  USED BY PUTLINE ROUTINE
MYPUTLEP DS    F                   USED BY PUTLINE ROUTINE
MYOLD    DS    2F                  USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL130            USED BY PUTLINE ROUTINE
PUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE
SAVEINF1 DS    CL8                 PLACE TO STORE CCHHR
FREEREC  DS    PL5
CHANGREC DS    PL5
LINEB    DS    C                   LINE-1
LINE     DS    CL137
LINET    EQU   LINE+7
         DS    0F
RDWR     READ  MDLDECB,DI,MF=L
RDWREND  DS    0F
RDWRLEN  EQU   *-RDWR
         DC    C' '
TITLFLG  DS    X
STORKEY  DS    X
DATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA
         IKJCPPL
         IKJUPT
         IKJPSCB
         IKJECT
         IKJIOPL
         IEZIOB   DSECT=YES
         IKJZT301 DSECT=YES
         IKJZT304 DSECT=YES
         IKJZT305 DSECT=YES
         IKJEESCB DSECT=YES
         CVT  DSECT=YES
         END
