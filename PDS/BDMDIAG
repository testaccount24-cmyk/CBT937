BDMDIAG TITLE 'BDMDIAG - DIAGNOSE PROBLEMS IN SYS1.BRODCAST'
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  DOCUMENTATION:   THIS PROGRAM CAN BE RUN AS A TSO-IN-BATCH         *
*                   COMMAND.   NEED NOT BE AUTHORIZED.                *
*                                                                     *
*         SYNTAX:   BDMDIAG REPORT    (TO REPORT ALL ORPHANED MSGS)   *
*                                                                     *
*                   BDMDIAG DELBAD    (TO DELETE ALL ORPHANED MSGS)   *
*                                                                     *
*                                                                     *
*       FUNCTION:   TO REPORT AND OPTIONALLY DELETE THOSE MESSAGE     *
*                   RECORDS ON SYS1.BRODCAST WHICH ARE NO LONGER      *
*                   CHAINED OFF USERID RECORDS.  CREATION OF THESE    *
*                   RECORDS NORMALLY DOES NOT HAPPEN, BUT THEY ARE    *
*                   THE RESULT OF SOME SORT OF DATASET CORRUPTION.    *
*                   IF THEY DO OCCUR, ONLY SYNC CAN GET RID OF THEM,  *
*                   TO MY KNOWLEDGE.  AND SINCE THE PURPOSE OF THIS   *
*                   PACKAGE OF UTILITIES IS TO AVOID DOING A SYNC,    *
*                   THAT'S WHY THIS PROGRAM WAS WRITTEN.              *
*                                                                     *
*                   THE REPORT OPTION WILL LIST THE ORPHANED          *
*                   RECORDS ALONG WITH THEIR RELATIVE RECORD          *
*                   ADDRESSES.  THE DELBAD OPTION WILL DELETE EACH    *
*                   RECORD AFTER LISTING IT.                          *
*                                                                     *
*          AUTHOR:  SAM GOLOB               VERSION:   1.5.0          *
*                                                                     *
*            DATE:  March 21, 2007                                    *
*                                                                     *
*       EXECUTION:  ALLOC F(BRODCAST) DA('SYS1.BRODCAST') SH REUSE    *
*                                                                     *
*    CHANGES:                                                         *
*     VERSION 1.2  - ACTUALLY IMPLEMENTED THE DELETION OF BAD         *
*     (07/09/01)     RECORDS IF DELBAD WAS CODED.  (THIS CODE WAS     *
*                    DUMMIED OUT IN VERSION 1.1.                      *
*                                                                     *
*     Version 1.5.0 -  For the commercial version - first cut.        *
*                      Changed messages to tell you which kind of     *
*                      execution you are doing, and which are the     *
*                      correct execution parms.  Got rid of the       *
*                      instream IBM macros, using only those in       *
*                      SYS1.MACLIB.                                   *
*                                                                     *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*       I N S T R E A M    M A C R O S                                *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    STM   R15,R1,HEXSAVE
         LA    R1,&FROM
         LA    R0,&LEN
         LA    R15,&TO
         BAL   R9,HEX
         LM    R15,R1,HEXSAVE
         MEND
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
*        REGISTER EQUATES
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 1
SP000    EQU   0
         SPACE 1
         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV
         LCLC  &PGMNAME
&VERSNUM SETC  ' 1.5.0A'
&PKGNAME SETC  'BRODMSTR'
&PKGTITL SETC  'Broadcast Master'
&VERTITL SETC  ' Version '
&COPYRGT SETC  'Copyright (c) 1995-2025 Sam Golob Systems Programming L-
               LC'
&COPYRSV SETC  ' - All Rights Reserved  '
&PGMNAME SETC  'BDMDIAG '
&PGMNAME AMODE 24
&PGMNAME RMODE 24
&PGMNAME CSECT
         B     BEGINN-*(,R15)
         DC    CL8'&PGMNAME'
         DC    C' '
         DC    C'&PKGTITL'
         DC    C'&VERTITL'
         DC    C'&VERSNUM'
         DC    C' '
         DC    C'&COPYRGT'
         DC    C'&COPYRSV'
         DC    CL16' &SYSDATE &SYSTIME '
         DC    CL6'HLASM '
         DC    C'&SYSVER'
         DC    C' '
BEGINN   DS    0H
         STM   R14,R12,12(R13)
         USING BDMDIAG,R12,R11,R10,R7
         LR    R12,R15             WHO'S ON FIRST BASE ?
         LA    R11,4095(,R12)
         LA    R11,1(,R11)         WHAT'S ON SECOND ?
         LA    R10,4095(,R11)
         LA    R10,1(,R10)         THIRD ?
         LA    R7,4095(,R10)
         LA    R7,1(,R7)           FOURTH ?
         LR    R4,R1               PRESERVE CPPL POINTER.
         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         USING DATAAREA,R13
         ST    R4,SAVECPPL         SAVE CPPL FOR RELOADING IF NEEDED
         LTR   R4,R4               ANY CPPL?
         BZ    EOJ8                NO.  GET OUT
         BAL   R9,INITCON          INITIALIZE CONSTANTS IN DATA AREA
         BAL   R9,GETPSCB          GET PSCB IF ANY (IN R2)
         SPACE 1
         LTR   R2,R2               ANY PSCB?
         BZ    EOJ8                GET OUT.  NOT TSO.
         BAL   R9,CPPLPTRS         STORE STUFF OUT OF THE CPPL
         BAL   R9,SETIOPL          SET UP IOPL FOR PUTLINE
         BAL   R9,CHEKAUTH         ARE WE OPER OR ACCT ?
CONT0    L     R1,0(,R4)           PT TO CMD BUFFER.
         LTR   R1,R1               ANY CMD BUFFER?
         BZ    EOJ4                GET OUT IF NONE
         LH    R3,0(,R1)           LOAD LENGTH.
         CH    R3,=H'4'            ANYTHING?
         BNH   EOJ4                NO.  GET OUT.
         LR    R5,R3               LENGTH OF COMMAND + 4
         ICM   R5,14,FULLZERO      CLEAR HI ORDER 3 BYTES
         LH    R3,2(,R1)           LOAD OFFSET.
         SR    R5,R3               SUBTRACT OFFSET FROM FULL LENGTH+4
         SH    R5,=H'4'            CORRECT FOR LENGTH OF CMDBUFR HEADER
         BC    5,EOJ8              LESS, OR OVERFLOW, OUT.
         BC    8,HELPMSG
         BAL   R9,GETIDS           MAKE SURE YOU PULL THE NEWID OUT
*                                  OF THE KEYWORD (AND ITS LENGTH)
*                                  AND ALSO SAVE THE CURRENT ID&LENGTH
         MVI   ALLFLAG,X'FF'       RUN CHAIN FOR ALL IDS W/MESSAGES
MSGX0    DS    0H
         MVC   LINE,LINE-1
         MVC   LINET,MESSAG20
         LA    R0,L'MESSAG20+7
         BAL   R9,MSG
         MVC   LINE,LINE-1
         MVC   LINET,MESSAG21
         LA    R0,L'MESSAG21+7
         BAL   R9,MSG
         MVC   LINE,LINE-1
         MVC   LINET,MESSAG22
         LA    R0,L'MESSAG22+7
         BAL   R9,MSG
         MVC   LINE,LINE-1
         LA    R0,133
         BAL   R9,MSG
         MVC   LINE,LINE-1
         MVC   LINET,MESSAG23
         LA    R0,L'MESSAG23+7
         BAL   R9,MSG
         MVC   LINE,LINE-1
         MVC   LINET,MESSAG24
         LA    R0,L'MESSAG24+7
         BAL   R9,MSG
         MVC   LINE,LINE-1
         MVC   LINET,MESSAG25
         LA    R0,L'MESSAG25+7
         BAL   R9,MSG
         MVC   LINE,LINE-1
         LA    R0,133
         BAL   R9,MSG
FIXSET   DS    0H
         CLC   NEWID(6),=C'DELBAD'      KEYWORD FOR FIXING
         BNE   TRYREAD
         MVI   FIXFLAG,X'FF'            SET FIX FLAG
         MVC   LINE,LINE-1
         MVC   LINET,MESSAG27
         LA    R0,L'MESSAG27+7
         BAL   R9,MSG
         MVC   LINE,LINE-1
         LA    R0,133
         BAL   R9,MSG
         B     FIXPOINT
TRYREAD  DS    0H
         CLC   NEWID(6),=C'REPORT'      KEYWORD FOR REPORTING
         BNE   INVPARM
         MVC   LINE,LINE-1
         MVC   LINET,MESSAG26
         LA    R0,L'MESSAG26+7
         BAL   R9,MSG
         MVC   LINE,LINE-1
         LA    R0,133
         BAL   R9,MSG
         B     FIXPOINT
INVPARM  DS    0H
         MVC   LINE,LINE-1
         MVC   LINET,MESSAG28
         LA    R0,L'MESSAG28+7
         BAL   R9,MSG
         MVC   LINE,LINE-1
         LA    R0,133
         BAL   R9,MSG
         B     EOJ4
FIXPOINT DS    0H
         MVC   TRYID(8),NEWID      RUN USERID SCAN AGAINST NEW ID
DOBROD   OPEN  (BRODCAST,(UPDAT))
         TM    BRODCAST+48,X'10'        TEST FOR GOOD OPEN
         BNO   WMESS1                   NO GOOD. DISPLAY MESSAGE.
         BAL   R9,HEADREAD         READ HEADER RECORD AND EXTRACT
*                                  RBA OF FIRST USER RECORD TO SEARCH
*                                  FOR THE USERID SLOT FOR OUR USERID.
*                                  THIS VALUE IS STORED IN SAVERBA(3).
*
MSGX1    LA    R0,65                  TAKE OUT LATER
         MVC   LINE,LINE-1            TAKE OUT
         HEX   LINE+46,4,NUMRECS         TAKE OUT LATER
         MVC   LINE+10(31),=C'HEX NUMBER OF RECORDS IN TABLE ' TAKE OUT
         BAL   R9,MSG                 TAKE OUT
*
         BAL   R9,MAKETABL         GETMAIN THE KEY TABLE.
*
         BAL   R9,FILLTABL         FILL THE TABLE WITH ALL THE
*                                     RECORD KEYS.
* ------------------------------------------------------------------ *
* ---    MAIN LOOP TO READ EACH USERID'S MESSAGES.               --- *
* ------------------------------------------------------------------ *
INDEXUS  DS    0H                  READ THROUGH USERID RECORDS
         CLC   SAVERBA(3),ZEROS    ARE WE AT THE END OF USERID RECORDS
         BE    ENDUSER             NO USERID LIKE THIS. DEAL WITH IT.
*   PLEASE MAKE SURE THAT THIS REGISTER R10 ISN'T MESSED WITH, OR
*    IS PROPERLY SAVED, SO THE BCT INSTRUCTION IS PROPER, AND
*    USERIDS AREN'T MISSED UPON RETRY.
*        LA    R10,9               COUNT OF USERS PER RECORD
*        LA    R1,9                SEE BELOW
*        ST    R1,SAVER1
         MVC   BLOCKNO,SAVERBA     GET RBA FOR READ
         READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R3,MDLDECB+12       ADDRESS OF RECORD
         USING USDIR,R3
         MVC   LASTRBA(3),SAVERBA  SAVE CURRENT RBA
         MVC   SAVERBA(3),USDNEXT  GET NEXT RECORD'S RBA
         LA    R8,0                INITIALIZE USERID SLOT COUNTER
         LA    R1,9
         ST    R1,SAVER1
USRLOOP  DS    0H
         ST    R1,SAVER1
         MVC   USERID(8),BLANKS    ENSURE BLANK IN 8TH PLACE
         MVC   USERIDI(7),USDID    COPY WHO THIS IS
         CLC   USERIDI(7),ZEROS    IS THIS A REAL USER?
         BE    TRYNEXT             NOPE. JUST GO TO NEXT ENTRY
         MVC   TRYID(7),USERIDI    COUNT THIS ID TO BE PROCESSED
         CLC   USERID(7),TRYID     IS THIS THE USERID WE WANT?
         BE    SAVPTRS             YEP. GO DEAL WITH IT
TRYNEXT  LA    R3,13(,R3)          BUMP LOCATION TO NEXT USERID
         LA    R8,1(,R8)           BUMP COUNTER WITHIN RECORD
         L     R1,SAVER1
         BCT   R1,USRLOOP
*        BCT   R10,USRLOOP         TRY FOR ANOTHER USER ENTRY
*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         MVC   UMSGCNT(3),PACKZERO   ZERO THE USERID'S MESSAGE COUNTER
         B     INDEXUS             END OF RECORD? GET ANOTHER.
         SPACE 3
SAVPTRS  MVC   MYUSRBA(3),LASTRBA  SAVE RBA OF RECORD WITH MY USERID
         STC   R8,MYUSSLOT         SAVE SLOT IN RECORD
         MVC   SAVEPTRS(6),USDRBA  SAVE POINTERS TO MY MESSAGES
         CLC   SAVEPTRS(6),ZEROS   DOES THIS ID HAVE ANY MESSAGES?
         BE    SKIPSHOW            NO. DON'T DISPLAY THE ZEROS.
MSGX1A   LA    R0,65                  DISPLAY USERID AND POINTERS
         MVC   LINE,LINE-1            CLEAR PRINT AREA
         MVC   LINE+1(7),TRYID        MOVE IN USERID
         HEX   LINE+10,3,USDRBA       MOVE IN START RBA
         HEX   LINE+18,3,USDEND       MOVE IN END RBA
         MVC   LINE+26(21),=C'      USERID POINTERS'
*        BAL   R9,MSG                 WRITE THE MESSAGE
SKIPSHOW DS    0H
*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
GOWRITE  DS    0H
         MVC   MESSRBA(3),SAVEPTRS   GET RBA OF FIRST MESSAGE
         CLC   MESSRBA(3),ZEROS    DOES THIS ID HAVE ANY MESSAGES?
         BE    TRYMOREN            NO. GO TO THE NEXT ID.
*        MVC   RNAM(3),MYUSRBA     USE RBA AS RNAME FOR ENQ/DEQ
*        ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)
         BAL   R9,TRUSLOOP         LOOP THRU CHAIN FOR THIS USERID
         BAL   R9,WRITEND          FINISH OFF USERID AND CHECK MORE
         MVC   BLOCKNO,MYUSRBA     GET RBA FOR READ TO CONTINUE
         BAL   R9,REFINDUS         FIND USER SLOT AGAIN TO GO FURTHER
*        MVC   RNAM(3),MYUSRBA     USE RBA AS RNAME FOR ENQ/DEQ
*        DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)
         DROP  R3
TRYMOREN B     TRYNEXT             THEN GO FURTHER
* ------------------------------------------------------------------ *
* ---    END OF MAIN LOOP FOR USERID'S.                          --- *
* ------------------------------------------------------------------ *
BADEND   MVC   LINE,LINE-1                COME HERE IF ID KEY NOT X'01'
         LA    R0,L'MESPREND+7             WRITE MESSAGE THAT
         MVC   LINET(L'MESPREND),MESPREND     THINGS ARE NOT
         BAL   R9,MSG                            SO GOOD.
*                                 >>>     GET HERE AT END OF USER RCDS
ENDUSER  DS    0H                 >>>     NO MORE USERIDS TO SEARCH
         BAL   R9,GETFRESR         GET RBA POINTED TO BY FREE SRCH RCD
         BAL   R9,FINDBAD          FIND AND DISPLAY UNCHAINED MESSAGES
*
* ---->
         CLI   FIXFLAG,X'FF'
         BNE   FINDNREW
         ST    R9,SAVR9
         BAL   R9,REWRFRSR         ADJUST FREE SEARCH RECORD
         L     R9,SAVR9
FINDNREW DS    0H
* ---->
*
         MVC   LINE,LINE-1                   YES. WE TOTAL 'EM ALL.
         LA    R0,60                           WRITE A BUNCH OF
         BAL   R9,MSG                          LINES AT THE END
         CLI   FIXFLAG,X'FF'
         BNE   NOFIXMSG
         MVC   WKAALL,FMSALL                      WITH THE TOTAL COUNT
         MVC   WKAALL+46(10),MASK10               AND ENDING MESSAGE
         ED    WKAALL+46(10),FMSGCNT           MOVE IN COUNT
         MVC   LINET(L'WKAALL),WKAALL          MOVE TO PRINT LINE
         LA    R0,L'WKAALL+7                   LENGTH OF OVERALL MESSG
         BAL   R9,MSG                          WRITE IT
         B     FIXMESSG
NOFIXMSG DS    0H
         MVC   WK2ALL,VALALL                      WITH THE TOTAL COUNT
         MVC   WK2ALL+46(10),MASK10               AND ENDING MESSAGE
         ED    WK2ALL+46(10),VMSGCNT           MOVE IN COUNT
         MVC   LINET(L'WK2ALL),WK2ALL          MOVE TO PRINT LINE
         LA    R0,L'WK2ALL+7                   LENGTH OF OVERALL MESSG
         BAL   R9,MSG                          WRITE IT
FIXMESSG DS    0H
         MVC   WK1ALL,MESALL                      TOTAL COUNT MESSAGE
         MVC   WK1ALL+46(10),MASK10               MOVE IN EDIT PATTERN
         ED    WK1ALL+46(10),TMSGCNT              DISPLAY TOTAL COUNT
         MVC   LINET(L'WK1ALL),WK1ALL             MOVE TO DISPLAY LINE
         LA    R0,L'WK1ALL+7                      SET LENGTH AND
         BAL   R9,MSG                             WRITE MESSAGE.
ZEROUT   B     EOJ0           THEN WE'RE DONE.
         SPACE 3
WMESS1   MVC   LINE,LINE-1                  WRITE MESSAGE THAT
         MVC   LINET,MESSAGE1                 SYS1.BRODCAST NOT ALLOC'D
         LA    R0,L'MESSAGE1+7                  TO DDNAME BRODCAST.
         BAL   R9,MSG
EOJ4     LA    R15,4               SET CC = 4.
         ST    R15,SAVER15         PRESERVE IT.
         MVC   LINE,LINE-1
         LA    R0,27
         BAL   R9,MSG
         MVC   LINE,LINE-1
         MVC   LINET,=C'  Return Code is 4. '
         LA    R0,27
         BAL   R9,MSG
         MVC   LINE,LINE-1
         LA    R0,27
         BAL   R9,MSG
         B     EOJ                 CONT
EOJ      DS    0H                  BYE.
         CLOSE (BRODCAST)
         B     EOJXXX
         L     R6,TABLADDR                  SET UP TO
         L     R5,TABLSIZE                  FREEMAIN THE KEY TABLE
         FREEMAIN RU,LV=(R5),A=(R6),SP=SP000
EOJXXX   LR    R1,R13              SET UP FOR SAVEAREA FREEMAIN
         L     R13,4(,R13)         POINT R13 TO CALLER'S SAVEAREA
         L     R0,DATALEN
         FREEMAIN RU,LV=(R0),A=(R1),SP=SP000
         L     R15,SAVER15         NON-SPOILED R15.
         ST    R15,16(,R13)        PUT RC INTO PASSED SAVE AREA
         L     R14,12(,R13)        LOAD THE SAVED REGISTERS BACK
         LM    R0,R12,20(R13)
         BR    R14
EOJ0     SR    R15,R15             SET CC = 0.
         ST    R15,SAVER15         PRESERVE IT.
         MVC   LINE,LINE-1
         LA    R0,27
         BAL   R9,MSG
         MVC   LINE,LINE-1
         MVC   LINET,=C'  Return Code is 0. '
         LA    R0,27
         BAL   R9,MSG
         MVC   LINE,LINE-1
         LA    R0,27
         BAL   R9,MSG
         B     EOJ                 CONT.
EOJ8     LA    R15,8               SET CC = 8.
         ST    R15,SAVER15         PRESERVE IT.
         MVC   LINE,LINE-1
         LA    R0,27
         BAL   R9,MSG
         MVC   LINE,LINE-1
         MVC   LINET,=C'  Return Code is 8. '
         LA    R0,27
         BAL   R9,MSG
         MVC   LINE,LINE-1
         LA    R0,27
         BAL   R9,MSG
         B     EOJ                 CONT
         EJECT
*-----------------------------------------------------------------*
HELPMSG  DS    0H
         MVC   LINE,LINE-1
         MVC   LINET,MESSAG20
         LA    R0,L'MESSAG20+7
         BAL   R9,MSG
         MVC   LINE,LINE-1
         MVC   LINET,MESSAG21
         LA    R0,L'MESSAG21+7
         BAL   R9,MSG
         MVC   LINE,LINE-1
         MVC   LINET,MESSAG22
         LA    R0,L'MESSAG22+7
         BAL   R9,MSG
         MVC   LINE,LINE-1
         LA    R0,133
         BAL   R9,MSG
         MVC   LINE,LINE-1
         MVC   LINET,MESSAG23
         LA    R0,L'MESSAG23+7
         BAL   R9,MSG
         MVC   LINE,LINE-1
         MVC   LINET,MESSAG24
         LA    R0,L'MESSAG24+7
         BAL   R9,MSG
         MVC   LINE,LINE-1
         MVC   LINET,MESSAG25
         LA    R0,L'MESSAG25+7
         BAL   R9,MSG
         MVC   LINE,LINE-1
         LA    R0,34
         BAL   R9,MSG
         MVC   LINE,LINE-1
         MVC   LINET,=C'You have to code a PARM... '
         LA    R0,34
         BAL   R9,MSG
         MVC   LINE,LINE-1
         LA    R0,34
         BAL   R9,MSG
         MVC   LINE,LINE-1
         B     EOJ8
*-----------------------------------------------------------------*
*---*                S U B R O U T I N E S                    *---*
*-----------------------------------------------------------------*
         SPACE 2
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        GET THE NEW USERID FROM THE PARM, AND SAVE THE OLD ONE.  *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         USING PSCB,R2
GETIDS   DS    0H
         ST    R9,SAVER9A
         AR    R1,R3               POINT ...
         LA    R1,4(,R1)           ... TO CHAR.
         LA    R6,7                LOAD REG FOR BCT LOOP
         LR    R4,R1               INITIALIZE POINTER
         LA    R4,0(,R4)                TO FIRST CHARACTER OF ID
         LA    R8,0                INITIALIZE CHARACTER COUNT
CUTIDLEN CLI   0(R4),X'40'         IS THIS CHARACTER A BLANK?
         BE    NOMORCUT            YES, WE ARE AT THE END OF THE ID.
         LA    R4,1(,R4)           BUMP ANOTHER CHARACTER
         LA    R8,1(,R8)           COUNT ANOTHER CHARACTER
         CR    R8,R5               END OF COMMAND BUFFER ?
         BNL   NOMORCUT            YES. GET OUT NOW.
         BCT   R6,CUTIDLEN         TRY FOR BLANK AGAIN
NOMORCUT DS    0H
         MVC   NEWID(8),BLANKS     CLEAR FIELD
         BCTR  R8,0                SUBTRACT 1 FOR EXECUTE
         EX    R8,MOVEID           MAKE SUBCOMMAND INTO NEW ID
         LA    R8,1(,R8)           BUMP REG BACK TO WHERE IT WAS
         STC   R8,NEWPSCBL         SAVE NEW USER'S LENGTH
         OC    NEWID(8),BLANKS     UPPERCASE NEW USERID
         MVC   OLDID(8),BLANKS     CLEAR FIELD
         MVC   OLDID(7),PSCBUSER   SAVE ORIGINAL USERID
         OC    OLDID(8),BLANKS     MAKE SURE ALL 8 CHARS ARE INITLIZED
         MVI   OLDPSCBL,X'00'      INITIALIZE FIELD
         MVC   OLDPSCBL(1),PSCBUSRL  SAVE ORIGINAL USERID LENGTH
         DROP  R2
         L     R9,SAVER9A
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        MAKE TABLE FOR KEYS FOR ALL RECORDS IN SYS1.BRODCAST.    *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
MAKETABL DS    0H
         ST    R9,SAVER9B
         L     R6,NUMRECS
         LTR   R6,R6
         BZ    ERROR2
         LA    R6,10(,R6)
         ST    R6,TABLSIZE
MSGX2    LA    R0,65                  TAKE OUT LATER
         MVC   LINE,LINE-1            TAKE OUT
         HEX   LINE+46,4,TABLSIZE        TAKE OUT LATER
         MVC   LINE+10(31),=C'HEX NUMBER OF TABLE SIZE       ' TAKE OUT
         BAL   R9,MSG                 TAKE OUT
         GETMAIN RU,LV=(R6),SP=SP000,LOC=BELOW
         LTR   R1,R1
         BZ    ERROR2
         ST    R1,TABLADDR
MSGX3    LA    R0,65                  TAKE OUT LATER
         MVC   LINE,LINE-1            TAKE OUT
         HEX   LINE+46,4,TABLADDR     TAKE OUT LATER
         MVC   LINE+10(31),=C'TABLE ADDRESS IN HEX           ' TAKE OUT
         BAL   R9,MSG                 TAKE OUT
         B     MAKETEND
ERROR2   MVC   LINE,LINE-1                  WRITE MESSAGE THAT
         MVC   LINET,MESSAGE3                 TABLE IS NOT GETMAINED
         LA    R0,L'MESSAGE3+7                  PROPERLY.
         BAL   R9,MSG
         B     EOJ8                         AND SCRAMMEZ VOUS
MAKETEND DS    0H
         L     R9,SAVER9B
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        FILL TABLE WITH KEYS FOR ALL RECORDS IN SYS1.BRODCAST.   *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
FILLTABL DS    0H
         ST    R9,SAVER9C
STARTRD  MVC   BLOCKNO(3),ZEROS
         L     R4,TABLADDR
READLOOP CLC   BLOCKNO(3),NUMRECS+1  DID WE REACH MAX ?
         BE    READEND
         READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R2,MDLDECB+20       GET KEY
         MVC   0(1,R4),0(R2)       DUMP INTO TABLE
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         LA    R4,1(,R4)           INCREMENT ADDRESS IN TABLE
         ICM   R3,7,BLOCKNO        INCREMENT
         STCM  R3,7,BLOCLAST
         LA    R3,1(,R3)             BLOCK NUMBER
         STCM  R3,7,BLOCKNO            FOR NEXT READ
         B     READLOOP
READEND  DS    0H
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
MSGX4    LA    R0,65                  TAKE OUT LATER
         MVC   LINE,LINE-1            TAKE OUT
         HEX   LINE+48,3,BLOCLAST     TAKE OUT LATER
         MVC   LINE+10(31),=C'LAST RELATIVE BLOCK NUMBER READ'
         BAL   R9,MSG                 TAKE OUT
WMESS2   DS    0H
         MVC   LINE,LINE-1
         LA    R0,130
         BAL   R9,MSG
         MVC   LINE,LINE-1                  WRITE MESSAGE THAT
         MVC   LINET,MESSAGE2                 THE TABLE HAS
         LA    R0,L'MESSAGE2+7                  BEEN FILLED W/KEYS.
         BAL   R9,MSG
         CLI   FIXFLAG,X'FF'                IS BRODCAST BEING FIXED?
         BNE   DONSAYFX
         MVC   LINE,LINE-1                  WRITE MESSAGE THAT
         MVC   LINET,MESSAG2A                 ORPHANED MSGS ARE
         LA    R0,L'MESSAG2A+7                  BEING DELETED....
         BAL   R9,MSG
DONSAYFX DS    0H
         MVC   LINE,LINE-1
         LA    R0,130
         BAL   R9,MSG
         L     R9,SAVER9C
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        READ THE SYS1.BRODCAST HEADER RECORD AND COPY FIELDS.    *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEADREAD DS    0H
         ST    R9,SAVER9D
         READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOKZERO,MF=E       RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R3,MDLDECB+12       ADDRESS OF RECORD
         USING R1BC,R3             ADDRESSABILITY TO HEADER RECORD MAP
         MVC   SAVERBA(3),R1USPTR  SAVE RBA OF FIRST USER DIR RECORD
         MVC   NUMRECS(4),R1RECNUM  TOTAL NUM OF RECORDS IN DATASET.
         MVC   LEVEL(7),R1LEVEL    LEVEL+6 IS VERSION OF TSO
         CLC   LEVEL+6(1),=C'2'    IS THIS TSO LEVEL 1?
         BL    SKIPFREE            YEP. NO TYPE 5 RECORD ADDRESS
         MVC   TYP5RBA(3),R1FRESRH    STORE RBA OF TYPE 5
SKIPFREE DS    0H
         DROP  R3
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         L     R9,SAVER9D
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        SAVE FREE SEARCH RBA FROM FREE SEARCH RECORD             *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
GETFRESR DS    0H                  GET RBA POINTED TO BY FREE SRCH RCD
         ST    R9,SAVER9E
         CLC   TYP5RBA(3),ZEROS    IS THERE A TYPE 5 RECORD IN BRODCAST
         BE    GETFREND            NO, PROBABLY NOT RUNNING VERS 2
TYP5READ READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               TYP5RBA,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R3,MDLDECB+12       ADDRESS OF RECORD
         LA    R5,1(,R3)           POINT TO FREE SEARCH RBA
         MVC   FSRCRBA(3),0(R5)    SAVE ITS VALUE
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
GETFREND DS    0H
         L     R9,SAVER9E
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        WE HAVE TO LOWER THE FREE SEARCH RECORD'S RBA POINTER    *
*        WHEN WE DELETE A RECORD WITH A LOWER RBA.                *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
CHNGFSRC DS    0H
         ST    R9,SAVER9F
         CLI   REWFLAG,X'FF'       ARE WE CHANGING ANYTHING ?
         BNE   CHNGFEND            NO. SKIP THIS ENTIRE SECTION
         CLC   TYP5RBA(3),ZEROS    IS THIS TSO VERSION 1 ?
         BE    CHNGFEND            YES. SKIP THIS SECTION
         CLC   NSRCRBA(3),ZEROS    NO PROBLEM RECORDS ?
         BE    CHNGFEND            NONE. SKIP SECTION.
FRSRCEAD DS    0H
         MVC   RNAM(3),TYP5RBA     USE RBA AS RNAME FOR ENQ/DEQ
         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER),RET=HAVE
         READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               TYP5RBA,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
MSGX4A   LA    R0,L'MESSAGE4              LOAD LENGTH OF MESSAGE
         MVC   LINE,LINE-1                CLEAR OUTPUT LINE
         HEX   WK4ALL+24,3,FSRCRBA        DISPLAY FREE SEARCH RBA
         MVC   LINE(L'WK4ALL),WK4ALL      MOVE IN FIXED PART OF MSG
         BAL   R9,MSG                     WRITE OUT MESSAGE
MSGX5    LA    R0,L'MESSAGE5            LOAD LENGTH OF MESSAGE
         MVC   LINE,LINE-1              CLEAR OUTPUT LINE
         HEX   WK5ALL+24,3,NSRCRBA      DISPLAY RBA TO UPDATE FRS RBA
         MVC   LINE(L'WK5ALL),WK5ALL    MOVE IN FIXED PART OF MSG
         BAL   R9,MSG                   WRITE OUT MESSAGE
         L     R3,MDLDECB+12          POINT TO TYPE 5 RECORD
MSGX6    LA    R0,L'MESSAGE6            LOAD LENGTH OF MESSAGE
         MVC   LINE,LINE-1              CLEAR OUTPUT LINE
         MVC   FROM(7),0(R3)            MOVE BEGINNING OF FS RECORD
         HEX   WK6ALL+16,7,FROM         MAKE ENTIRE AREA DISPLAYABLE
         MVC   LINE(L'WK6ALL),WK6ALL    MOVE IN FIXED PART OF MSG
         BAL   R9,MSG                   WRITE OUT MESSAGE
         LA    R3,1(,R3)              BUMP TO FS RECORD'S RBA
         CLC   0(3,R3),NSRCRBA        IS NEW SRCH RBA SMALLER ?
         BNH   NOCHNGF                NO. DON'T CHANGE IT.
         MVC   0(3,R3),NSRCRBA        YES.  LOWER IT.
NOCHNGF  DS    0H
         WRITE MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               TYP5RBA,MF=E        RBA OF THE RECORD
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
CHNGFEND DS    0H
         MVC   RNAM(3),TYP5RBA     USE RBA AS RNAME FOR ENQ/DEQ
         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)
         L     R9,SAVER9F
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        WE'RE IN THIS SECTION WHEN WE SEARCH THE KEY TABLE       *
*        FOR MESSAGES TO DELETE (IN FIX MODE) OR FOR MESSAGES     *
*        THAT ARE IN ERROR (IN DISPLAY MODE).                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
FINDBAD  DS    0H
         ST    R9,SAVER9G
         MVC   RNAM(3),ZEROS       STOP SEND AND LISTBC NOW
         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER),RET=HAVE
         MVC   MESSRBA(3),ZEROS    START SEARCH WITH HEADER
* -- >
         MVI   LINE-1,X'40'
         MVC   LINE,LINE-1
         MVC   WK3ALL(L'MESSAG10),MESSAG10
         MVC   LINET(L'WK3ALL),WK3ALL
         LA    R0,L'WK3ALL+7
         BAL   R9,MSG
         MVC   LINE,LINE-1
         MVC   WK3ALL(L'MESSAG11),MESSAG11
         MVC   LINET(L'WK3ALL),WK3ALL
         LA    R0,L'WK3ALL+7
         BAL   R9,MSG
* -- >
TABLECYC DS    0H                  ONLY WRITE OUT UNCHAINED MESSAGES
         CLC   MESSRBA(3),NUMRECS+1     AT END OF TABLE?
         BE    FINDBEND                 YEP. END THE ROUTINE
         L     R5,TABLADDR              LOAD START OF TABLE
         XR    R6,R6                    CLEAR HI BYTE
         ICM   R6,7,MESSRBA             LOAD RECORD NUMBER
         AR    R5,R6                    GET PLACE IN TABLE
         MVC   WRONGKEY(1),0(R5)        SAVE THIS TABLE ENTRY
         CLI   0(R5),X'03'              IS IT AN X'03' ?
         BE    SHOWRCD                  YES. GO DUMP MESSAGE.
         CLI   0(R5),X'DD'              IS IT AN X'DD' ?
         BE    SHOWRCD                  YES. GO DUMP MESSAGE.
         LA    R6,1(,R6)           BUMP PLACE IN TABLE
         STCM  R6,7,MESSRBA        INCREMENT RECORD NUMBER
         B     TABLECYC
SHOWRCD  DS    0H
         READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               MESSRBA,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R2,MDLDECB+20       POINT TO KEY
         CLI   0(R2),X'03'         IS THIS A MESSAGE RECORD
         BNE   FINDBEND            NO, WE HAVE NO BUSINESS HERE
         L     R2,MDLDECB+12       LOOK AT THE RECORD
         USING USMSG,R2            AS A MESSAGE RECORD
         MVI   LINE-1,X'40'        PUT IN BLANK TO CLEAR LINE
         MVC   LINE,LINE-1         CLEAR OUTPUT AREA
         XR    R0,R0               ZERO REGISTER
         IC    R0,USMLNG           LOAD LENGTH OF USER MESSAGE
         DROP  R2
         LR    R3,R0               LOAD LENGTH FOR EXECUTE
         BCTR  R3,0                ONE LESS FOR EXECUTE
         EX    R3,MOVDMSG          MOVE MESSAGE TO OUTPUT LINE
         A     R0,=F'11'           ADD 11 TO LENGTH BECAUSE OF INSERTS
         HEX   LINE+7,1,WRONGKEY   INCLUDE TABLE VALUE FOR RECORD
         HEX   LINE,3,MESSRBA      INCLUDE RBA NUMBER IN DISPLAY
         BAL   R9,MSG              NOW WRITE THE MESSAGE OUT
* -- > test
*        MVC   LINE,LINE-1
*        HEX   LINE+26,1,FIXFLAG
*        BAL   R9,MSG
* -- > test
* ---->
         CLI   FIXFLAG,X'FF'
         BNE   FINDNFIX
         ST    R2,SAVR2
         BAL   R9,DELREC
         L     R2,SAVR2
FINDNFIX DS    0H
* ---->
         AP    DMSGCNT,=P'1'       AND COUNT IT
FINDNOFX DS    0H
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         BAL   R9,CHNGFSRC         GO CHANGE FREE SEARCH RECORD PTR
*                                   IF THIS IS NEEDED.
         XR    R6,R6                    CLEAR HI BYTE
         ICM   R6,7,MESSRBA             LOAD RECORD NUMBER
         LA    R6,1(,R6)           BUMP PLACE IN TABLE
         STCM  R6,7,MESSRBA        INCREMENT RECORD NUMBER
         B     TABLECYC
FINDBEND DS    0H
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         MVC   LINE,LINE-1
         LA    R0,130
         BAL   R9,MSG
         MVC   WK3ALL,INVALL                      WITH THE TOTAL COUNT
         MVC   WK3ALL+46(10),MASK10               AND ENDING MESSAGE
         ED    WK3ALL+46(10),DMSGCNT
         MVC   LINET(L'WK3ALL),WK3ALL
         LA    R0,L'WK3ALL+7
         BAL   R9,MSG
         MVC   RNAM(3),ZEROS       ALLOW SEND AND LISTBC NOW
         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)
         L     R9,SAVER9G
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
REWRFRSR DS    0H            REWRITE FREE SEARCH RECORD.
         ST    R9,SAVER9H
         CLC   TYP5RBA(3),ZEROS    IS THERE A TYPE 5 RECORD IN BRODCAST
         BE    REWRFEND            NO, PROBABLY NOT RUNNING VERS 2
TYP5REA  DS    0H
         MVC   RNAM(3),ZEROS       ENQUEUE ON HEADER RECORD
         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER),RET=HAVE
         MVC   RNAM(3),TYP5RBA     USE RBA AS RNAME FOR ENQ/DEQ
         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER),RET=HAVE
         READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               TYP5RBA,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R3,MDLDECB+12       POINT TO RECORD
         LA    R5,1(,R3)           POINT TO FREE SEARCH RBA
         MVC   FSRCRBA(3),0(R5)    SAVE ITS CURRENT VALUE
         CLC   0(3,R5),MINRBA      SHOULD FREE SEARCH RECORD BE LOWERED
         BNH   NOFRSR                NO. JUST GET OUT.
         MVC   0(3,R5),MINRBA      YES. LOWER IT
         WRITE MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               TYP5RBA,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
NOFRSR   DS    0H
         MVC   RNAM(3),TYP5RBA     USE RBA AS RNAME FOR ENQ/DEQ
         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)
         MVC   RNAM(3),ZEROS       RELEASE ENQ ON HEADER RECORD
         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
REWRFEND DS    0H
         L     R9,SAVER9H
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        WRITE A MESSAGE LINE                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
MSG      DS    0H
         ST    R9,SAVER9I
         LA    R1,LINE             WRITE A LINE USING PUTLINE FACILITY
*        LOAD LENGTH OF MESSAGE INTO R0 BEFORE CALLING THIS ROUTINE.
         BAL   R14,PUTLINE
         MVC   LINE,LINE-1
         L     R9,SAVER9I
         BR    R9
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        MAKE A HEXADECIMAL NUMBER DISPLAYABLE                    *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEX      DS    0H
         ST    R9,SAVER9J
         MVC   1(1,R15),0(R1)      MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         L     R9,SAVER9J
         BR    R9                  RETURN TO CALLER
HEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        DATA AREAS THAT NEED TO BE INITIALIZED AT THE BEGINNING  *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
INITCON  DS    0H
         ST    R9,SAVER9K
         MVI   LINE-1,C' '         INITIALIZE BLANK
         MVC   UMSGCNT(3),PACKZERO INITIALIZE COUNTER
         MVC   TMSGCNT(5),PACKZER5 INITIALIZE COUNTER
         MVC   VMSGCNT(5),PACKZER5 INITIALIZE COUNTER
         MVC   DMSGCNT(5),PACKZER5 INITIALIZE COUNTER
         ZAP   FMSGCNT,=P'0'
         MVC   WK1TOTAL,MESTOTAL                      INIT AREAS
         MVC   WK1NOUSR,MESNOUSR
         MVC   WK1ALL,MESALL
         MVC   WK2ALL,VALALL
         MVC   WK3ALL,INVALL
         MVC   WK4ALL,MESSAGE4
         MVC   WK5ALL,MESSAGE5
         MVC   WK6ALL,MESSAGE6
         MVC   LEVEL(7),BLANKS
         MVC   TYP5RBA(3),ZEROS
         MVC   LASMRBA(3),ZEROS
         MVC   ENCHRBA(3),ZEROS
         MVC   MINRBA(3),=X'0FFFFF'    PUT A LARGE VALUE IN
         MVC   RNAM(3),ZEROS
         MVC   NUMRECS(4),ZEROS
         MVC   TABLSIZE(4),ZEROS
         MVC   TABLADDR(4),ZEROS
         MVI   ALLFLAG,X'FF'
         MVI   FIXFLAG,X'00'
         MVI   REWFLAG,X'00'
         MVI   NOFREE,X'00'
         L     R9,SAVER9K
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        RUN A CONTROL BLOCK CHAIN TO GET ADDRESS OF THE PSCB     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
GETPSCB  DS    0H
         ST    R9,SAVER9L
         L     R1,16               POINT TO CVT.
         L     R1,0(,R1)           POINT TO TCB/ASCB WORDS
         L     R1,4(,R1)           POINT TO TCB.
         L     R1,X'B4'(,R1)       POINT TO JSCB.
         L     R1,X'108'(,R1)      POINT TO PSCB.
         LA    R2,0(,R1)           CLEAR HIGH BYTE.  DUMP INTO R2
         L     R9,SAVER9L
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        SAVE AS MUCH INFORMATION AS POSSIBLE FROM THE CPPL       *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
CPPLPTRS DS    0H
         ST    R9,SAVER9M
         L     R4,SAVECPPL         SAVE ADDRESS OF CPPL
         USING CPPL,R4
         ST    R6,SAVER6              SAVE R6
         L     R6,CPPLUPT          SAVE CPPL POINTERS, SUCH AS:
         ST    R6,SAVEUPT             THE UPT
         L     R6,CPPLPSCB
         ST    R6,SAVEPSCB            THE PSCB
         L     R6,CPPLECT
         ST    R6,SAVEECT             THE ECT
         L     R6,CPPLCBUF
         ST    R6,CMBUFAD             THE COMMAND BUFFER ADDRESS
         L     R6,SAVER6              RESTORE R6
         DROP  R4
         L     R9,SAVER9M
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*              TEST IF USER HAS PSCB AUTHORIZATION.               *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         USING PSCB,R2
CHEKAUTH DS    0H
         ST    R9,SAVER9N
         TM    PSCBATR1,PSCBACCT   ACCT USER?
         BO    CONT0               YES.  CONTINUE.
         TM    PSCBATR1,PSCBCTRL   OPER USER?
         BZ    EOJ4                NO.  GET OUT.
         DROP  R2
         L     R9,SAVER9N
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        GIVEN THE RBA AND THE USERID SLOT NUMBER,                *
*        GO FIND THE SYS1.BRODCAST USERID SLOT.                   *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
REFINDUS DS    0H                  GET USER SLOT GIVEN RBA AND SLOT #
         ST    R9,SAVER9O
         READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R2,MDLDECB+20       ADDRESS OF KEY
         CLI   0(R2),X'01'         USERID RECORD?
         BNE   BADEND
         LA    R2,0
         LA    R3,0
         IC    R3,MYUSSLOT         RESET SLOT NUMBER
         LR    R8,R3               LOAD SLOT NUMBER IN R8 FOR RETRY
         M     R2,=F'13'
         L     R5,MDLDECB+12       ADDRESS OF RECORD
         LA    R2,0(R3,R5)         FIND OUR SLOT
         LR    R3,R2               PUT IN R3 TO SET UP RETRY
         MVC   UMSGCNT(3),PACKZERO   ZERO USERID MESSAGE COUNT
         CLI   NOFREE,X'FF'        DO WE SKIP THE FREEDBUF?
         BE    SKPFREE
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
SKPFREE  DS    0H
         L     R9,SAVER9O
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        BUMP THROUGH THE MESSAGES HOOKED TO A USERID             *
*        AND TRACK THEM IN THE GETMAINED TABLE.                   *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
TRUSLOOP DS    0H                  TRACE USER CHAINS TO SEE WHICH
*                                  ARE GOOD MESSAGES. MARK IN TABLE.
*
         ST    R9,SAVER9P
         MVC   LASMRBA(3),ZEROS    TELL US THERE WAS NO LAST MESSAGE
*                                  TO BEGIN WITH
TRLOOP   READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               MESSRBA,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R2,MDLDECB+20       ADDRESS OF KEY
         CLI   0(R2),X'03'         IS THIS A GOOD MESSAGE ?
         BNE   WRITLEND            NO. WE HAVE NO BUSINESS BEING HERE
         L     R2,MDLDECB+12       ADDRESS OF RECORD
         USING USMSG,R2
         AP    UMSGCNT,=P'1'       ADD TO USER MESSAGE COUNT
         AP    TMSGCNT,=P'1'       ADD TO TOTAL MESSAGE COUNT
         XR    R6,R6               CLEAR WHOLE REGISTER
         ICM   R6,7,MESSRBA        DUMP IN RELATIVE ADDRESS
         LA    R5,0(,R6)           LOAD ADDRESS OF OFFSET
         L     R3,TABLADDR         LOAD ADDRESS OF TABLE START
         AR    R5,R3               INDEX INTO TABLE
         CLI   0(R5),X'03'         MARKED AS VALID MESSAGE?
         BE    TRCON1              YES. GO ON.
         CLI   0(R5),X'CC'         IS THIS GUY ON SOMEONE ELSE'S CHAIN
         BNE   TRGOON              NO.
         MVI   0(R5),X'DD'         YES. MARK AS DOUBLE CHAINED
TRGOON   XR    R0,R0               NO.  WRITE IT OUT AS A DISPLAY
         MVC   WRONGKEY(1),0(R5)   SAVE TABLE'S "KEY" ENTRY
         IC    R0,USMLNG           GET LENGTH OF MESSAGE
         LR    R3,R0               DUMP IT INTO REG FOR EXECUTE
         BCTR  R3,0                MINUS ONE FOR EXECUTE
         EX    R3,MOVDMSG          MOVE MESSAGE INTO DISPLAY LINE
         A     R0,=F'11'           MAKE ROOM IN DISPLAY LINE FOR EXTRAS
         HEX   LINE+7,1,WRONGKEY   DISPLAY TABLED "KEY" VALUE
         HEX   LINE,3,MESSRBA      DISPLAY RELATIVE RECORD ADDRESS
         BAL   R9,MSG              WRITE THIS WHOLE LINE
         B     WRITLEND
TRCON1   AP    VMSGCNT,=P'1'       ADD TO VALID MESSAGE COUNT
         MVI   0(R5),X'CC'         CHANGE ID OF CHAINED MESS IN TABLE
         CLC   USMNEXT(3),ZEROS    IS THIS END OF MESSAGE CHAIN?
         BE    WRITLEND            YEP. FINISH OFF THIS USERID.
         MVC   MESSRBA(3),USMNEXT  NOPE. MOVE IN RBA OF NEXT MESSAGE
         DROP  R2
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         MVC   LASMRBA(3),MESSRBA  SAVE PREVIOUS MESSAGE RBA
         B     TRLOOP
WRITLEND DS    0H
         CLC   MESSRBA(3),SAVEPTRS+3      END POINTER MATCH END RECD?
         BE    WRITLND                    YES, NO DISPLAY
MSGX7    LA    R0,65                  TAKE OUT LATER
         MVC   LINE,LINE-1            TAKE OUT
         HEX   LINE+7,3,MESSRBA
         MVC   LINE+16(22),=C'LAST RECORD IN CHAIN  '
         BAL   R9,MSG                 TAKE OUT
WRITLND  DS    0H
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         L     R9,SAVER9P
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        FINISH WRITING END MESSAGES FOR USERID.                  *
*        ALLFLAG IS ON, SO GO TO THE NEXT ID.                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
WRITEND  DS    0H
         ST    R9,SAVER9Q
         MVC   LINE,LINE-1
         MVC   WK1TOTAL,MESTOTAL               WRITE
         MVC   WK1TOTAL+5(7),TRYID               TOTALS
         MVC   WK1TOTAL+18(6),MASK6                LINE
         ED    WK1TOTAL+18(6),UMSGCNT
         MVC   LINET(L'WK1TOTAL),WK1TOTAL
         LA    R0,L'WK1TOTAL+7
*        BAL   R9,MSG
         MVC   LINE,LINE-1                     WRITE
         MVC   LINET,MESSEND                     END OF USER LINE
         LA    R0,L'MESSEND+7
*        BAL   R9,MSG
         CLI   ALLFLAG,X'FF'                   IF NOT ALL USERS
         BNE   NOTALL4                         JUST CLEAR LINE AND OUT
         MVC   LINE,LINE-1
*        BAL   R9,MSG                          OTHERWISE SEPARATE
         MVI   LINE-1,C'*'                     USERS WITH A LINE
         MVC   LINE(62),LINE-1                 OF ASTERISKS.
*        BAL   R9,MSG
NOTALL4  MVI   LINE-1,X'40'                    WRITE A BLANK LINE
         MVC   LINE,LINE-1
         L     R9,SAVER9Q
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
DELREC   DS    0H             THIS ROUTINE ASSUMES A READ WAS
*                             DONE FIRST, AND A CHECK. THE RECORD
*                             THAT WAS READ, WILL BE DELETED.
*                             IF LEVEL OF SYS1.BRODCAST IS 2 OR MORE,
*                             THEN THE RBA OF THE FREE SEARCH RECORD
*                             WILL ALSO BE UPDATED IF NECESSARY.
*                             THIS WILL NOT BE DONE HERE.  RATHER,
*                             THE RBA OF ALL DELETED RECORDS WILL BE
*                             MINIMIZED, AND THE UPDATING, IF THE
*                             MINIMUM RBA IS LESS THAN THE FREE SEARCH
*                             RECORD RBA, WILL BE DONE AT THE VERY END
         ST    R9,SAVER9R
         MVC   RNAM(3),ZEROS       ENQUEUE ON HEADER RECORD
         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER),RET=HAVE
         L     R2,MDLDECB+16           POINT TO IOB
         USING IOBSTDRD,R2
         MVC   SAVEINF1(8),IOBSEEK     SAVE CCHHR OF RECORD
         DROP  R2
         L     R2,MDLDECB+20           POINT TO THE KEY
         MVI   0(R2),X'FF'             FIRST PART OF MARKING DELETED
         L     R2,MDLDECB+12           POINT TO RECORD ITSELF
         USING USMSG,R2
         MVC   USMLNG(1),SAVEINF1+7    MOVE IN HEX RECORD NUMBER
         MVC   USMTEXT(128),ZERREC     ZERO OUT THE MESSAGE AREA
         CLC   MINRBA(3),MESSRBA       SEE IF CURRENT RBA IS LOWEST
         BNH   CHGFRBA                 IT ISN'T, SO BRANCH AROUND.
         MVC   MINRBA(3),MESSRBA       LOWER SAVED RBA IF NECESSARY
CHGFRBA  DS    0H
         WRITE MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               MESSRBA,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         AP    FMSGCNT,=P'1'       COUNT DELETED RECORD
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         MVC   RNAM(3),ZEROS       RELEASE ENQ ON HEADER RECORD
         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)
         L     R9,SAVER9R
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        SET UP IOPL FOR PUTLINE                                  *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE
SETIOPL  DS    0H
         ST    R9,SAVER9S
         L     R4,SAVECPPL         POINT TO CPPL
         USING CPPL,R4
         LA    R15,MYIOPL          GET IOPL ADDRESS
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT  MOVE IN UPT ADDR FROM CPPL
         MVC   IOPLECT(4),CPPLECT  MOVE IN ECT ADDR FROM CPPL
         DROP  R4
         LA    R0,MYECB            GET OUR PROGRAM'S ECB ADDR
         ST    R0,IOPLECB          AND PUT IT IN THE IOPL
         XC    MYECB,MYECB         CLEAR THE ECB
         LA    R0,MYPTPB           GET ADDR OF PTPB IN THIS PGM
         ST    R0,IOPLIOPB         AND PUT IT IN THE IOPL
         DROP  R15
         SPACE
         L     R15,CVTPTR          POINT TO CVT                  JDM1
         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1
         TM    CVTPUTL,X'80'       IS PUTLINE LOADED? (VS2)      JDM1
         BNO   PUTLOAD             NO - BRANCH TO LOAD
         L     R15,CVTPUTL         YES - USE CVTPUTL             JDM1
         DROP  R15                                               JDM1
         B     PUTLOADX            BRANCH AROUND LOAD
PUTLOAD  LA    R0,=CL8'IKJPUTL '
         LOAD  EPLOC=(0)
         LR    R15,R0              GET ENTRY ADDRESS
         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE
PUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS
         L     R9,SAVER9S
         BR    R9
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        PUTMSG ROUTINE                                           *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE
PUTMSG   STM   R14,R1,PUTSAVE
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTSAVE
         BR    R14
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        PUTLINE ROUTINE                                          *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE
PUTLINE  STM   R14,R1,PUTSAVE
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTSAVE
         BR    R14
         SPACE 3
         SPACE 3
*-----------------------------------------------------------------*
*---*      E N D   O F   S U B R O U T I N E S                *---*
*-----------------------------------------------------------------*
         EJECT
*-----------------------------------------------------------------*
*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*
*-----------------------------------------------------------------*
PACKZERO DC    PL3'0'
PACKZER5 DC    PL5'0'
FULLZERO DC    F'0'
* - - - - - - - - - - - - - - - - - - - - - - - - *
MOVEID   MVC   NEWID(*-*),0(R1)    EXECUTED
         USING USMSG,R2
MOVEMSG  MVC   LINET(*-*),USMTEXT  EXECUTED
MOVDMSG  MVC   LINED(*-*),USMTEXT  EXECUTED
         DROP  R2
* - - - - - - - - - - - - - - - - - - - - - - - - *
SAVER15  DS    F                   SAVE REG 5
BLANKS   DC    C'        '         8 BLANKS
BLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER
ZEROS    DS    0CL8
ZERREC   DS    0CL128
ZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING
         DC    X'0000'
         DC    121X'00'
MESSAGE1 DC    C'BAD OPEN - ALLOC F(BRODCAST) DA(SYS1.BRODCAST) SH REU'
MESSAGE2 DC    C'The GETMAIN-ed Table has been filled with key values'
MESSAG2A DC    C'Orphaned messages are now being deleted from BRODCAST'
MESSAGE3 DC    C'GETMAIN was bad, or else NUMRECS corrupted.  '
MESSAGE4 DC    C'OLD FREE SEARCH RECORD             '
MESSAGE5 DC    C'NEW FREE SEARCH RECORD             '
MESSAGE6 DC    C'DUMP OF TYPE 5:                     '
MESSAGE7 DC    C'ORPHANED USER MESSAGES ARE BEING DELETED. '
MESSAG10 DC    CL58'     Display of Orphaned User Messages     '
MESSAG11 DC    CL58'     ------- -- -------- ---- --------     '
MESSAG20 DC    CL58'   &PGMNAME &PKGTITL &VERTITL &VERSNUM      '
MESSAG21 DC    CL58'   -------  --------- ------  -------   ----- '
MESSAG22 DC    CL58'&COPYRGT      '
MESSAG23 DC    CL58'   &PGMNAME  -  Valid Execution Parms are :       '
MESSAG24 DC    CL58'   BDMDIAG REPORT - Report orphaned USER messages '
MESSAG25 DC    CL58'   BDMDIAG DELBAD - Delete orphaned USER messages '
MESSAG26 DC    CL58'   This Execution is with PARM of REPORT.         '
MESSAG27 DC    CL58'   This Execution is with PARM of DELBAD.         '
MESSAG28 DC    CL58'Invalid Execution Parm - Code REPORT or DELBAD.   '
MESSEND  DC    C'* - - - - END OF MESSAGES FOR THIS USER - - - - *'
MESTOTAL DC    C'USER         HAS           DEFERRED TSO MESSAGES'
FMSALL DC C'TOTAL ORPHANED MSGS DELETED IN SYS1.BRODCAST              '
MESALL DC C'TOTAL DEFERRED TSO MESSAGES IN SYS1.BRODCAST              '
VALALL DC C'TOTAL  VALID   TSO MESSAGES IN SYS1.BRODCAST              '
INVALL DC C'TOTAL ORPHANED TSO MESSAGES IN SYS1.BRODCAST              '
MESNOUSR DC    C'* - - NO USERID RECORD FOR USER          - - *'
MESPREND DC    C'?????  PRELIMINARY END OF USERID RECORDS - - *'
MASK6    DC    XL6'402020202120'
MASK10   DC    XL10'40202020202020202120'
BPARM    DC    AL2(BPARME-BPARM,0),C'NON'
BPARME   EQU   *
         DS    0F
QNAM     DC    CL8'SYSIKJBC'
RNAME    DC    X'000000'
         SPACE 3
BRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X
               BLKSIZE=129,        LENGTH OF FILES BLOCK               X
               DSORG=DA,           IS DIRECT ACCESS FILE               X
               MACRF=(RISXC,WIC),  3 BYTE RBA, DYNAMIC BUF, READ/CHECK X
               OPTCD=R,            3 BYTE RBA WILL BE USED             X
               RECFM=F,            FIXED LENGTH                        X
               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X
               KEYLEN=1,           SIZE OF KEY                         X
               BUFL=130            KEYLEN + BLKSIZE
         SPACE 3
         LTORG
         SPACE
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         DS    0F
ENQUSER  ENQ   (QNAM,RNAME,E,,SYSTEM),MF=L
         EJECT
*-----------------------------------------------------------------*
*----         GETMAINED DATA AREA FIELDS                      ----*
*-----------------------------------------------------------------*
DATAAREA DSECT
         DS    0D                  ENSURE DOUBLEWORD BOUNDARY OF AREA
SAVE     DS    9D
CMBUFAD  DS    F                   COMMAND BUFFER ADDRESS
NEWID    DC    C'        '         STORE PARM USERID HERE
         DS    CL72                PADDING
ADDADR   DS    0CL12
UMSGCNT  DC    PL3'0'              COUNT OF MESSAGES FOR EACH USER
TMSGCNT  DC    PL5'0'              COUNT OF DELETED ORPHANED RECORDS
VMSGCNT  DC    PL5'0'              COUNT OF VALID MESSAGES CHAINED
DMSGCNT  DC    PL5'0'              COUNT OF DELETED MESSAGES
FMSGCNT  DC    PL5'0'              COUNT OF DELETED MESSAGES
NEXT     DS    F                   FOR IKJIFRIF ADD ADDRESS
TABLADDR DS    F                   ADDR OF GETMAINED TABLE
TABLSIZE DS    F                   SIZE OF GETMAINED TABLE
OLDID    DC    C'        '         STORE OLD USERID HERE
LEVEL    DS    0CL7                LEVEL OF SYS1.BRODCAST
LEVELLIT DS    CL6                    LITERAL 'LEVEL '
LEVELLEV DS    CL1                       LEVEL NUMBER - CHAR FMT
SAVEPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR NEW USERID
SVMYPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR MY USERID
FINDPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR MY USERID
WRITPTRS DC    X'000000000000'     NEW MSG POINTER TO WRITE
CMPRPTRS DC    X'000000000000'     COMPARE POINTERS FOR FINDUSR RTN
OLDPSCBL DC    X'00'               STORE OLD PSCBUSRL HERE
NEWPSCBL DC    X'00'               STORE NEW PSCBUSRL HERE
TYP5RBA  DC    X'000000'           STORE RELATIVE ADDR OF TYPE X'05'
BLOCKNO  DC    X'000000'           STORE BLOCK NUMBER FOR READ
BLOCLAST DC    X'000000'           STORE LAST RELATIVE BLOCK NUMBER
LASTRBA  DC    X'000000'           STORE CURRENT RBA
SAVERBA  DC    X'000000'           STORE RBA FOR LATER READ
MYUSRBA  DC    X'000000'           STORE RBA OF MY USERID FOR LATER
NMSGRBA  DC    X'000000'           RBA OF NEXT MESSAGE
MESSRBA  DC    X'000000'           RBA OF CURRENT MESSAGE
ENCHRBA  DC    X'000000'           RBA OF END OF THIS USERID'S CHAIN
LASMRBA  DC    X'000000'           RBA OF PREVIOUS MESSAGE
RNAM     DC    X'000000'           RBA TO ENQUEUE ON
MYUSSLOT DC    X'00'               STORE SLOT OF MY USERID IN RECORD
NWUSRBA  DC    X'000000'           STORE RBA OF NEW USERID FOR LATER
NWUSSLOT DC    X'00'               STORE SLOT OF NEW USERID IN RECORD
FNUSRBA  DC    X'000000'           RBA OF USERID TO BE FOUND
FNUSSLOT DC    X'00'               SLOT OF THIS USERID IN RECORD
FSRCRBA  DC    X'000000'           RBA OF OLD FREE SEARCH RECORD
NSRCRBA  DC    X'000000'           RBA OF FIRST DELETED FIXED RECORD
MINRBA   DC    X'000000'
USERID   DS    0CL8                STORE FOUND USERID HERE
USERIDI  DS    CL7                 STORE FOUND USERID HERE
USERIDF  DS    CL1                 8TH CHARACTER
FINDID   DS    0CL8                USERID NAME TO BE FOUND
FINDIDI  DS    CL7                 FIRST 7 CHARACTERS
FINDIDF  DS    CL1                 8TH CHARACTER
TRYID    DS    0CL8                STORE TEST USERID HERE
TRYIDI   DS    CL7                 STORE TEST USERID HERE
TRYIDF   DS    CL1                 8TH CHARACTER
WRONGKEY DS    CL1
SCANFLAG DC    X'00'               FLAG FOR USERID SCANS
COMPFLAG DC    X'00'               FLAG FOR USERID SCANS
         DS    0F                  ALIGN ON FULLWORD
NUMRECS  DS    F                   NUMBER OF RECORDS IN SYS1.BRODCAST
SAVECPPL DS    F                   SAVE THE CPPL
SAVEUPT  DS    F                   SAVE FOR IKJIFRIF
SAVEPSCB DS    F                   SAVE FOR IKJIFRIF
SAVEECT  DS    F                   SAVE FOR IKJIFRIF
SAVER1   DS    F                   SAVE REG 1
SAVR2    DS    F                   SAVE REG 2 DURING BAL
SAVR9    DS    F                   SAVE REG 9 DURING BAL
SAVER6   DS    F
SAVER9A  DS    F                   BAL Register Save Area
SAVER9B  DS    F                   BAL Register Save Area
SAVER9C  DS    F                   BAL Register Save Area
SAVER9D  DS    F                   BAL Register Save Area
SAVER9E  DS    F                   BAL Register Save Area
SAVER9F  DS    F                   BAL Register Save Area
SAVER9G  DS    F                   BAL Register Save Area
SAVER9H  DS    F                   BAL Register Save Area
SAVER9I  DS    F                   BAL Register Save Area
SAVER9J  DS    F                   BAL Register Save Area
SAVER9K  DS    F                   BAL Register Save Area
SAVER9L  DS    F                   BAL Register Save Area
SAVER9M  DS    F                   BAL Register Save Area
SAVER9N  DS    F                   BAL Register Save Area
SAVER9O  DS    F                   BAL Register Save Area
SAVER9P  DS    F                   BAL Register Save Area
SAVER9Q  DS    F                   BAL Register Save Area
SAVER9R  DS    F                   BAL Register Save Area
SAVER9S  DS    F                   BAL Register Save Area
SAVER9T  DS    F                   BAL Register Save Area
SAVER9U  DS    F                   BAL Register Save Area
SAVER9V  DS    F                   BAL Register Save Area
SAVER9W  DS    F                   BAL Register Save Area
SAVER9X  DS    F                   BAL Register Save Area
SAVER9Y  DS    F                   BAL Register Save Area
HEXSAVE  DS    3F                  SAVE FOR HEX MACRO
MYPPL    DS    7F
MYANS    DS    F
MYECB    DS    F                   USED BY PUTLINE ROUTINE
MYIOPL   DS    4F                  USED BY PUTLINE ROUTINE
MYPTPB   DS    3F                  USED BY PUTLINE ROUTINE
MYPUTLEP DS    F                   USED BY PUTLINE ROUTINE
MYOLD    DS    2F                  USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL130            USED BY PUTLINE ROUTINE
PUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE
SAVEINF1 DS    CL8                 DUMP CCHHR HERE
LINEB    DS    C                   LINE-1
LINE     DS    CL137
LINET    EQU   LINE+7
LINED    EQU   LINE+11
         DS    0F
RDWR     READ  MDLDECB,DI,MF=L
RDWREND  DS    0F
RDWRLEN  EQU   *-RDWR
STOR0001 DS    2F
STOR1415 DS    2F
WK1TOTAL DC    C'                                                '
WK1ALL DC C'                                                          '
WK2ALL DC C'                                                          '
WK3ALL DC C'                                                          '
WK4ALL   DC    C'                                   '
WK5ALL   DC    C'                                   '
WK6ALL   DC    C'                                    '
WKAALL DC C'                                                          '
WK1NOUSR DC    C'                                              '
FROM     DC    C'       '
ALLFLAG  DS    X
FIXFLAG  DS    X
REWFLAG  DS    X
NOFREE   DS    X
         DS    0D                  ENSURE DOUBLEWORD BOUNDARY OF AREA
         SPACE 1
DATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA
*
         EJECT
*-----------------------------------------------------*
*        MAPPING MACROS                               *
*-----------------------------------------------------*
         IKJCPPL
         IKJUPT
         IKJPSCB
         IKJECT
         IKJIOPL
         IEZIOB   DSECT=YES
         IKJZT301 DSECT=YES
         IKJZT304 DSECT=YES
         IKJZT305 DSECT=YES
         CVT  DSECT=YES
         END
