BDMUSADD TITLE 'BDMUSADD - ADD A USERID AND ITS MESSAGES.'
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  DOCUMENTATION:   THIS PROGRAM CAN BE RUN AS A TSO-IN-BATCH         *
*                   COMMAND.   NEED NOT BE AUTHORIZED.                *
*                                                                     *
*                                                                     *
*       Copyright (C) 1995-2025 Sam Golob Systems Programming LLC     *
*                 All Rights Reserved                                 *
*                                                                     *
*                                                                     *
*         SYNTAX:   BDMUSADD USERID                                   *
*                                                                     *
*       FUNCTION:   ADD A USERID TO THE BROADCAST DATASET.            *
*                                                                     *
*                   IF THE ID ALREADY EXISTS, THEN PUT OUT AN ERROR   *
*                   MESSAGE ACCORDINGLY.  IF A NEW USERID RECORD      *
*                   NEEDS TO BE CREATED TO MAKE ROOM FOR THE NEW      *
*                   USERID, THEN CREATE IT.  ALSO, REUSE AN EMPTY     *
*                   USERID SLOT, IF IT IS FOUND.                      *
*                                                                     *
*          AUTHOR:  SAM GOLOB               VERSION:   1.5.0          *
*                                                                     *
*            DATE:  NOV. 26, 2006                                     *
*                                                                     *
*       EXECUTION:  ALLOC F(BRODCAST) DA('SYS1.BRODCAST') SH REUSE    *
*                                                                     *
*       BATCH EXECUTION:                                              *
*                                                                     *
*       //XXXXXXXX JOB ,'BDMUSADD',CLASS=B,                           *
*       //    MSGCLASS=X,NOTIFY=&SYSUID                               *
*       //*                                                           *
*       //*      INSTRUCTIONS FOR BDMUSADD TSO COMMAND                *
*       //*      ------------ --- -------- --- -------                *
*       //*   BDMUSADD USERID  -  ADDS THE USERID TO BRODCAST.        *
*       //*                                                           *
*       //TSOBATCH EXEC PGM=IKJEFT01                                  *
*       //STEPLIB  DD DISP=SHR,DSN=yourid.BRODMSTR.LOADLIB            *
*       //SYSTSPRT DD SYSOUT=*                                        *
*       //BRODCAST DD DISP=SHR,DSN=name.of.brodcast.dataset           *
*       //SYSTSIN DD *                                                *
*       BDMUSADD USERID                                               *
*       /*                                                            *
*                                                                     *
*       NOTE:       BDMUSADD READS THE BRODCAST DATASET DIRECTLY,     *
*                   AND GOES THROUGH ALL THE USERID RECORDS TO SEE    *
*                   IF IT FINDS A MATCH ON THE DESIRED USERID.        *
*                   DURING THIS FIRST PASS, THE FIRST EMPTY USERID    *
*                   SLOT IS ALSO NOTED, TO BE REUSED.  IF THE USERID  *
*                   ALREADY EXISTS, THEN A NEW ONE IS NOT CREATED.    *
*                   IF IT DOES NOT EXIST, THEN THE FIRST FREE SLOT    *
*                   IS REUSED.  OTHERWISE, A NEW USERID RECORD IS     *
*                   CREATED, AND THE NEW USERID IS PUT THERE, INTO    *
*                   SLOT X'00'.                                       *
*                                                                     *
*       CHANGES:  06/11/27 - Converted BDMUSADD from BDMUSDEL.        *
*                   No message deletes are required, because the new  *
*                   userid added, does not have any messages attached *
*                   to it yet.                                        *
*                                                                     *
*                   Correctly added a new Userid Record, Type X'01',  *
*                   if all slots are full.  Put the new userid into   *
*                   slot 0 of the new record.  Adjust Free Search     *
*                   RBA accordingly.                                  *
*                                                                     *
*                 06/11/28 - Added ENQ and DEQ on all WRITEs.         *
*                                                                     *
*                                                                     *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*       I N S T R E A M    M A C R O S                                *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         MACRO
         IKJZT301  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*        UPDATED                          31MAY95 SBG.
*
*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                                RECORD 1                             *
*                                                                     *
*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *
*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *
*        CONCERNING THE DATA SET.                                     *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
R1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET
         AGO   .SKIP
.NODSECT ANOP
R1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET
.SKIP    ANOP
R1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW
R1BCFLGS DS    B -            NOTICES FLAGS - NOT USED
R1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST
*                               NOTICES DIRECTORY RECORD
R1USPTRP DS    0A -           SAME AS R1USPTR BELOW
R1USFLGS DS    B -            USER MAIL FLAGS - NOT USED
R1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD
R1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS
R1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -
*                               FROM MASTER SCHEDULER BASEA, BABCMAX
*                                                                     *
R1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =
*                               ' SYS1.BRODCAST DATA SET '
R1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS
*                               A 1-DIGIT NUMBER
         DS    CL1 -          RESERVED
R1FRESRH DS    CL3 -          RBA OF FREE SEARCH RECORD
R1GENNUM DS    F -            GENERATION NUMBER FOR IN-STORAGE NOTICE
*                               TABLE
         DS    CL76 -         RESERVED
         MEND
         MACRO
         IKJZT304  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*
*        IKJZT304       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                       USER MAIL DIRECTORY RECORD                    *
*                                                                     *
*        THE USER MAIL DIRECTORY RECORD (USDIR) IS A LOGICAL          *
*        DIRECTORY RECORD IN THE SYS1.BRODCAST DATA SET.              *
*        THE DIRECTORY CONTAINS USERIDS AND PTRS TO THE FIRST AND     *
*        LAST MESSAGE FOR EACH USERID.                                *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
USDIR    DSECT , -            USER MAIL DIRECTORY RECORD
         AGO   .SKIP
.NODSECT ANOP
USDIR    DS    0F -           USER MAIL DIRECTORY RECORD
.SKIP    ANOP
USDENTRY DS    0CL13 -        DIRECTORY ENTRY FOR 1 USERID
USDID    DS    CL7 -          USERID (LEFT JUSTIFIED, PADDED W/ BLANKS)
USDRBA   DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST
*                               MESSAGE FOR THIS USERID (ZERO IF NONE)
USDEND   DS    AL3 -          RBA OF LAST MESSAGE FOR THIS USERID
*                               (ZERO IF NONE)
         DS    8CL13 -        RESERVE SPACE FOR 8 MORE DIRECTORY
*                               ENTRIES IDENTICAL IN FORMAT TO THE
*                               PRECEDING 'USDENTRY'
         DS    XL8 -          RESERVED
USDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'
USDNEXT  DS    AL3 -          CHAIN PTR TO NEXT USER MAIL DIRECTORY
*                               RECORD (ZERO IF LAST)
         MEND
         MACRO
         IKJZT305  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*
*        IKJZT305       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                        USER MAIL MESSAGE RECORD                     *
*                                                                     *
*        THE USER MAIL MESSAGE RECORD (USMSG) IS A RECORD IN          *
*        THE SYS1.BRODCAST DATA SET WHICH CONTAINS A MAIL MESSAGE     *
*        INTENDED FOR A PARTICULAR USERID.                            *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
USMSG    DSECT , -            USER MAIL MESSAGE RECORD
         AGO   .SKIP
.NODSECT ANOP
USMSG    DS    0F -           USER MAIL MESSAGE RECORD
.SKIP    ANOP
USMLNG   DS    FL1 -          LENGTH OF MAIL MSG TEXT
USMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)
USMNEXT  DS    AL3 -          CHAIN PTR TO NEXT MAIL MESSAGE RECORD
*                               FOR THIS USERID (ZERO IF LAST)
         MEND
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    STM   15,1,HEXSAVE
         LA    1,&FROM
         LA    0,&LEN
         LA    15,&TO
         BAL   4,HEX
         LM    15,1,HEXSAVE
         MEND
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
*        REGISTER EQUATES
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 1
SP000    EQU   0
         SPACE 1
         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV
         LCLC  &PGMNAME
&VERSNUM SETC  ' 1.5.0A'
&PKGNAME SETC  'BRODMSTR'
&PKGTITL SETC  'Broadcast Master'
&VERTITL SETC  ' Version '
&COPYRGT SETC  'Copyright (c) 1995-2025 Sam Golob Systems Programming'
&COPYRSV SETC  'LLC - All Rights Reserved  '
&PGMNAME SETC  'BDMUSADD'
BDMUSADD CSECT
         USING BDMUSADD,R12,R10
         B     BEGINN-*(,R15)
         DC    CL8'&PGMNAME'
         DC    C' '
         DC    C'&PKGTITL'
         DC    C'&VERTITL'
         DC    C'&VERSNUM'
         DC    C' '
         DC    C'&COPYRGT'
         DC    C' '
         DC    C'&COPYRSV'
         DC    CL16' &SYSDATE &SYSTIME '
         DC    CL6'HLASM '
         DC    C'&SYSVER'
         DC    C' '
BEGINN   DS    0H
         STM   R14,R12,12(R13)
         LR    R12,R15
         LA    R10,4095(,R12)      LOAD SECOND BASE
         LA    R10,1(,R10)
         LR    R5,R1               PRESERVE CPPL POINTER OVER GETMAIN.
         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         USING DATAAREA,R13
         ST    R5,CPPLPNTR         PUT CPPL POINTER INTO A SAFE PLACE
         BAL   R9,INITCON          INITIALIZE CONSTANTS IN DATA AREA
         BAL   R9,GETPSCB          GET PSCB IF ANY (IN R2)
         SPACE 1
         L     R2,PSCBPNTR         LOAD IT FROM ITS STORAGE LOCATION
         LTR   R2,R2               ANY PSCB?
         BZ    EOJ8                GET OUT.  NOT TSO.
         BAL   R9,CPPLPTRS         STORE STUFF OUT OF THE CPPL
         BAL   R9,SETIOPL          SET UP IOPL FOR PUTLINE
*        BAL   R9,CHEKAUTH         ARE WE OPER OR ACCT ?
TITLEOUT DS    0H
         MVC   LINE,LINE-1                  WRITE TITLE MESSAGES.
         MVC   LINE(MSGTLEN),MESSAGET
         LA    R0,MSGTLEN
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE(MSGCLEN),MESSAGEC
         LA    R0,MSGCLEN
         BAL   R4,MSG
         MVC   LINE,LINE-1
         LA    R0,20
         BAL   R4,MSG
CONT0    DS    0H
         L     R5,CPPLPNTR         LOAD CPPL
         LTR   R5,R5               ANY CPPL?
         BZ    EOJ8                NO.  GET OUT
         L     R1,0(,R5)           PT TO CMD BUFFER.
         LTR   R1,R1               ANY CMD BUFFER?
         BZ    EOJ4                GET OUT IF NONE
         LH    R3,0(,R1)           LOAD LENGTH.
         CH    R3,=H'4'            ANYTHING?
         BNH   EOJ4                NO.  GET OUT.
         XR    R5,R5               CLEAR R5 AS WORK REGISTER NOW
         LR    R5,R3               LENGTH OF COMMAND + 4
         ICM   R5,14,FULLZERO      CLEAR HI ORDER 3 BYTES
         LH    R3,2(,R1)           LOAD OFFSET.
         SR    R5,R3               SUBTRACT OFFSET FROM FULL LENGTH+4
         SH    R5,=H'4'            CORRECT FOR LENGTH OF CMDBUFR HEADER
         BC    8,WMESS3            ZERO, MESSAGE TO ENTER USERID.
         BC    5,EOJ8              LESS, OR OVERFLOW, OUT.
         BAL   R9,GETIDS           MAKE SURE YOU PULL THE NEWID OUT
*                                  OF THE KEYWORD (AND ITS LENGTH)
*                                  AND ALSO SAVE THE CURRENT ID&LENGTH
ONEID    MVC   TRYID(8),NEWID      RUN USERID SCAN AGAINST NEW ID
DOBROD   OPEN  (BRODCAST,(UPDAT))
         TM    BRODCAST+48,X'10'
         BNO   WMESS1
* ------------------------------------------------------------------ *
         BAL   R9,HEADREAD         READ HEADER RECORD AND EXTRACT
*                                  RBA OF FIRST USER RECORD TO SEARCH
*                                  FOR THE USERID SLOT FOR OUR USERID.
*                                  THIS VALUE IS STORED IN SAVERBA(3).
* ------------------------------------------------------------------ *
* ---    MAIN LOOP TO READ THROUGH THE USERID RECORDS.           --- *
* ------------------------------------------------------------------ *
INDEXUS  DS    0H                  READ THROUGH USERID RECORDS
         CLC   SAVERBA(3),ZEROS    ARE WE AT THE END OF USERID RECORDS
         BE    GOADDIT             NO USERID LIKE THIS. CAN ADD IT.
         LA    R6,9                COUNT OF USERS PER RECORD
         MVC   BLOCKNO,SAVERBA     GET RBA FOR READ
         READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R3,MDLDECB+12       ADDRESS OF RECORD
         USING USDIR,R3
         MVC   LASTRBA(3),SAVERBA  SAVE CURRENT RBA
         MVC   SAVERBA(3),USDNEXT  GET NEXT RECORD'S RBA
         LA    R8,0                INITIALIZE USERID SLOT COUNTER
USRLOOP  DS    0H
         MVC   USERID(8),BLANKS    ENSURE BLANK IN 8TH PLACE
         MVC   USERIDI(7),USDID    COPY WHO THIS IS
         CLC   USERIDI(7),ZEROS    IS THIS A REAL USER?
         BE    FRSTZERO            NOPE. SEE IF FIRST ZERO & SAVE IT.
NOTALL1  CLC   USERID(7),TRYID     IS THIS USERID ALREADY THERE?
         BE    FOUNDEQU            YES. PUT OUT MESSAGE ACCORDINGLY.
TRYNEXT  LA    R3,13(,R3)          BUMP LOCATION TO NEXT USERID
         LA    R8,1(,R8)           BUMP COUNTER WITHIN RECORD
         ST    R6,SAVER6           SAVE BCT COUNT JUST IN CASE
         BCT   R6,USRLOOP          TRY FOR ANOTHER USER ENTRY
         B     FREEDBA1
FRSTZERO DS    0H
         TM    FLAGFRST,X'01'      HAVE WE DONE THIS ALREADY?
         BO    FRSPCEED            YES, SKIP SAVE OF RBA AND SLOT.
         MVC   FZUSRBA(3),LASTRBA  SAVE RBA OF FIRST ZERO RECORD
         STC   R8,FZUSSLOT         SAVE SLOT OF FIRST ZERO RECORD
         OI    FLAGFRST,X'01'      SET FLAG TO DO ONLY ONCE
FRSPCEED BCT   R6,TRYNEXT          GO FARTHER INTO USER RECORD
         B     FREEDBA1            FREEDBUF ON THIS RECORD
FOUNDEQU DS    0H                  USERID WAS ALREADY THERE?
         MVC   FNUSRBA(3),LASTRBA  THEN STORE AWAY ITS LOCATION RBA
         STC   R8,FNUSSLOT           AND ITS SLOT.
         B     WMESS2              TELL THEM THAT WE CAN'T ADD IT.
FREEDBA1 DS    0H
*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         MVC   UMSGCNT(3),PACKZERO   ZERO THE USERID'S MESSAGE COUNTER
         B     INDEXUS             END OF RECORD? GET ANOTHER.
         DROP  R3
*
GOADDIT  DS    0H                  REUSE SLOT IF AVAILABLE
         CLC   FZUSRBA(3),ZEROS    NO EMPTY SLOT FOUND?
         BE    GOADDUSR
* below >  Enqueue and add the new userid into the found open slot.
         MVC   BLOCKNO(3),FZUSRBA  GET RBA FOR READ TO CONTINUE
         MVC   RNAM(3),ZEROS       ENQUEUE ON HEADER RECORD
         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)
         MVC   RNAM(3),FZUSRBA     USE RBA AS RNAME FOR ENQ/DEQ
         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)
         BAL   R9,REFINDUS         FIND USER SLOT TO ADD THE USERID
         USING USDIR,R3
         MVC   USDID(7),TRYID      ADD THE ID
         MVC   USDRBA(6),ZEROS     ZERO THE MESSAGE ENTRIES
         DROP  R3
         BAL   R9,REWRUSER         REWRITE THE RECORD
         MVC   RNAM(3),FZUSRBA     USE RBA AS RNAME FOR ENQ/DEQ
         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)
         MVC   RNAM(3),ZEROS       RELEASE ENQ ON HEADER RECORD
         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)
         B     GOADDMSG
* above >  Enqueue and add the new userid into the found open slot.
GOADDUSR DS    0H                  ADD THE NEW USERID RECORD FIRST
         BAL   R9,ADNEWREC         THEN HAVE TO ADD A NEW USERID TO IT.
         MVC   FZUSRBA(3),FREERBA
         MVI   FZUSSLOT,X'00'
GOADDMSG DS    0H                             TELL EM YOU ADDED THE ID
         MVC   LINE,LINE-1                    CLEAR OUTPUT LINE
         MVC   MESAGADX+7(7),TRYID            MOVE IN USERID
         HEX   MESAGADX+35,3,FZUSRBA          SHOW THE RBA
         HEX   MESAGADX+48,1,FZUSSLOT         SHOW THE SLOT NUMBER
         MVC   LINET(L'MESAGADX),MESAGADX     MOVE MESSAGE TO LINE
         LA    R0,L'MESAGADX+7                LOAD LENGTH
         BAL   R4,MSG                         WRITE IT OUT
         B     ZEROUT                  AND SCRAM
* ------------------------------------------------------------------ *
* ---    END OF MAIN LOOP FOR USERID'S.                          --- *
* ------------------------------------------------------------------ *
BADEND   MVC   LINE,LINE-1                COME HERE IF ID KEY NOT X'01'
         LA    R0,L'MESPREND+7             WRITE MESSAGE THAT
         MVC   LINET(L'MESPREND),MESPREND     THINGS ARE NOT
         BAL   R4,MSG                            SO GOOD.
*                                         GET HERE AT END OF USER RCDS
ENDUSER  DS    0H
NOTALL2  MVC   LINE,LINE-1                  CLEAR LINE
         MVC   WK1NOUSR,MESNOUSR              AND JUST FINISH UP
         MVC   WK1NOUSR+32(7),TRYID             FOR THIS ID THAT
         MVC   LINET(L'WK1NOUSR),WK1NOUSR         YOU'VE BEEN
         LA    R0,L'WK1NOUSR+7                      DEALING WITH
         BAL   R4,MSG
ZEROUT   B     EOJ0                WE'RE DONE.
         SPACE 3
FULLMESS MVC   LINE,LINE-1                  WRITE MESSAGE THAT
         MVC   LINET,MESSFULL                 SYS1.BRODCAST
         LA    R0,L'MESSFULL+7                  IS
         BAL   R4,MSG                             FULL
         B     EOJ4                             AND GET OUT.   SG 05/99
WMESS4   MVC   LINE,LINE-1                  WRITE MESSAGE THAT
         MVC   LINET,MESSAGE4                 YOU HAVE TO ENTER A
         LA    R0,L'MESSAGE4+7                  USERID NAME.
         BAL   R4,MSG
         B     EOJ4                                          PARS 06/99
WMESS3   MVC   LINE,LINE-1                  WRITE MESSAGE THAT
         MVC   LINET,MESSAGE3                 YOU HAVE TO ENTER A
         LA    R0,L'MESSAGE3+7                  USERID NAME.
         BAL   R4,MSG
         B     EOJ4                                          PARS 06/99
WMESS2   DS    0H
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         MVC   LINE,LINE-1                  WRITE MESSAGE THAT
         MVC   MESSAGX2+12(7),NEWID
         MVC   LINET,MESSAGX2                 THE USERID ALREADY
         LA    R0,L'MESSAGE2+7                  EXISTS IN BROADCAST.
         BAL   R4,MSG
         B     EOJ4                                          PARS 06/99
WMESS1   MVC   LINE,LINE-1                  WRITE MESSAGE THAT
         MVC   LINET,MESSAGE1                 SYS1.BRODCAST NOT ALLOC'D
         LA    R0,L'MESSAGE1+7                  TO DDNAME BRODCAST.
         BAL   R4,MSG
         B     EOJ4
EOJ      DS    0H                  BYE.
         CLOSE (BRODCAST)
         LR    R1,R13
         L     R13,4(,R13)
         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000
         LR    R15,R5              REAL RETURN CODE
         ST    R15,16(,R13)        PUT RC INTO PASSED SAVE AREA
         L     R14,12(,R13)
         LM    R0,R12,20(R13)
         BR    R14
EOJ0     DS    0H
         LA    R5,0                SET CC = 0.
         B     EOJ                 CONT.
EOJ4     DS    0H
         LA    R5,4                SET CC = 4.
         B     EOJ                 CONT.
EOJ8     DS    0H
         LA    R5,8                SET CC = 8.
         B     EOJ                 CONT.
EOJ12    DS    0H
         LA    R5,12               SET CC = 12.
         B     EOJ                 CONT.
EOJ16    DS    0H
         LA    R5,16               SET CC = 16.
         B     EOJ                 CONT.
         EJECT
*-----------------------------------------------------------------*
*---*                S U B R O U T I N E S                    *---*
*-----------------------------------------------------------------*
         SPACE 2
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        GET THE NEW USERID FROM THE PARM, AND SAVE THE OLD ONE.  *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         USING PSCB,R2
GETIDS   DS    0H
         ST    R9,SAVER9A
         AR    R1,R3               POINT ...
         LA    R1,4(,R1)           ... TO CHAR.
         LA    R6,7                LOAD REG FOR BCT LOOP
         LR    R7,R1               INITIALIZE POINTER
         LA    R7,0(,R7)                TO FIRST CHARACTER OF ID
         LA    R8,0                INITIALIZE CHARACTER COUNT
CUTIDLEN CLI   0(R7),X'40'         IS THIS CHARACTER A BLANK?
         BE    NOMORCUT            YES, WE ARE AT THE END OF THE ID.
         LA    R7,1(,R7)           BUMP ANOTHER CHARACTER
         LA    R8,1(,R8)           COUNT ANOTHER CHARACTER
         CR    R8,R5               END OF COMMAND BUFFER ?
         BNL   NOMORCUT            YES. GET OUT NOW.
         BCT   R6,CUTIDLEN         TRY FOR BLANK AGAIN
NOMORCUT DS    0H
         MVC   NEWID(8),BLANKS     CLEAR FIELD
         BCTR  R8,0                SUBTRACT 1 FOR EXECUTE
         EX    R8,MOVEID           MAKE SUBCOMMAND INTO NEW ID
         LA    R8,1(,R8)           BUMP REG BACK TO WHERE IT WAS
         STC   R8,NEWPSCBL         SAVE NEW USER'S LENGTH
         OC    NEWID(8),BLANKS     UPPERCASE NEW USERID
         MVC   OLDID(8),BLANKS     CLEAR FIELD
         MVC   OLDID(7),PSCBUSER   SAVE ORIGINAL USERID
         OC    OLDID(8),BLANKS     MAKE SURE ALL 8 CHARS ARE INITLIZED
         MVI   OLDPSCBL,X'00'      INITIALIZE FIELD
         MVC   OLDPSCBL(1),PSCBUSRL  SAVE ORIGINAL USERID LENGTH
         DROP  R2
         L     R9,SAVER9A
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        READ THE SYS1.BRODCAST HEADER RECORD AND COPY FIELDS.    *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEADREAD DS    0H
         ST    R9,SAVER9B
         READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOKZERO,MF=E       RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R3,MDLDECB+12       ADDRESS OF RECORD
         USING R1BC,R3             ADDRESSABILITY TO HEADER RECORD MAP
         MVC   SAVERBA(3),R1USPTR  SAVE RBA OF FIRST USER DIR RECORD
         MVC   NUMRECS(4),R1RECNUM   SAVE TOTAL NUMBER OF RECORDS
         ST    R7,SAVER7           SAVE REGISTER
         L     R7,NUMRECS          PUT NUMBER OF RECORDS IN
         BCTR  R7,0                MINUS ONE
         ST    R7,HIWATER          HIGHEST RBA PERMITTED
         L     R7,SAVER7           RESTORE REGISTER
         MVC   LEVEL(7),R1LEVEL    LEVEL+6 IS VERSION OF TSO
         CLC   LEVEL+6(1),=C'2'    IS THIS TSO LEVEL 1?
         BL    SKIPFREE            YEP. NO TYPE 5 RECORD ADDRESS
         MVC   TYP5RBA(3),R1FRESRH    STORE RBA OF TYPE 5
SKIPFREE DS    0H
         DROP  R3
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         L     R9,SAVER9B
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
MSG      LA    R1,LINE             WRITE A LINE USING PUTLINE FACILITY
*        LOAD LENGTH OF MESSAGE INTO R0 BEFORE CALLING THIS ROUTINE.
         BAL   R14,PUTLINE
         MVC   LINE,LINE-1
         BR    R4
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEX      MVC   1(1,R15),0(R1)      MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         BR    R4                  RETURN TO CALLER
HEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        DATA AREAS THAT NEED TO BE INITIALIZED AT THE BEGINNING  *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
INITCON  MVI   LINE-1,C' '         INITIALIZE BLANK
         MVC   UMSGCNT(3),PACKZERO INITIALIZE COUNTER
         MVC   TMSGCNT(5),PACKZER5 INITIALIZE COUNTER
         MVC   WK1TOTAL,MESTOTAL    INIT AREAS
         MVC   WK1NOUSR,MESNOUSR
         MVC   WK1ALL,MESALL
         MVC   LEVEL(7),BLANKS
         MVC   TYP5RBA(3),ZEROS
         MVC   FSRCRBA(3),ZEROS
         MVC   NEXTRBA(3),ZEROS
         MVC   NEWFRBA(3),ZEROS
         MVC   MESDELUS(L'MESDELUS),MESUSRID
         MVC   MESUSRDX(L'MESUSRDX),MESUSRDL
         MVC   MESSAGX2(L'MESSAGX2),MESSAGE2
         MVC   MESAGADX(L'MESAGADX),MESAGADS
         MVI   FLAGFRST,X'00'
         MVC   FZUSRBA(3),ZEROS
         MVI   FZUSSLOT,X'00'
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
GETPSCB  DS    0H
         ST    R9,SAVER9C
         L     R1,16               POINT TO CVT.
         L     R1,0(,R1)           POINT TO TCB/ASCB WORDS
         L     R1,4(,R1)           POINT TO TCB.
         L     R1,X'B4'(,R1)       POINT TO JSCB.
         L     R1,X'108'(,R1)      POINT TO PSCB.
         LA    R2,0(,R1)           CLEAR HIGH BYTE.  DUMP INTO R2
         ST    R2,PSCBPNTR         STORE PSCB ADDRESS IN SAFE LOCATION
         L     R9,SAVER9C
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         USING CPPL,R5
CPPLPTRS DS    0H
         ST    R9,SAVER9D
         L     R6,CPPLUPT          SAVE CPPL POINTERS, SUCH AS:
         ST    R6,SAVEUPT             THE UPT
         L     R6,CPPLPSCB
         ST    R6,SAVEPSCB            THE PSCB
         L     R6,CPPLECT
         ST    R6,SAVEECT             THE ECT
         L     R6,CPPLCBUF
         ST    R6,CMBUFAD             THE COMMAND BUFFER ADDRESS
         ST    R5,SAVECPPL            AND THE CPPL ADDRESS ITSELF
         LA    R6,0
         L     R9,SAVER9D
         BR    R9
         DROP  R5
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*              TEST IF USER HAS PSCB AUTHORIZATION.               *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         USING PSCB,R2
CHEKAUTH TM    PSCBATR1,PSCBACCT   ACCT USER?
         BO    CONT0               YES.  CONTINUE.
         TM    PSCBATR1,PSCBCTRL   OPER USER?
         BZ    EOJ4                NO.  GET OUT.
         DROP  R2
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        GIVEN THE RBA AND THE USERID SLOT NUMBER,                *
*        GO FIND THE SYS1.BRODCAST USERID SLOT.                   *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
REFINDUS DS    0H                  GET USER SLOT GIVEN RBA AND SLOT #
         ST    R9,SAVER9E
         READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R2,MDLDECB+20       ADDRESS OF KEY
         CLI   0(R2),X'01'         USERID RECORD?
         BNE   BADEND
         LA    R2,0
         LA    R3,0
         IC    R3,FZUSSLOT         RESET SLOT NUMBER
         LR    R8,R3               LOAD SLOT NUMBER IN R8 FOR RETRY
         M     R2,=F'13'
         L     R5,MDLDECB+12       ADDRESS OF RECORD
         LA    R2,0(R3,R5)         FIND OUR SLOT
         LR    R3,R2               PUT IN R3 TO SET UP RETRY
         L     R6,SAVER6           RESTORE R6 TO COUNT FOR BCT
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         L     R9,SAVER9E
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
ADNEWREC DS    0H                  ADD A NEW USERID RECORD IF POSSIBLE
         ST    R9,SAVER9F
         BAL   R9,FINDFREE    FIND FREE X'FF' RECORD IF IT EXISTS
         BAL   R9,MAKNWUSR    CONVERT X'FF' RECORD TO X'01' & RECHAIN.
         BAL   R9,REWRFRSR    REWRITE FREE SEARCH RECORD ACCORDINGLY.
         L     R9,SAVER9F
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
REWRUSER DS    0H            REWRITE RECORD WITH USER SLOT IN IT.
         ST    R9,SAVER9G
         WRITE MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         L     R9,SAVER9G
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
REWRFRSR DS    0H            REWRITE FREE SEARCH RECORD.
         ST    R9,SAVER9H
         CLC   TYP5RBA(3),ZEROS    IS THERE A TYPE 5 RECORD IN BRODCAST
         BE    REWRFEND            NO, PROBABLY NOT RUNNING VERS 2
TYP5READ DS    0H
         MVC   RNAM(3),ZEROS       ENQUEUE ON HEADER RECORD
         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)
         MVC   RNAM(3),TYP5RBA     USE RBA AS RNAME FOR ENQ/DEQ
         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)
         READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               TYP5RBA,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R3,MDLDECB+12       POINT TO RECORD
         LA    R5,1(,R3)           POINT TO FREE SEARCH RBA
         MVC   FSRCRBA(3),0(R5)    SAVE ITS CURRENT VALUE
         ST    R4,SAVER4           SAVE WORK REGISTER
         ICM   R4,7,FREERBA        FREERBA IS THE ONE WE ARE CHANGING
         LA    R4,1(,R4)           ADD ONE TO IT
         STCM  R4,7,NEWFRBA        NEW VALUE OF FREE SEARCH RBA
         C     R4,HIWATER          HIGHER THAN HIGHEST POSSIBLE?
         BNH   NOADJFSR            NO. JUST USE THIS VALUE.
         MVC   NEWFRBA,FREERBA     YES. USE FREERBA VALUE AS IS.
NOADJFSR DS    0H
         L     R4,SAVER4           RESTORE WORK REGISTER
         MVC   0(3,R5),NEWFRBA     CHANGE FREE SEARCH RBA TO NEW VALUE
         WRITE MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               TYP5RBA,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
NOFRSR   DS    0H
         MVC   RNAM(3),TYP5RBA     USE RBA AS RNAME FOR ENQ/DEQ
         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)
         MVC   RNAM(3),ZEROS       RELEASE ENQ ON HEADER RECORD
         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
REWRFEND L     R9,SAVER9H
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*    FIND A FREE MESSAGE RECORD TO REPLACE WITH A USERID RECORD.  *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        Result of this code is to either tell the user that      *
*        there is no free record to make into a USERID record,    *
*        or that the free record RBA is stored in FREERBA.        *
*                                                                 *
*            NFRERBA is normally FREERBA+1, to insert into        *
*            the free search record.                              *
*                                                                 *
*        Error condition:  FREERBA = NFRERBA = HIWATER.           *
*            In this case, the FULLMESS message is issued.        *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
FINDFREE DS    0H
         ST    R9,SAVER9J          SAVE BAL REGISTER FOR RETURN
         MVC   BLOCKNO(3),TYP5RBA
         CLC   TYP5RBA,ZEROS
         BNE   SAVRGS01
         MVC   BLOCKNO(3),=X'000001'
         MVI   FULLFLAG,X'FF'
SAVRGS01 ST    R8,SAVER8
         ST    R7,SAVER7
         ST    R6,SAVER6
         L     R8,HIWATER          USE HIWATER AS FINISH AMT
         L     R7,NUMRECS          LOAD TOTAL NUMBER OF RECS
         ICM   R6,7,BLOCKNO        LOAD STARTING POINT
         SR    R7,R6               SET UP BCT FOR LOOP
STARTFSH DS    0H
         READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R2,MDLDECB+20       ADDRESS OF KEY
         CLI   0(R2),X'FF'         BLANK USER MESSAGE RECORD?
         BE    FOUNDNEW            YES? FOUND ONE.
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         ICM   R6,7,BLOCKNO        LOAD AMOUNT INTO REGISTER
         LA    R6,1(,R6)           ADD 1
         CR    R6,R8               HIGHER THAN STOPPING POINT?
         BH    FINDBEG             YES, START AT BEGINNING
         STCM  R6,7,BLOCKNO        POINT TO NEXT BLOCK NUMBER
         BCT   R7,STARTFSH         LOOP AND READ AGAIN
FOUNDNEW DS    0H
         MVC   FREERBA(3),BLOCKNO  SAVE RBA OF FREE RECORD
         ICM   R7,7,FREERBA        LOAD RBA VALUE
         LA    R7,1(,R7)           INCREASE BY 1
         STCM  R7,7,NFRERBA        PREPARE NEW FREE SEARCH RBA
         C     R7,HIWATER          HIGHER THAN THE HIGHEST?
         BNH   FINDFOUT            NO. JUST GET OUT OK
         MVC   NFRERBA(3),FREERBA  WE CAN'T GO HIGHER, SO =
FINDFOUT DS    0H
         B     FINDFEND            GET OUT OF ROUTINE
FINDBEG  DS    0H
         CLI   FULLFLAG,X'FF'      CHECK IF WE WENT FROM BEGIN
         BNE   FINDGOON            YES. WE KNOW BCAST IS FULL
         L     R6,SAVER6           RESTORE REGISTER
         L     R7,SAVER7           RESTORE REGISTER
         L     R8,SAVER8           RESTORE REGISTER
         B     FULLMESS            BROADCAST FULL, AND OUT
FINDGOON MVI   FULLFLAG,X'FF'      WE'RE NOW SEARCHING BEGINNING
         ICM   R8,7,TYP5RBA        FINISH AT FREE SEARCH REC
         LA    R7,1(,R8)           SET UP BCT REGISTER
         LA    R6,1                START SEARCH AT RECORD 2
         STCM  R6,7,BLOCKNO        LET READ KNOW ABOUT IT
         SR    R7,R6               SET UP BCT FOR LOOP
         B     STARTFSH            DO LOOP OVER AGAIN-1ST PART
FINDFEND L     R6,SAVER6           RESTORE REGISTER
         L     R7,SAVER7           RESTORE REGISTER
         L     R8,SAVER8           RESTORE REGISTER
         L     R9,SAVER9J          RESTORE BAL REGISTER FOR RETURN
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  MAKE A NEW USERID RECORD AND RECHAIN THE LAST ONE TO THIS ONE  *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
MAKNWUSR DS    0H
         ST    R9,SAVER9K
         MVC   RNAM(3),FREERBA     USE RBA AS RNAME FOR ENQ/DEQ
         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)
         MVC   BLOCKNO(3),FREERBA  GO TO FOUND FREE RBA
         READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R2,MDLDECB+20       ADDRESS OF KEY
         CLI   0(R2),X'FF'         BLANK USER MESSAGE RECORD?
         BNE   MAKNWERR            NO. ERROR.
         MVI   0(R2),X'01'         CONVERT IT TO A BLANK USERID RECORD
         L     R3,MDLDECB+12       ADDRESS OF RECORD
         USING USDIR,R3
         MVC   USDIR(129),ZERREC   CREATE THE NEW USERID RECORD
         MVI   USDREND,X'7F'       STICK THE X'7F' IN
         MVC   USDID(7),TRYID      ALREADY THERE, PUT USERID IN SLOT 0.
         MVC   USDRBA(6),ZEROS     ZERO THE MESSAGE ENTRIES
         DROP  R3
         WRITE MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         MVC   RNAM(3),FREERBA     USE RBA AS RNAME FOR ENQ/DEQ
         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)
MAKRECHN DS    0H                  RECHAIN LAST UID RECORD TO THIS ONE
         MVC   RNAM(3),LASTRBA     USE RBA AS RNAME FOR ENQ/DEQ
         ENQ   (QNAM,RNAM,E,,SYSTEM),MF=(E,ENQUSER)
         MVC   BLOCKNO(3),LASTRBA  MOVE RRA OF LAST USERID RECORD
         READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R3,MDLDECB+12       ADDRESS OF RECORD
         USING USDIR,R3
         MVC   USDNEXT(3),FREERBA  RECHAIN LAST UID RECORD TO NEW ONE
         DROP  R3
         WRITE MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         MVC   RNAM(3),LASTRBA     USE RBA AS RNAME FOR ENQ/DEQ
         DEQ   (QNAM,RNAM,,SYSTEM),RET=HAVE,MF=(E,ENQUSER)
         B     MAKNWEND
MAKNWERR DS    0H
         B     WMESS4            FREERBA IS NOT POINTING TO FREE RECORD
MAKNWEND DS    0H
         L     R9,SAVER9K
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
************************************************************
*        SET UP IOPL FOR PUTLINE                           *
************************************************************
         SPACE
         USING CPPL,R5
SETIOPL  DS    0H
         ST    R9,SAVER9I
         L     R5,CPPLPNTR
         LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         DROP  R5
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15
         SPACE
         L     R15,CVTPTR          POINT TO CVT                  JDM1
         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1
         TM    CVTPUTL,X'80'       IS PUTLINE LOADED? (VS2)      JDM1
         BNO   PUTLOAD             NO - BRANCH TO LOAD
         L     R15,CVTPUTL         YES - USE CVTPUTL             JDM1
         DROP  R15                                               JDM1
         B     PUTLOADX            BRANCH AROUND LOAD
PUTLOAD  LA    R0,=CL8'IKJPUTL '
         LOAD  EPLOC=(0)
         LR    R15,R0              GET ENTRY ADDRESS
         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE
PUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS
         L     R9,SAVER9I
         BR    R9
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
************************************************************
*        PUTMSG ROUTINE                                    *
************************************************************
         SPACE
PUTMSG   STM   R14,R1,PUTSAVE
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTSAVE
         BR    R14
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
************************************************************
*        PUTLINE ROUTINE                                   *
************************************************************
         SPACE
PUTLINE  STM   R14,R1,PUTSAVE
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTSAVE
         BR    R14
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         EJECT
*-----------------------------------------------------------------*
*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*
*-----------------------------------------------------------------*
PACKZERO DC    PL3'0'
PACKZER5 DC    PL5'0'
FULLZERO DC    F'0'
MESARROW DC    C'-->'
* - - - - - - - - - - - - - - - - - - - - - - - - *
MOVEID   MVC   NEWID(*-*),0(R1)    EXECUTED
         USING USMSG,R2
MOVEMSG  MVC   LINET(*-*),USMTEXT  EXECUTED
         DROP  R2
* - - - - - - - - - - - - - - - - - - - - - - - - *
BLNKLINE DS    0CL133
BLANKS   DC    C'        '         8 BLANKS
         DC    CL125' '
BLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER
ZEROS    DS    0CL8
ZERREC   DS    0CL129
ZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING
         DC    X'0000'
         DC    122X'00'
MESSAGET DC    C'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM '
MSGTLEN  EQU   *-MESSAGET
MESSAGEC DC    C'&COPYRGT &COPYRSV'
MSGCLEN  EQU   *-MESSAGEC
MESSAGE1 DC    C'BAD OPEN - ALLOC F(BRODCAST) DA(SYS1.BRODCAST) SH REU'
MESSEND  DC    C'* - - - - END OF MESSAGES FOR THIS USER - - - - *'
MESTOTAL DC    C'USER         HAD           DEFERRED TSO MESSAGES'
MESUSRID DC    C'USERID         HAS BEEN DELETED FROM THE BROADCAST DAT-
               ASET.'
MESUSRDL DC    C'MESSAGES DELETED FOR THE FORMER USERID        .'
MESALL DC C'TOTAL DEFERRED TSO MESSAGES IN SYS1.BRODCAST              '
MESNOUSR DC    C'* - - NO USERID RECORD FOR USER          - - *'
MESPREND DC    C'?????  PRELIMINARY END OF USERID RECORDS - - *'
MESSAGE2 DC    C'THIS USERID         ALREADY EXISTS IN BROADCAST'
MESSAGE3 DC    C'PLEASE ENTER THE USERID NAME AFTER COMMAND NAME'
MESSAGE4 DC    C'FREE RECORD RBA IS NOT POINTING TO A FREE RECORD.'
MESAGADS DC    C'USERID         WAS ADDED IN RECORD         SLOT      '
MESSFULL DC    C'SYS1.BRODCAST is Full. No room to add a USERID Record.-
               . Delete some user messages.'
MASK6    DC    XL6'402020202120'
MASK10   DC    XL10'40202020202020202120'
BPARM    DC    AL2(BPARME-BPARM,0),C'NON'
BPARME   EQU   *
         DS    0F
QNAM     DC    CL8'SYSIKJBC'
RNAME    DC    X'000000'
         SPACE 3
BRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X
               BLKSIZE=129,        LENGTH OF FILES BLOCK               X
               DSORG=DA,           IS DIRECT ACCESS FILE               X
               MACRF=(RISXC,WIC),  3 BYTE RBA, DYNAMIC BUF, READ/CHECK X
               OPTCD=R,            3 BYTE RBA WILL BE USED             X
               RECFM=F,            FIXED LENGTH                        X
               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X
               KEYLEN=1,           SIZE OF KEY                         X
               BUFL=130            KEYLEN + BLKSIZE
         SPACE 3
         LTORG
         SPACE
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         DS    0F
ENQUSER  ENQ   (QNAM,RNAME,E,,SYSTEM),MF=L
         SPACE 3
*-----------------------------------------------------------------*
*----         GETMAINED DATA AREA FIELDS                      ----*
*-----------------------------------------------------------------*
DATAAREA DSECT
SAVE     DS    9D
CMBUFAD  DS    F                   COMMAND BUFFER ADDRESS
CPPLPNTR DS    F                   ADDRESS OF CPPL
PSCBPNTR DS    F                   ADDRESS OF PSCB
NEWID    DC    C'        '         STORE PARM USERID HERE
         DS    CL72                PADDING
ADDADR   DS    0CL12
UMSGCNT  DC    PL3'0'              COUNT OF MESSAGES FOR EACH USER
TMSGCNT  DC    PL5'0'              COUNT OF ALL MESSAGES DISPLAYED
NEXT     DS    F                   FOR IKJIFRIF ADD ADDRESS
OLDID    DC    C'        '         STORE OLD USERID HERE
LEVEL    DS    0CL7                LEVEL OF SYS1.BRODCAST
LEVELLIT DS    CL6                    LITERAL 'LEVEL'
LEVELLEV DS    CL1                       LEVEL NUMBER - CHAR FMT
SAVEPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR NEW USERID
SVMYPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR MY USERID
FINDPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR MY USERID
WRITPTRS DC    X'000000000000'     NEW MSG POINTER TO WRITE
CMPRPTRS DC    X'000000000000'     COMPARE POINTERS FOR FINDUSR RTN
OLDPSCBL DC    X'00'               STORE OLD PSCBUSRL HERE
NEWPSCBL DC    X'00'               STORE NEW PSCBUSRL HERE
FREERBA  DC    X'000000'           NEXT FREE RBA TO WRITE ONTO
NFRERBA  DC    X'000000'           NEW FREE RBA FOR TYPE 5
TYP5RBA  DC    X'000000'           STORE ADDRESS OF TYPE X'05'
BLOCKNO  DC    X'000000'           STORE BLOCK NUMBER FOR READ
LASTRBA  DC    X'000000'           STORE CURRENT RBA
SAVERBA  DC    X'000000'           STORE RBA FOR LATER READ
NMSGRBA  DC    X'000000'           RBA OF NEXT MESSAGE
MESSRBA  DC    X'000000'           RBA OF CURRENT MESSAGE
NEXTRBA  DC    X'000000'           RBA OF NEXT MESSAGE
NEWFRBA  DC    X'000000'           NEW FREE SEARCH RBA
FSRCRBA  DC    X'000000'           FREE SEARCH RECORD RBA - STORED
RNAM     DC    X'000000'           FREE SEARCH RECORD RBA - STORED
MYUSRBA  DC    X'000000'           STORE RBA OF MY USERID FOR LATER
MYUSSLOT DC    X'00'               STORE SLOT OF MY USERID IN RECORD
NWUSRBA  DC    X'000000'           STORE RBA OF NEW USERID FOR LATER
NWUSSLOT DC    X'00'               STORE SLOT OF NEW USERID IN RECORD
FZUSRBA  DC    X'000000'           STORE RBA OF FIRST ZERO USERID
FZUSSLOT DC    X'00'               STORE SLOT OF FIRST ZERO USERID
FNUSRBA  DC    X'000000'           RBA OF USERID THAT WAS FOUND
FNUSSLOT DC    X'00'               SLOT OF USERID THAT WAS FOUND
USERID   DS    0CL8                STORE FOUND USERID HERE
USERIDI  DS    CL7                 STORE FOUND USERID HERE
USERIDF  DS    CL1                 8TH CHARACTER
FINDID   DS    0CL8                USERID NAME TO BE FOUND
FINDIDI  DS    CL7                 FIRST 7 CHARACTERS
FINDIDF  DS    CL1                 8TH CHARACTER
TRYID    DS    0CL8                STORE TEST USERID HERE
TRYIDI   DS    CL7                 STORE TEST USERID HERE
TRYIDF   DS    CL1                 8TH CHARACTER
SCANFLAG DC    X'00'               FLAG FOR USERID SCANS
COMPFLAG DC    X'00'               FLAG FOR USERID SCANS
         DS    0F                  ALIGN ON FULLWORD
SAVECPPL DS    F                   SAVE THE CPPL
SAVEUPT  DS    F                   SAVE FOR IKJIFRIF
SAVEPSCB DS    F                   SAVE FOR IKJIFRIF
SAVEECT  DS    F                   SAVE FOR IKJIFRIF
SAVER4   DS    F                   SAVE WORK REGISTER
SAVER5   DS    F                   SAVE WORK REGISTER
SAVER6   DS    F                   SAVE WORK REGISTER
SAVER7   DS    F                   SAVE WORK REGISTER
SAVER8   DS    F                   SAVE WORK REGISTER
SAVER9   DS    F                   SAVE BAL REGISTER
SAVER9A  DS    F                   SAVE BAL REGISTER
SAVER9B  DS    F                   SAVE BAL REGISTER
SAVER9C  DS    F                   SAVE BAL REGISTER
SAVER9D  DS    F                   SAVE BAL REGISTER
SAVER9E  DS    F                   SAVE BAL REGISTER
SAVER9F  DS    F                   SAVE BAL REGISTER
SAVER9G  DS    F                   SAVE BAL REGISTER
SAVER9H  DS    F                   SAVE BAL REGISTER
SAVER9I  DS    F                   SAVE BAL REGISTER
SAVER9J  DS    F                   SAVE BAL REGISTER
SAVER9K  DS    F                   SAVE BAL REGISTER
SAVER9L  DS    F                   SAVE BAL REGISTER
SAVER9M  DS    F                   SAVE BAL REGISTER
HIWATER  DS    F                   HIGH RBA OF RECORDS IN BRODCAST
NUMRECS  DS    F                   NUMBER OF RECORDS IN BRODCAST
HEXSAVE  DS    3F                  SAVE FOR HEX MACRO
MYPPL    DS    7F
MYANS    DS    F
MYECB    DS    F                   USED BY PUTLINE ROUTINE
MYIOPL   DS    4F                  USED BY PUTLINE ROUTINE
MYPTPB   DS    3F                  USED BY PUTLINE ROUTINE
MYPUTLEP DS    F                   USED BY PUTLINE ROUTINE
MYOLD    DS    2F                  USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL130            USED BY PUTLINE ROUTINE
PUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE
SAVEINF1 DS    CL8                 PLACE TO STORE CCHHR
         DS    CL8
FLAGFRST DS    X
*        EQU   X'01'               FIRST ZEROED SLOT HAS BEEN FOUND
FULLFLAG DS    X
         DS    CL8
LINEB    DS    C                   LINE-1
LINE     DS    CL137
LINET    EQU   LINE+7
         DS    0F
RDWR     READ  MDLDECB,DI,MF=L
RDWREND  DS    0F
RDWRLEN  EQU   *-RDWR
STOR0001 DS    2F
STOR1415 DS    2F
WK1TOTAL DC    C'                                                '
WK1ALL DC C'                                                          '
WK1NOUSR DC    C'                                              '
MESDELUS DC    C'USERID         HAS BEEN DELETED FROM THE BROADCAST DAT-
               ASET.'
MESUSRDX DC    C'MESSAGES DELETED FOR THE FORMER USERID        .'
MESSAGX2 DC    C'THIS USERID         ALREADY EXISTS IN BROADCAST'
MESAGADX DC    C'USERID         WAS ADDED IN RECORD         SLOT      '
         SPACE 1
DATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA
         IKJCPPL
         IKJUPT
         IKJPSCB
         IKJECT
         IKJIOPL
         IEZIOB   DSECT=YES
         IKJZT301 DSECT=YES
         IKJZT304 DSECT=YES
         IKJZT305 DSECT=YES
         CVT  DSECT=YES
         END
