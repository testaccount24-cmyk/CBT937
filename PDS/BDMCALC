BDMCALC  TITLE 'BDMCALC - CALCULATE SIZE OF NEW BRODCAST DATASET'
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  Documentation:   This program is a batch program to calculate      *
*                   the size of a new BRODCAST dataset, given the     *
*                   number of each type of component records.         *
*                                                                     *
*                                                                     *
*    Copyright (C) 1995-2025 Sam Golob Systems Programming LLC        *
*              All Rights Reserved                                    *
*                                                                     *
*    Function:   To calculate space to be allocated for BRODCAST      *
*                records for any DASD type, given the number of       *
*                each type of record in a proposed new BRODCAST       *
*                dataset.                                             *
*                                                                     *
*    Batch Execution:                                                 *
*                                                                     *
* //BDMCALC EXEC PGM=BDMCALC,REGION=2000K                             *
* //STEPLIB  DD  DISP=SHR,DSN=yourid.BRODMSTR.LOADLIB                 *
* //*                                                                 *
* //*   BRODUMMY must be allocated as exactly 1 Cylinder primary      *
* //*   on the same device type as the proposed new Broadcast         *
* //*   Dataset.  The program will attempt to correct errors.         *
* //*                                                                 *
* //BRODUMMY DD  DSN=&&BRDUMM,DISP=(NEW,DELETE,DELETE),               *
* //         DCB=(DSORG=DA,RECFM=FB,BLKSIZE=129,KEYLEN=1,LRECL=129),  *
* //         SPACE=(CYL,(1,1),RLSE),UNIT=SYSALLDA,VOL=SER=volser      *
* //SYSPRINT DD  SYSOUT=*                                             *
* //SYSIN    DD  *                                                    *
* keywords                                                            *
* /*                                                                  *
*                                                                     *
*       Admissible SYSIN Keywords:                                    *
*       ---------- ----- ---------                                    *
*     NOTIFY=nnn      (number of Global Notify records)               *
*     USERIDS=nnnn    (number of Userids to be loaded)                *
*     MESSAGES=nnnnn  (number of User Messages in BRODCAST)           *
*     EXTRAUSERIDRECS=nn (extra Userid records in BRODCAST)           *
*     RECORDS=nnnnnn  (total number of records in BRODCAST)           *
*     TRACKS=nnnn     (total tracks in BRODCAST allocation)           *
*     CYLINDERS=nnn   (total cylinders in BRODCAST allocation)        *
*     ----------------------------------------------                  *
*     SYSIN Keywords have to be entered in Column 1.                  *
*     ----------------------------------------------                  *
*                                                                     *
*    Changes: 12/09/06 - Protection if SYSIN DD is missing.           *
*                        All calculations in place.                   *
*                        JFCB Diagnostic Display.                     *
*                        Temporary BRODUMMY dataset in JCL for        *
*                          calculations of Records/Trk and Trks/Cyl.  *
*                        If BRODUMMY DD is missing, diagnostic        *
*                          messages are displayed, and RC = 8.        *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    DS    0H
         ST    R4,SAV4HEX
         STM   R15,R1,HEXSAVE
         LA    R1,&FROM
         LA    R0,&LEN
         LA    R15,&TO
         BAL   R4,HEX
         L     R4,SAV4HEX
         LM    R15,R1,HEXSAVE
         MEND
* --------------------------------------------------------- *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
*        REGS                    Register Equates.
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 1
SP000    EQU   0
         SPACE 1
         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV
         LCLC  &PGMNAME
&VERSNUM SETC  ' 1.5.0A'
&PKGNAME SETC  'BRODMSTR'
&PKGTITL SETC  'Broadcast Master'
&VERTITL SETC  ' Version '
&COPYRGT SETC  'Copyright (c) 1995-2025 Sam Golob Systems Programming'
&COPYRSV SETC  ' LLC - All Rights Reserved  '
&PGMNAME SETC  'BDMCALC '
* - - - - - - - - - - - - - - - - - - - - - - - - *
*   DEFAULT VALUES IF NOT CODED
* - - - - - - - - - - - - - - - - - - - - - - - - *
&DEFNOTF SETA  125
&DEFUSER SETA  1000
&DEFMSGS SETA  7000
* ------------------------------------------------------------------ *   01489
&CHANOTF SETC  '&DEFNOTF'
&CHAUSER SETC  '&DEFUSER'
&CHAMSGS SETC  '&DEFMSGS'
&PGMNAME AMODE 24
&PGMNAME RMODE 24
&PGMNAME CSECT
         B     BEGINN-*(,R15)
         DC    CL8'&PGMNAME'
         DC    C' '
         DC    C'&PKGTITL'
         DC    C'&VERTITL'
         DC    C'&VERSNUM'
         DC    C' '
         DC    C'&COPYRGT'
         DC    C'&COPYRSV'
         DC    CL16' &SYSDATE &SYSTIME '
         DC    CL6'HLASM '
         DC    C'&SYSVER'
         DC    C' '
BEGINN   DS    0H
         STM   R14,R12,12(R13)              Save Registers
         LR    R12,R15
         USING BDMCALC,R12,R11,R10,R8,R7    Establish Base Registers
         LA    R11,4095(,R12)
         LA    R11,1(,R11)
         LA    R10,4095(,R11)
         LA    R10,1(,R10)
         LA    R8,4095(,R10)
         LA    R8,1(,R8)
         LA    R7,4095(,R8)
         LA    R7,1(,R7)
         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         USING DATAAREA,R13
         BAL   R9,INITCON          Initialize constants in data area
         SPACE 1
* ----------------------------------------------------------------- *    06223
TIOTSCAN DS    0H             Determine the presence of Optional         06224
*                             DDNAMES:  SYSIN AND BRODUMMY.              06225
* ----->                      OPEN them if there is JCL for them.        06226
* ----------------------------------------------------------------- *    06227
         L     R5,16          R5=CVT                                     06228
         L     R5,0(,R5)      R5=TCB WORDS                               06229
         L     R5,4(,R5)      R5=MY TCB                                  06230
         L     R5,12(,R5)     R5=TIOT                                    06231
         LA    R5,24(,R5)     R5=FIRST DD ENTRY                          06232
TIOTLOOP CLC   0(4,R5),=XL4'00' END OF TIOT?                             06233
         BE    TIOTSEND       YES, CHECK FOR OUTPUT VOL OVERRIDES        06234
         CLC   4(8,R5),BRODUMMY+40  PARMREPT DDNAME THERE?               06235
         BNE   TIOTSYSN       NO                                         06236
         OI    FLAGSYST,X'01'       SHOW PRESENCE OF BRODUMMY DD         06237
         B     TIOTNEXT       CONTINUE                                   06238
TIOTSYSN CLC   4(8,R5),SYSIN+40                                          06239
         BNE   TIOTNEXT                                                  06240
         OI    FLAGSYST,X'02'       SHOW PRESENCE OF SYSIN    DD         06241
         B     TIOTNEXT                                                  06242
TIOTNEXT SR    R3,R3                                                     06243
         IC    R3,0(,R5)      R3=LENGTH OF DD ENTRY                      06244
         AR    R5,R3          R5=NEXT DD ENTRY                           06245
         B     TIOTLOOP       GO CHECK IT                                06246
TIOTSEND DS    0H                                                        06247
* ----------------------------------------------------------------- *    06227
DOBROD   DS    0H
         OPEN  (BRODUMMY,(OUTPUT))
         OPEN  (SYSPRINT,(OUTPUT))
         BAL   R9,OUTHEADR         Write SYSPRINT Header
* ------------------------------------------------------------------ *
* ---    M A I N   R O U T I N E S                               --- *
* ------------------------------------------------------------------ *
MAINLINE DS    0H                  MAIN CALCULATION CYCLE
*                                  Do RDJFCB after the OPEN
         RDJFCB BRODUMMY
         BAL   R9,JFCBDSPL         Display the contents of the JFCB
         BAL   R9,JFCBTEST         Test the JCL for errors.
         TM    JFCBFLG,X'FF'       Were there any?
         BNZ   CORRERRS            Yes. Tell the user to correct them.
         BAL   R9,WRITDUMY         Write 1 Cylinder of dummy records.
         BAL   R9,SYSADMIS         Message with admissible keywords.
         BAL   R9,DOSYSIN          Process the SYSIN parameters.
         TM    INVNFLG,X'01'       Were any invalid numbers coded?
         BO    NUMERRS             Yes, report and abort
         BAL   R9,CALCRECS         Calculations for all SYSIN keywords.
*                                  Calculate total records from
*                                  NOTIFY+USERIDS+MESSAGES+EXTRAUIDS
         B     EOJ
* ------------------------------------------------------------------ *
NUMERRS  DS    0H                  Errors coding numerics in SYSIN.
         MVC   LINE,LINE-1         Blank line.
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(42),=C'Invalid numbers were coded in SYSIN cards.'
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(42),=C'Please check them over and correct them.  '
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1         Blank line.
         PUT   SYSPRINT,LINE
         B     EOJ8                RC = 8
* ------------------------------------------------------------------ *
CORRERRS DS    0H                  Correct JCL errors in BRODUMMY.
         MVC   LINE,LINE-1         Clear line and print
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1         Clear line again.
         MVC   LINET(L'MSGCORRE),MSGCORRE Message to correct JCL errors
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1         Clear line and print
         PUT   SYSPRINT,LINE
         B     EOJ8
* ------------------------------------------------------------------ *
EOJ8     DS    0H                  RC = 8.
         LA    R5,8                Load it into R5 so it's not lost.
         B     EOJC                And end the program.
EOJ      DS    0H                  RC = 0.  Normal end of program.
         LA    R5,0
EOJC     DS    0H                  Close DCBs up.
         CLOSE (BRODUMMY)
         CLOSE (SYSPRINT)
         LR    R1,R13              Prepare for FREEMAIN.
         L     R13,4(,R13)
         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000
EOJGO3   DS    0H
         LR    R15,R5              Load return code into R15.
         ST    R15,16(,R13)        Put RC into passed save area.
         LM    R14,R12,12(R13)
EOJN     BR    R14                 Go back to system.
         LTORG
         EJECT
* ------------------------------------------------------------------ *
*-----------------------------------------------------------------*
*---*                S U B R O U T I N E S                    *---*
*-----------------------------------------------------------------*
         SPACE 2
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*   PRINT INSTRUCTIONS AND OTHER INFORMATION AT THE BEGINNING     *
*   OF THE PROGRAM EXECUTION.                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
OUTHEADR DS    0H
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE
         PUT   SYSPRINT,TITLINE            Print Title and
         PUT   SYSPRINT,CPYRLINE             Copyright notice.
         PUT   SYSPRINT,REPTLN01           And name of which Report.
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE
         MVC   OUTLINE(1),THRLINE          SKIP 3
         PUT   SYSPRINT,OUTLINE            ACTUALLY SKIP 6
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE
         MVC   OUTLINE(1),THRLINE          SKIP 3 LINES,
         PUT   SYSPRINT,OUTLINE            PREPARING FOR
         BR    R9                          FINAL REPORT.
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
JFCBDSPL DS    0H
* -- >                             DIAGNOSTIC DISPLAY OF JFCB - Below
         MVC   LINE,LINE-1
         MVC   LINET(L'JFCBDTIT),JFCBDTIT  Title of display
         MVC   LINE+5(8),=C'BRODUMMY'      Insert which DCB it's about
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(60),MEASR30H          Numeric measuring label.
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(60),RULER30H          Ruler.
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         HEX   LINET,30,INFMJFCB           Bytes 0 to 30  (decimal)
         MVC   LINET+62(10),JFCBT
         MVI   LINET+68,C'0'
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         HEX   LINET,30,INFMJFCB+30        Bytes 31 to 60 (decimal)
         MVC   LINET+62(10),JFCBT
         MVC   LINET+68(2),=C'30'
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         HEX   LINET,30,INFMJFCB+60        Bytes 61 to 90 (decimal)
         MVC   LINET+62(10),JFCBT
         MVC   LINET+68(2),=C'60'
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         HEX   LINET,30,INFMJFCB+90        Bytes 91 to 120 (decimal)
         MVC   LINET+62(10),JFCBT
         MVC   LINET+68(2),=C'90'
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         HEX   LINET,30,INFMJFCB+120       Bytes 121 to 150 (decimal)
         MVC   LINET+62(10),JFCBT
         MVC   LINET+68(3),=C'120'
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         HEX   LINET,26,INFMJFCB+150       Bytes 151 to 176 (decimal)
         MVC   LINET+62(10),JFCBT
         MVC   LINET+68(3),=C'150'
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(60),RULER30H          Print ruler below
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1                 And skip a space.
         PUT   SYSPRINT,LINE
* -- >                             DIAGNOSTIC DISPLAY OF JFCB - Above
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
JFCBTEST DS    0H
         MVI   JFCBFLG,X'00'         CLEAR ERROR FLAGS
         CLI   JFCBCTRI,JFCBCYL      ALLOCATION OF BRODUMMY IN CYL ?
         BNE   MSGNOCYL              NO. ISSUE MESSAGE.
JFCBPRIM DS    0H
         CLC   JFCBPQTY,=AL3(1)      PRIMARY QUANTITY MUST BE 1.
         BNE   MSGNOONE              NOT 1. ISSUE MESSAGE.
JFCBDSRG DS    0H
         CLI   JFCDSORG,JFCORGDA     IS THE DSORG=DA ?
         BNE   MSGDSORG              NO. ISSUE MESSAGE.
JFCBRFMT DS    0H
         TM    JFCRECFM,X'C0'        IS THE RECFM=U ?
         BO    MSGRECFM              YES. ISSUE MESSAGE.
         TM    JFCRECFM,X'80'        IS THE RECFM=F ?
         BZ    MSGRECFM              NO. ISSUE MESSAGE.
JFCBLREC DS    0H
         CLC   JFCLRECL,=AL2(129)    LRECL IS 129 ?
         BNE   MSGLRECL              NOT 129. ISSUE MESSAGE.
JFCBBKSI DS    0H
         CLC   JFCBLKSI,=AL2(129)    BLKSIZE IS 129 ?
         BNE   MSGBLKSZ              NOT 129. ISSUE MESSAGE.
JFCBKYLN DS    0H
         CLI   JFCKEYLE,X'01'        KEYLEN IS 1 ?
         BNE   MSGKEYLE              NOT 1. ISSUE MESSAGE.
JFCBETST DS    0H                        End of processing.
         B     JFCBTEND                  Finish the subroutine.
MSGNOCYL DS    0H                    ERROR MESSAGES FOR JCL PROBLEMS.
         MVC   LINE,LINE-1               Clear line.
         MVC   LINET(L'MSGCYL),MSGCYL    Insert message text.
         PUT   SYSPRINT,LINE
         OI    JFCBFLG,X'01'             Flag this error
         B     JFCBPRIM                  Go to next test.
MSGNOONE DS    0H
         MVC   LINE,LINE-1               Clear line.
         MVC   LINET(L'MSGONEC),MSGONEC  Insert message text.
         PUT   SYSPRINT,LINE
         OI    JFCBFLG,X'02'             Flag this error
         B     JFCBDSRG                  Go to next test.
MSGDSORG DS    0H
         MVC   LINE,LINE-1               Clear line.
         MVC   LINET(L'MSGDSOR),MSGDSOR  Insert message text.
         PUT   SYSPRINT,LINE
         OI    JFCBFLG,X'04'             Flag this error
         B     JFCBRFMT                  Go to next test.
MSGRECFM DS    0H
         MVC   LINE,LINE-1               Clear line.
         MVC   LINET(L'MSGRFMT),MSGRFMT  Insert message text.
         PUT   SYSPRINT,LINE
         OI    JFCBFLG,X'08'             Flag this error
         B     JFCBLREC                  Go to next test.
MSGLRECL DS    0H
         MVC   LINE,LINE-1               Clear line.
         MVC   LINET(L'MSGLREC),MSGLREC  Insert message text.
         PUT   SYSPRINT,LINE
         OI    JFCBFLG,X'10'             Flag this error
         B     JFCBBKSI                  Go to next test.
MSGBLKSZ DS    0H
         MVC   LINE,LINE-1               Clear line.
         MVC   LINET(L'MSGBLKS),MSGBLKS  Insert message text.
         PUT   SYSPRINT,LINE
         OI    JFCBFLG,X'20'             Flag this error
         B     JFCBKYLN                  Go to next test.
MSGKEYLE DS    0H
         MVC   LINE,LINE-1               Clear line.
         MVC   LINET(L'MSGKEYL),MSGKEYL  Insert message text.
         PUT   SYSPRINT,LINE
         OI    JFCBFLG,X'40'             Flag this error
         B     JFCBETST                  Go to end of tests.
JFCBTEND DS    0H
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* ------------------------------------------------------------------ *
* ---    READ DUMMY RECORDS INTO 1 CYLINDER FAKE BRODCAST.       --- *
* ------------------------------------------------------------------ *
WRITDUMY DS    0H
         MVI   EOFWFLG,X'00'             Initialize Flag.
         LA    R2,0                      Load zero.
         ST    R2,RECONTRK               Initialize counters
         ST    R2,RECPERTR                 to
         ST    R2,TRKPERCY                   zero.
WRITLOOP DS    0H
         L     R2,RECONTRK               Increment
         LA    R2,1(,R2)                  the
         ST    R2,RECONTRK                 Count.
GOWRITE  DS    0H
         WRITE MDLDECB,SF,BRODUMMY,DUMMYREC,'S',MF=E
         C     R15,=F'8'                 RC = 8 for end of extent.
         BNE   GOSKIP1                   No. Try if end of track.
         OI    EOFWFLG,X'02'             Yes. End of extent, so finish.
         B     ENDCHECK                  Finish up measurements.
GOSKIP1  DS    0H
         C     R15,=F'4'                 RC = 4 for end of track.
         BNE   GOCHECK                   No. Still in middle of track.
         TM    EOFWFLG,X'01'             Yes. Only come here once,
         BO    GOSKIP2                     and not later.
         MVC   RECPERTR,RECONTRK         Copy records/track number.
         OI    EOFWFLG,X'01'             Only do it once.
GOSKIP2  DS    0H
         L     R2,TRKPERCY               Increment
         LA    R2,1(,R2)                  the
         ST    R2,TRKPERCY                 Count.
         XR    R2,R2                     Zero Register.
         ST    R2,RECONTRK               Re-initialize REC/TRK
GOCHECK  DS    0H
         CHECK MDLDECB
         B     WRITLOOP                  Write till end of extent.
ENDCHECK DS    0H                        Come here at end of extent.
         CHECK MDLDECB
         L     R2,TRKPERCY               One
         LA    R2,1(,R2)                  last
         ST    R2,TRKPERCY                 time.
MULTCONV DS    0H
         STM   R4,R5,SAVE45              Save Work Registers
         XR    R4,R4                     Clear Multiplicand Hi Reg
         L     R5,RECPERTR               Load Multipliand
         MR    R4,R2                     Multiply
         ST    R5,RECPERCY               Store Result
         LM    R4,R5,SAVE45              Restore Work Registers
WRITCONV DS    0H                        Convert binary to decimal.
*                                        ------- ------ -- -------
         XR    R6,R6                     ZERO OUT WORK REGISTER
         L     R6,RECPERTR               SAVE RECORDS PER TRACK COUNT
         CVD   R6,CVDWORK                CONVERT TO DECIMAL
         MVC   DECREPTR,CVDWORK          STORE AWAY FOR REPORTING
         XR    R6,R6                     ZERO OUT WORK REGISTER
         L     R6,TRKPERCY               SAVE TRACKS PER CYLINDER COUNT
         CVD   R6,CVDWORK                CONVERT TO DECIMAL
         MVC   DECTRPCY,CVDWORK          STORE AWAY FOR REPORTING
WRITLEND DS    0H
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGMEAS),MSGMEAS  Title message for measurement.
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGMDSH),MSGMDSH  Dashes.
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(22),RECPTRK         Records per track.
         HEX   LINET+22,4,RECPERTR
         MVC   LINET+42(10),MASK10
         ED    LINET+42(10),DECREPTR+3
         MVC   LINET+38(8),=C'Decimal:'
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(22),TRKPCYL         Tracks per cylinder
         HEX   LINET+22,4,TRKPERCY
         MVC   LINET+42(10),MASK10
         ED    LINET+42(10),DECTRPCY+3
         MVC   LINET+38(8),=C'Decimal:'
         PUT   SYSPRINT,LINE
* - >
         XR    R6,R6                     ZERO OUT WORK REGISTER
         L     R6,RECPERCY               SAVE RECORDS PER CYL COUNT
         CVD   R6,CVDWORK                CONVERT TO DECIMAL
         MVC   DECREPCY,CVDWORK          STORE AWAY FOR REPORTING
         MVC   LINE,LINE-1
         MVC   LINET(22),RECPCYL         Records per cylinder
         HEX   LINET+22,4,RECPERCY
         MVC   LINET+42(10),MASK10
         ED    LINET+42(10),DECREPCY+3
         MVC   LINET+38(8),=C'Decimal:'
         PUT   SYSPRINT,LINE
* - >
         MVC   LINE,LINE-1               Blank line afterwards.
         PUT   SYSPRINT,LINE
         BR    R9
* ---------------------------------------------- *
* ---    PROCESS SYSIN INPUT TO PROVIDE      --- *
* ---      NUMBERS FOR THE CALCULATIONS.     --- *
* ---------------------------------------------- *
DOSYSIN  DS    0H                        Process SYSIN records.
         ST    R9,SAVER9A
         TM    FLAGSYST,X'02'            Is SYSIN DD name in JCL?
         BZ    SYSINENX                  No. Skip this entire section.
         OPEN  (SYSIN,(INPUT))
         STM   R3,R4,SAVE34              Save the work registers.
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGDOSY),MSGDOSY
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGDODH),MSGDODH
         PUT   SYSPRINT,LINE
SYINLOOP DS    0H                        Read all the SYSIN cards.
         GET   SYSIN,INSYSIN             GET a card.
         MVC   WRKSYSIN(80),INSYSIN      Make a copy of it.
         OC    WRKSYSIN,BLNKLINE         Uppercase the copy.
         LA    R3,WRKSYSIN               Point R3 to the uppercased.
         LA    R4,INSYSIN                Point R4 to the original.
* ------------------------------------------------------------------ *
*                 Test the uppercased card for keywords              *
*                 And afterwards do the proper displacements         *
* ------------------------------------------------------------------ *
         CLC   =C'NOTIFY=',0(R3)
         BE    HNOTIFY
         CLC   =C'USERIDS=',0(R3)
         BE    HUSERID
         CLC   =C'MESSAGES=',0(R3)
         BE    HMESSAGE
         CLC   =C'TRACKS=',0(R3)
         BE    HTRACKS
         CLC   =C'CYLINDERS=',0(R3)
         BE    HCYLINDR
         CLC   =C'EXTRAUSERIDRECS=',0(R3)
         BE    HEXTRUSR
         CLC   =C'RECORDS=',0(R3)
         BE    HRECORDS
         B     SYINLOOP
HNOTIFY  DS    0H
         LA    R4,7(,R4)
         LA    R3,7(,R3)
         BAL   R9,NUMBRGET
         MVC   CHNOTIFY(10),CHARNUM
         MVC   BINOTIFY(4),BINVALUE
         MVC   LINE,LINE-1
         MVC   LINET(7),=C'NOTIFY='
         HEX   LINE+29,4,BINOTIFY
         MVC   LINE+45(8),=C'Decimal:'
         MVC   LINE+55(10),CHNOTIFY
         TM    NUMCFLG,X'01'
         BZ    HNOTIFGD
         MVC   LINE+66(15),=C'INVALID NUMERIC'
HNOTIFGD DS    0H
         PUT   SYSPRINT,LINE
         B     SYINLOOP
HUSERID  DS    0H
         LA    R4,8(,R4)
         LA    R3,8(,R3)
         BAL   R9,NUMBRGET
         MVC   CHUSERID(10),CHARNUM
         MVC   BIUSERID(4),BINVALUE
         MVC   LINE,LINE-1
         MVC   LINET(8),=C'USERIDS='
         HEX   LINE+29,4,BIUSERID
         MVC   LINE+45(8),=C'Decimal:'
         MVC   LINE+55(10),CHUSERID
         TM    NUMCFLG,X'01'
         BZ    HUSERIGD
         MVC   LINE+66(15),=C'INVALID NUMERIC'
HUSERIGD DS    0H
         PUT   SYSPRINT,LINE
         B     SYINLOOP
HMESSAGE DS    0H
         LA    R4,9(,R4)
         LA    R3,9(,R3)
         BAL   R9,NUMBRGET
         MVC   CHMESAGE(10),CHARNUM
         MVC   BIMESAGE(4),BINVALUE
         MVC   LINE,LINE-1
         MVC   LINET(9),=C'MESSAGES='
         HEX   LINE+29,4,BIMESAGE
         MVC   LINE+45(8),=C'Decimal:'
         MVC   LINE+55(10),CHMESAGE
         TM    NUMCFLG,X'01'
         BZ    HMESSAGD
         MVC   LINE+66(15),=C'INVALID NUMERIC'
HMESSAGD DS    0H
         PUT   SYSPRINT,LINE
         B     SYINLOOP
HTRACKS  DS    0H
         LA    R4,7(,R4)
         LA    R3,7(,R3)
         BAL   R9,NUMBRGET
         MVC   CHTRACKS(10),CHARNUM
         MVC   BITRACKS(4),BINVALUE
         MVC   LINE,LINE-1
         MVC   LINET(7),=C'TRACKS='
         HEX   LINE+29,4,BITRACKS
         MVC   LINE+45(8),=C'Decimal:'
         MVC   LINE+55(10),CHTRACKS
         TM    NUMCFLG,X'01'
         BZ    HTRACKGD
         MVC   LINE+66(15),=C'INVALID NUMERIC'
HTRACKGD DS    0H
         PUT   SYSPRINT,LINE
         B     SYINLOOP
HCYLINDR DS    0H
         LA    R4,10(,R4)
         LA    R3,10(,R3)
         BAL   R9,NUMBRGET
         MVC   CHCYLIND(10),CHARNUM
         MVC   BICYLIND(4),BINVALUE
         MVC   LINE,LINE-1
         MVC   LINET(10),=C'CYLINDERS='
         HEX   LINE+29,4,BICYLIND
         MVC   LINE+45(8),=C'Decimal:'
         MVC   LINE+55(10),CHCYLIND
         TM    NUMCFLG,X'01'
         BZ    HCYLINGD
         MVC   LINE+66(15),=C'INVALID NUMERIC'
HCYLINGD DS    0H
         PUT   SYSPRINT,LINE
         B     SYINLOOP
HEXTRUSR DS    0H
         LA    R4,16(,R4)
         LA    R3,16(,R3)
         BAL   R9,NUMBRGET
         MVC   CHEXTRUS(10),CHARNUM
         MVC   BIEXTRUS(4),BINVALUE
         MVC   LINE,LINE-1
         MVC   LINET(16),=C'EXTRAUSERIDRECS='
         HEX   LINE+29,4,BIEXTRUS
         MVC   LINE+45(8),=C'Decimal:'
         MVC   LINE+55(10),CHEXTRUS
         TM    NUMCFLG,X'01'
         BZ    HEXTRUGD
         MVC   LINE+66(15),=C'INVALID NUMERIC'
HEXTRUGD DS    0H
         PUT   SYSPRINT,LINE
         B     SYINLOOP
HRECORDS DS    0H
         LA    R4,8(,R4)
         LA    R3,8(,R3)
         BAL   R9,NUMBRGET
         MVC   CHRECORD(10),CHARNUM
         MVC   BIRECORD(4),BINVALUE
         MVC   LINE,LINE-1
         MVC   LINET(8),=C'RECORDS='
         HEX   LINE+29,4,BIRECORD
         MVC   LINE+45(8),=C'Decimal:'
         MVC   LINE+55(10),CHRECORD
         TM    NUMCFLG,X'01'
         BZ    HRECORGD
         MVC   LINE+66(15),=C'INVALID NUMERIC'
HRECORGD DS    0H
         PUT   SYSPRINT,LINE
         B     SYINLOOP
SYSINEND DS    0H
         MVC   LINE,LINE-1
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGDEFV),MSGDEFV
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGDEFD),MSGDEFD
         PUT   SYSPRINT,LINE
* ----- >                                  Plug in default values.
         CLC   BINOTIFY(4),=F'0'           Was NOTIFY= coded?
         BNE   HNOTFHAS                    Yes. Nonzero value.
         MVC   BINOTIFY(4),DEFNOTFY        Supply Default Values
         MVC   CHNOTIFY(10),CHANOTFY
         OI    FLAG01,X'01'                Force NOTIFY= present
         MVC   LINE,LINE-1
         MVC   LINET(7),=C'NOTIFY='
         MVC   LINET+7(10),CHANOTFY
         HEX   LINE+29,4,DEFNOTFY
         PUT   SYSPRINT,LINE
HNOTFHAS DS    0H
* ----- >
         CLC   BIUSERID(4),=F'0'           Was USERIDS= coded?
         BNE   HUSEIHAS                    Yes. Nonzero value.
         MVC   BIUSERID(4),DEFUSERS        Supply Default Values
         MVC   CHUSERID(10),CHAUSERS
         OI    FLAG01,X'02'                Force USERIDS= present
         MVC   LINE,LINE-1
         MVC   LINET(8),=C'USERIDS='
         MVC   LINET+8(10),CHAUSERS
         HEX   LINE+29,4,DEFUSERS
         PUT   SYSPRINT,LINE
HUSEIHAS DS    0H
* ----- >
         CLC   BIMESAGE(4),=F'0'           Was MESSAGES= coded?
         BNE   HMSGSHAS                    Yes. Nonzero value.
         MVC   BIMESAGE(4),DEFMESGS        Supply Default Values
         MVC   CHMESAGE(10),CHAMESGS
         OI    FLAG01,X'04'                Force MESSAGES= present
         MVC   LINE,LINE-1
         MVC   LINET(9),=C'MESSAGES='
         MVC   LINET+9(10),CHAMESGS
         HEX   LINE+29,4,DEFMESGS
         PUT   SYSPRINT,LINE
HMSGSHAS DS    0H
         MVC   LINE,LINE-1
         PUT   SYSPRINT,LINE
* ----- >
         CLOSE (SYSIN)
         LM    R3,R4,SAVE34
SYSINENX DS    0H
         MVC   LINE,LINE-1
         PUT   SYSPRINT,LINE
         L     R9,SAVER9A
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*     Routine to get the numeric values from the SYSIN keywords.  *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
NUMBRGET DS    0H                                                        06454
         ST    R9,SAVER9B           Save BAL register.
         ST    R4,SAVER4A           Save address of number in original
         ST    R3,SAVER3A           Save address of number in copy
         NI    NUMCFLG,X'FF'-X'01'  Turn off "not numeric" flag.
         MVC   CHARNUM(10),BLNKLINE   Initialize character field
         XC    BINVALUE,BINVALUE      Clear binary value
* ----------------------------------------------------------------- *
*                    Upon entry, R4 points to "number" in original.
*                    Upon entry, R3 points to "number" in copy.
* ----------------------------------------------------------------- *
         CLI   0(R4),C' '        Is the first number value blank?        06455
         BE    NUMBRCLG          Yes. Ignore the entire card.            06456
* --
* ----------------------------------------------------------------- *
*    At this point, we are looking at the first character after     *
*     the particular keyword, and we want to test it and extract    *
*     its value.                                                    *
* ----------------------------------------------------------------- *
         CLI   0(R4),X'F0'       Smaller than character 0?               06457
         BL    NUMBRNVL          Yes. Mark as invalid.                   06458
         CLI   0(R4),X'F9'       Bigger than 9?                          06459
         BH    NUMBRNVL          Yes. Mark as invalid.                   06460
         B     NUMBRVLD          Didn't fail, consider the number valid
*                   Remember that R4 is start address for "number".
NUMBRNVL DS    0H                Mark the character as invalid number.   06464
         OI    NUMCFLG,X'01'     Set "invalid flag" for this number.
         OI    INVNFLG,X'01'     Show there's an invalid number coded.
         MVI   0(R4),C'*'        Mark invalid digit in the report.
NUMBRVLD DS    0H                                                        06464
* ----------------------------------------------------------------- *
NUMBRNUM DS    0H                Loop to extract the number.             06464
         LA    R4,1(,R4)         Bump R4 to point to next character.     06465
         C     R4,INSYSIN+71     End of card?                            06466
         BH    NUMBRGNM          Yes, Get number.                        06467
         CLI   0(R4),C' '        Blank here?                             06468
         BE    NUMBRGNM          Yes, Get number.                        06469
** ----- >>   Validity Check - below
* --
         CLI   0(R4),X'F0'       Smaller than C'0'?
         BL    NUMBINVL          Yes. Mark as invalid.
         CLI   0(R4),X'F9'       Bigger than C'9'?
         BH    NUMBINVL          Yes. Mark as invalid.
         B     NUMBVALD          None of above, don't mark invalid.
NUMBINVL DS    0H                Mark the character as invalid number.   06464
         OI    NUMCFLG,X'01'     Set "invalid flag" for this number.
         OI    INVNFLG,X'01'     Show there's an invalid number coded.
         MVI   0(R4),C'*'        Mark invalid digit in the report.
NUMBVALD DS    0H                                                        06464
** ----- >>   Validity Check - above
         B     NUMBRNUM          Step up one place.                      06470
* ----------------------------------------------------------------- *
NUMBRGNM DS    0H                                                        06471
         L     R2,SAVER4A        Load R2 with address of number start
         SR    R4,R2             How big is the number?                  06472
         BCTR  R4,0              Lower by one for EXECUTE.               06473
         TM    NUMCFLG,X'01'     Was any digit of the number invalid?
         BO    NUMBRNPK          Yes, don't try to pack it. S0C7.
         XC    PACKWORK,PACKWORK   Clear the doubleword work area.
         EX    R4,PACKIT         Pack the number into work area.         06474
NUMBRNPK DS    0H                                                        06471
         MVC   CHARNUM(10),BLNKLINE   Clear the display area.
         EX    R4,MVNUMBER       Move the display value to display.      06476
*        LA    R4,1(,R4)
         TM    NUMCFLG,X'01'     Was any digit of the number invalid?
         BO    NUMBRCLG          Yes, don't try to convert it. S0C7.
         CVB   R0,PACKWORK       Convert the packed version to binary.   06477
         ST    R0,BINVALUE       Store the binary value for later use.   06478
NUMBRCLG DS    0H                                                        06479
         L     R3,SAVER3A
         L     R9,SAVER9B        Restore BAL register.
         BR    R9                                                        06480
PACKIT   PACK  PACKWORK,0(0,R2)      <<< EXECUTED >>>                    06759
MVNUMBER MVC   CHARNUM(0),0(R2)      <<< EXECUTED >>>                    06767
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*   Perform Calculations With The Coded SYSIN Quantities.         *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
CALCRECS DS    0H                         Perform Calculations
         ST    R9,SAVER9C                 BAL register protection
         MVC   LINE,LINE-1                Clear Line
         MVC   LINET(L'MSGCLCR),MSGCLCR   Print Calculation Header
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1                Clear Line
         MVC   LINET(L'MSGCLCD),MSGCLCD   Dashes
         PUT   SYSPRINT,LINE
FLAGNOTF DS    0H                         Set Flags about which SYSIN
*                                          parameters were coded.
         CLC   BINOTIFY(4),=F'0'          NOTIFY?
         BE    FLAGUSID
         OI    FLAG01,X'01'
FLAGUSID DS    0H
         CLC   BIUSERID(4),=F'0'          USERIDS?
         BE    FLAGMESG
         OI    FLAG01,X'02'
FLAGMESG DS    0H
         CLC   BIMESAGE(4),=F'0'          MESSAGES?
         BE    FLAGTRKS
         OI    FLAG01,X'04'
FLAGTRKS DS    0H
         CLC   BITRACKS(4),=F'0'          TRACKS?
         BE    FLAGCYLS
         OI    FLAG01,X'08'
FLAGCYLS DS    0H
         CLC   BICYLIND(4),=F'0'          CYLINDERS?
         BE    FLAGEXTU
         OI    FLAG01,X'10'
FLAGEXTU DS    0H
         CLC   BIEXTRUS(4),=F'0'          EXTRAUSERIDRECS?
         BE    FLAGRECD
         OI    FLAG01,X'20'
FLAGRECD DS    0H
         CLC   BIRECORD(4),=F'0'          RECORDS?
         BE    FLAGGEND
         OI    FLAG01,X'40'
FLAGGEND DS    0H                         End of flagging process.
         TM    FLAG01,X'7F'               Any SYSINs coded?
         BZ    NOCALCS                    No. Say so and end.
         B     DOCALCS                    Yes. Go do the calculations.
NOCALCS  DS    0H
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGNOCAL),MSGNOCAL   No SYSIN was entered.
         PUT   SYSPRINT,LINE
*        BAL   R9,NOSYSINM
         B     CALCREND                   Get out after posting message
DOCALCS  DS    0H
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*   Perform The Various Calulations And Display The Results.      *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
TRKTOREC DS    0H                         TRACKS --> Records
         TM    FLAG01,X'08'               TRACKS coded?
         BZ    TRKTOREE                   No. Don't calculate.
         STM   R4,R5,SAVE45               Save Work Registers
         ST    R2,SAVER2
         L     R2,RECPERTR
         XR    R4,R4                      Clear Multiplicand Hi Reg
         L     R5,BITRACKS                Load Multipliand
         MR    R4,R2                      Multiply
         ST    R5,BITRKREC                Store Result
         L     R2,SAVER2
         LM    R4,R5,SAVE45               Restore Work Registers
         MVC   LINE,LINE-1
         XR    R6,R6                     ZERO OUT WORK REGISTER
         L     R6,BITRKREC               LOAD TOTAL RECORDS
         CVD   R6,CVDWORK                CONVERT TO DECIMAL
         MVC   DETRKREC,CVDWORK          STORE AWAY FOR REPORTING
         MVC   LINET(L'MSGTR2BR),MSGTR2BR
         MVC   LINET(10),CHTRACKS
         MVC   LINET+28(10),MASK10
         ED    LINET+28(10),DETRKREC+3
         PUT   SYSPRINT,LINE
TRKTOREE DS    0H
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
CYLTOREC DS    0H                         CYLINDERS --> Records
         TM    FLAG01,X'10'               CYLINDERS coded?
         BZ    CYLTOREE                   No. Don't calculate.
         STM   R4,R5,SAVE45               Save Work Registers
         ST    R2,SAVER2
         L     R2,RECPERCY
         XR    R4,R4                      Clear Multiplicand Hi Reg
         L     R5,BICYLIND                Load Multipliand
         MR    R4,R2                      Multiply
         ST    R5,BICYLREC                Store Result
         L     R2,SAVER2
         LM    R4,R5,SAVE45               Restore Work Registers
         MVC   LINE,LINE-1
         XR    R6,R6                     ZERO OUT WORK REGISTER
         L     R6,BICYLREC               LOAD TOTAL RECORDS
         CVD   R6,CVDWORK                CONVERT TO DECIMAL
         MVC   DECYLREC,CVDWORK          STORE AWAY FOR REPORTING
         MVC   LINET(L'MSGCY2BR),MSGCY2BR
         MVC   LINET(10),CHCYLIND
         MVC   LINET+28(10),MASK10
         ED    LINET+28(10),DECYLREC+3
         PUT   SYSPRINT,LINE
CYLTOREE DS    0H
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
RECTOTRK DS    0H                         RECORDS to TRACKS
         TM    FLAG01,X'40'               RECORDS coded?
         BZ    RECTOTRE
         STM   R4,R5,SAVE45               Save Work Registers
         ST    R2,SAVER2
         XR    R4,R4                      Clear Dividend Hi Reg
         L     R5,BIRECORD                Load Dividend
         L     R2,RECPERTR                Load Divisor
         DR    R4,R2                      Divide
         LTR   R4,R4                      Is there a remainder?
         BZ    RECNTREM                   No. Quotient is even.
         LA    R5,1(,R5)                  Yes. Add one to quotient.
RECNTREM DS    0H
         ST    R5,BIRE2TR                 Store binary number
         XR    R6,R6                      Zero work register
         L     R6,BIRE2TR                 Load binary number
         CVD   R6,CVDWORK                 Convert to decimal
         MVC   DERE2TR,CVDWORK            Store away for reporting
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGRC2TR),MSGRC2TR
         MVC   LINET(10),CHRECORD
         MVC   LINET+28(10),MASK10
         ED    LINET+28(10),DERE2TR+3
         PUT   SYSPRINT,LINE
         L     R2,SAVER2
         LM    R4,R5,SAVE45               Restore Work Registers
RECTOTRE DS    0H
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
RECTOCYL DS    0H                         RECORDS to CYLINDERS
         TM    FLAG01,X'40'               RECORDS coded?
         BZ    RECTOCYE
         STM   R4,R5,SAVE45               Save Work Registers
         ST    R2,SAVER2
         XR    R4,R4                      Clear Dividend Hi Reg
         L     R5,BIRECORD                Load Dividend
         L     R2,RECPERCY                Load Divisor
         DR    R4,R2                      Divide
         LTR   R4,R4                      Is there a remainder?
         BZ    RECNCREM                   No. Quotient is even.
         LA    R5,1(,R5)                  Yes. Add one to quotient.
RECNCREM DS    0H
         ST    R5,BIRE2CY                 Store binary number
         XR    R6,R6                      Zero work register
         L     R6,BIRE2CY                 Load binary number
         CVD   R6,CVDWORK                 Convert to decimal
         MVC   DERE2CY,CVDWORK            Store away for reporting
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGRC2CY),MSGRC2CY
         MVC   LINET(10),CHRECORD
         MVC   LINET+28(10),MASK10
         ED    LINET+28(10),DERE2CY+3
         PUT   SYSPRINT,LINE
         L     R2,SAVER2
         LM    R4,R5,SAVE45               Restore Work Registers
RECTOCYE DS    0H
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
UIDTOURC DS    0H                         Userids to Userid Records
         TM    FLAG01,X'02'               USERIDS coded?
         BZ    UIDTOURE
         STM   R4,R5,SAVE45               Save Work Registers
         ST    R2,SAVER2
         XR    R4,R4                      Clear Dividend Hi Reg
         L     R5,BIUSERID                Load Dividend
         L     R2,=F'9'                   Load Divisor
         DR    R4,R2                      Divide
         LTR   R4,R4                      Is there a remainder?
         BZ    UIDNCREM                   No. Quotient is even.
         LA    R5,1(,R5)                  Yes. Add one to quotient.
UIDNCREM DS    0H
         ST    R5,BIUI2UR                 Store binary number
         XR    R6,R6                      Zero work register
         L     R6,BIUI2UR                 Load binary number
         CVD   R6,CVDWORK                 Convert to decimal
         MVC   DEUI2UR,CVDWORK            Store away for reporting
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGUI2UR),MSGUI2UR
         MVC   LINET(10),CHUSERID
         MVC   LINET+28(10),MASK10
         ED    LINET+28(10),DEUI2UR+3
         PUT   SYSPRINT,LINE
         L     R2,SAVER2
         LM    R4,R5,SAVE45               Restore Work Registers
UIDTOURE DS    0H                         Userids to Userid Records
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
EXUTOUID DS    0H                         Extra Userid Records -> UIDs
         TM    FLAG01,X'20'               EXTRAUSERIDRECS coded?
         BZ    EXUTOUIE                   No. Don't calculate.
         STM   R4,R5,SAVE45               Save Work Registers
         ST    R2,SAVER2
         L     R2,=F'9'                   Multiplier
         XR    R4,R4                      Clear Multiplicand Hi Reg
         L     R5,BIEXTRUS                Load Multipliand
         MR    R4,R2                      Multiply
         ST    R5,BIEU2UI                 Store Result
         L     R2,SAVER2
         LM    R4,R5,SAVE45               Restore Work Registers
         MVC   LINE,LINE-1
         XR    R6,R6                     ZERO OUT WORK REGISTER
         L     R6,BIEU2UI                LOAD TOTAL RECORDS
         CVD   R6,CVDWORK                CONVERT TO DECIMAL
         MVC   DEEU2UI,CVDWORK           STORE AWAY FOR REPORTING
         MVC   LINET(L'MSGEU2UI),MSGEU2UI
         MVC   LINET(10),CHEXTRUS
         MVC   LINET+47(10),MASK10
         ED    LINET+47(10),DEEU2UI+3
         PUT   SYSPRINT,LINE
EXUTOUIE DS    0H
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
NOTFINDX DS    0H                         NOTIFY to NOTIFY INDEX RECDS
         OI    FLAG01,X'01'               NOTIFY coded?
         BZ    NOTFINDE
         STM   R4,R5,SAVE45               Save Work Registers
         ST    R2,SAVER2
         XR    R4,R4                      Clear Dividend Hi Reg
         L     R5,BINOTIFY                Load Dividend
         L     R2,=F'25'                  Load Divisor
         DR    R4,R2                      Divide
         LTR   R4,R4                      Is there a remainder?
         BZ    NOTFTREM                   No. Quotient is even.
         LA    R5,1(,R5)                  Yes. Add one to quotient.
NOTFTREM DS    0H
         ST    R5,BINOTFI                 Store binary number
         XR    R6,R6                      Zero work register
         L     R6,BINOTFI                 Load binary number
         CVD   R6,CVDWORK                 Convert to decimal
         MVC   DENOTFI,CVDWORK            Store away for reporting
         XR    R4,R4                      Clear Multiplicand Hi Reg
         L     R5,BINOTFI                 Load Multipliand
         L     R2,=F'25'                  Load Multiplier
         MR    R4,R2                      Multiply
         ST    R5,BINOTFR                 Store Result
         XR    R6,R6                      Zero work register
         L     R6,BINOTFR                 Load binary number
         CVD   R6,CVDWORK                 Convert to decimal
         MVC   DENOTFR,CVDWORK            Store away for reporting
         L     R2,BINOTFI
         A     R2,BINOTFR
         ST    R2,BINOTOT
         XR    R6,R6                      Zero work register
         L     R6,BINOTOT                 Load binary number
         CVD   R6,CVDWORK                 Convert to decimal
         MVC   DENOTOT,CVDWORK            Store away for reporting
*
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGNO2NI),MSGNO2NI
         MVC   LINET(10),CHNOTIFY
         MVC   LINET+34(10),MASK10
         ED    LINET+34(10),DENOTFI+3
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGNRROU),MSGNRROU
         MVC   LINET(10),CHNOTIFY
         MVC   LINET+34(10),MASK10
         ED    LINET+34(10),DENOTFR+3
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGNOTOT),MSGNOTOT
         MVC   LINET(10),CHNOTIFY
         MVC   LINET+34(10),MASK10
         ED    LINET+34(10),DENOTOT+3
         PUT   SYSPRINT,LINE
         L     R2,SAVER2
         LM    R4,R5,SAVE45               Restore Work Registers
NOTFINDE DS    0H
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
TOTRECAL DS    0H
         TM    FLAG01,X'07'     Notify+Userids+Messages?
         BNO   TOTRTCYM         Not all coded, don't calculate this.
         ST    R2,SAVER2        Save work register.
         L     R2,BINOTOT       All records needed for Notify
         LA    R2,2(,R2)        Header + Free Search record
         A     R2,BIUI2UR       Userid records
         A     R2,BIEXTRUS      Extra Userid records
         A     R2,BIMESAGE      Number of message records
         ST    R2,BITOTREC      Store total in binary
         XR    R6,R6                      Zero work register
         L     R6,BITOTREC                Load binary number
         CVD   R6,CVDWORK                 Convert to decimal
         MVC   DETOTREC,CVDWORK           Store away for reporting
         L     R2,SAVER2
         MVC   LINE,LINE-1
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGALCR),MSGALCR
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGALCD),MSGALCD
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGTOTB1),MSGTOTB1
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGTOTB2),MSGTOTB2
         MVC   LINET+58(10),MASK10
         ED    LINET+58(10),DETOTREC+3
         PUT   SYSPRINT,LINE
TOTRECAE DS    0H
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
TOTRTTRK DS    0H                         RECORDS to TRACKS
         STM   R4,R5,SAVE45               Save Work Registers
         ST    R2,SAVER2
         XR    R4,R4                      Clear Dividend Hi Reg
         L     R5,BITOTREC                Load Dividend
         L     R2,RECPERTR                Load Divisor
         DR    R4,R2                      Divide
         LTR   R4,R4                      Is there a remainder?
         BZ    TOTRTREM                   No. Quotient is even.
         LA    R5,1(,R5)                  Yes. Add one to quotient.
TOTRTREM DS    0H
         ST    R5,BITO2TR                 Store binary number
         XR    R6,R6                      Zero work register
         L     R6,BITO2TR                 Load binary number
         CVD   R6,CVDWORK                 Convert to decimal
         MVC   DETO2TR,CVDWORK            Store away for reporting
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
TOTRTCYL DS    0H                         RECORDS to CYLINDERS
         XR    R4,R4                      Clear Dividend Hi Reg
         L     R5,BITOTREC                Load Dividend
         L     R2,RECPERCY                Load Divisor
         DR    R4,R2                      Divide
         LTR   R4,R4                      Is there a remainder?
         BZ    TOTRCREM                   No. Quotient is even.
         LA    R5,1(,R5)                  Yes. Add one to quotient.
TOTRCREM DS    0H
         ST    R5,BITO2CY                 Store binary number
         XR    R6,R6                      Zero work register
         L     R6,BITO2CY                 Load binary number
         CVD   R6,CVDWORK                 Convert to decimal
         MVC   DETO2CY,CVDWORK            Store away for reporting
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGTOTB3),MSGTOTB3
         MVC   LINET+31(10),MASK10
         ED    LINET+31(10),DETO2TR+3
         MVC   LINET+52(10),MASK10
         ED    LINET+52(10),DETO2CY+3
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGTOTB4),MSGTOTB4
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGTOTB5),MSGTOTB5
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGCYLRE),MSGCYLRE
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGEXKE1),MSGEXKE1
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGEXKE2),MSGEXKE2
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGEXKE3),MSGEXKE3
         PUT   SYSPRINT,LINE
         L     R2,SAVER2
         LM    R4,R5,SAVE45               Restore Work Registers
         B     TOTRTCYE
TOTRTCYM DS    0H
         MVC   LINE,LINE-1
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGALCR),MSGALCR
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGALCD),MSGALCD
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGALLRE),MSGALLRE
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGALLR1),MSGALLR1
         PUT   SYSPRINT,LINE
TOTRTCYE DS    0H
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
CALCREND DS    0H
         MVC   LINE,LINE-1                Blank line at the end.
         PUT   SYSPRINT,LINE
         L     R9,SAVER9C                 BAL register protection
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
NOSYSINM DS    0H
         ST    R9,SAVER9D
         MVC   LINE,LINE-1
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGNOC0D),MSGNOC0D
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGNOC0T),MSGNOC0T
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGNOC0D),MSGNOC0D
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         PUT   SYSPRINT,LINE
         L     R9,SAVER9D
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
SYSADMIS DS    0H
         ST    R9,SAVER9D
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGNOC0A),MSGNOC0A
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGNOCDA),MSGNOCDA
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGNOC01),MSGNOC01
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGNOC02),MSGNOC02
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGNOC03),MSGNOC03
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGNOC04),MSGNOC04
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGNOC05),MSGNOC05
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGNOC06),MSGNOC06
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGNOC07),MSGNOC07
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGNOC0D),MSGNOC0D
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGNOC0T),MSGNOC0T
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(L'MSGNOC0D),MSGNOC0D
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         PUT   SYSPRINT,LINE
NOSYSINE DS    0H
         L     R9,SAVER9D
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEX      DS    0H                                                        04224
         MVC   1(1,R15),0(R1)        Move byte                           04225
         UNPK  0(3,R15),1(2,R15)     Unpack                              04226
         TR    0(2,R15),HEXTAB-240                                       04227
         LA    R15,2(,R15)           Increment output pointer            04228
         LA    R1,1(,R1)             Increment input pointer             04229
         BCT   R0,HEX                Decrement length, then loop         04230
         MVI   0(R15),C' '           Blank the trailing byte             04231
         BR    R4                    Return to caller                    04232
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                     04233
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEXSAVE  DS    3F                    Register save for HEX macro
SAV4HEX  DC    F'0'
         SPACE                                                           04234
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        DATA AREAS THAT NEED TO BE INITIALIZED AT THE BEGINNING  *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
INITCON  MVI   LINE-1,C' '         INITIALIZE BLANK
         MVC   LEVEL(7),BLANKS
         MVI   OUTLINE-1,C' '        INITIALIZE BLANK
         MVC   OUTLINE(133),OUTLINE-1  BLANK SYSPRINT OUTPUT AREA
         MVI   FLAGSYST,X'00'        DD name protection
         MVC   HIGHVAL(4),ZERRECX    ZERO OUT HIGHVAL COUNT
         MVC   NUMBREC(4),ZERRECX    ZERO OUT RECORD COUNTER
         MVC   INREC-2(2),ZERRECX    INITIALIZE INPUT AREA
         MVC   INREC(130),ZERRECX    INITIALIZE INPUT AREA
         MVC   INHDR(130),ZERRECX    INITIALIZE HEADER AREA
         MVI   RC15,X'00'            RETURN CODE AREA
         MVI   EOJFLAG,X'00'
         MVI   NUMCFLG,X'00'
         MVI   INVNFLG,X'00'
         ZAP   DECREPTR,=P'0'        INITIALIZE PACKED FIELDS
         ZAP   DECREPCY,=P'0'
         ZAP   DECTRPCY,=P'0'        INITIALIZE PACKED FIELDS
         MVC   RECONTRK(4),ZERRECX   COUNTER FOR RECORD NUMBER
         MVI   INSYSIN-1,X'40'
         MVC   INSYSIN,INSYSIN-1
         MVI   JFCBFLG,X'00'
         MVC   CHNOTIFY(10),BLNKLINE
         MVC   CHUSERID(10),BLNKLINE
         MVC   CHMESAGE(10),BLNKLINE
         MVC   CHTRACKS(10),BLNKLINE
         MVC   CHCYLIND(10),BLNKLINE
         MVC   CHEXTRUS(10),BLNKLINE
         MVC   CHRECORD(10),BLNKLINE
         MVC   BINOTIFY,=F'0'
         MVC   BIUSERID,=F'0'
         MVC   BIMESAGE,=F'0'
         MVC   BITRACKS,=F'0'
         MVC   BICYLIND,=F'0'
         MVC   BIEXTRUS,=F'0'
         MVC   BIRECORD,=F'0'
         MVC   BIRE2TR,=F'0'
         MVC   BIRE2CY,=F'0'
         MVC   BITO2TR,=F'0'
         MVC   BITO2CY,=F'0'
         MVC   BIUI2UR,=F'0'
         MVC   BIEU2UI,=F'0'
         MVC   BINOTFI,=F'0'
         MVC   BINOTFR,=F'0'
         MVC   BINOTOT,=F'0'
         MVC   BITOTREC,=F'0'
         MVI   FLAG01,X'00'
         MVI   FLAG02,X'00'
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         EJECT
*-----------------------------------------------------------------*
*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*
*-----------------------------------------------------------------*
DUMMYREC DS    0CL130
         DC    X'07'
         DC    C'DUMMY'
         DC    124X'00'
PACKZERO DC    PL3'0'
PACKZER5 DC    PL5'0'
FULLZERO DC    F'0'
* - - - - - - - - - - - - - - - - - - - - - - - - *
MOVEID   MVC   NEWID(*-*),0(R1)    EXECUTED
* - - - - - - - - - - - - - - - - - - - - - - - - *
ZERRECX  DS    0CL130
         DC    130X'00'
JFCBT    DC    CL10'JFCB +    '
BLNKLINE DC    CL133' '
BLANKS   DC    C'        '         8 BLANKS
BLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER
ZEROS    DS    0CL8
ZERREC   DS    0CL128
ZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING
         DC    X'0000'
         DC    121X'00'
* - - - - - - - - - - - - - - - - - - - - - - - - *
*     DEFAULT QUANTITIES FOR SYSIN KEYWORDS       *
* - - - - - - - - - - - - - - - - - - - - - - - - *
DEFNOTFY DC    A(&DEFNOTF)
DEFUSERS DC    A(&DEFUSER)
DEFMESGS DC    A(&DEFMSGS)
CHANOTFY DC    CL10'&DEFNOTF'
CHAUSERS DC    CL10'&DEFUSER'
CHAMESGS DC    CL10'&DEFMSGS'
* - - - - - - - - - - - - - - - - - - - - - - - - *
MESSAGE1 DC    C'BAD OPEN - ALLOC F(BRODCAST) DA(SYS1.BRODCAST) SH REU'
MESSEND  DC    C'* - - - - END OF MESSAGES FOR THIS USER - - - - *'
MESTOTAL DC    C'USER         HAD           DEFERRED TSO MESSAGES'
MESALL DC C'TOTAL DEFERRED TSO MESSAGES IN SYS1.BRODCAST              '
MSGCYL   DC    C'Allocation of BRODUMMY DD must be in Cylinders.'
MSGONEC  DC    C'Allocation of BRODUMMY DD must be 1 CYL primary.'
MSGDSOR  DC    C'DSORG of BRODUMMY DD must be DA.  '
MSGLREC  DC    C'LRECL of BRODUMMY DD must be 129. '
MSGBLKS  DC    C'BLKSIZE of BRODUMMY DD must be 129. '
MSGKEYL  DC    C'KEYLEN of BRODUMMY DD must be 1.   '
MSGRFMT  DC    C'RECFM must be either F or FB.      '
MSGMEAS  DC    C'Measured Quantities for this DASD Device: '
MSGMDSH  DC    C'-------- ---------- --- ---- ---- ------- '
MSGDOSY  DC    C'SYSIN Quantities Entered: '
MSGDODH  DC    C'----- ---------- -------- '
MSGCLCR  DC    C'Calculation Results:  (based only on SYSIN parameters x
               that were entered)'
MSGCLCD  DC    C'----------- --------      '
MSGALCR  DC    C'Allocation Recommendations: '
MSGALCD  DC    C'---------- ---------------  '
MSGDEFV  DC    C'Default SYSIN Values - (that were not coded)'
MSGDEFD  DC    C'------- ----- ------                      '
MSGNOCAL DC    C'No SYSIN quantities entered. Therefore no calculationsx
                were done.'
MSGNOC0D DC    C'---------------------------------------------- '
MSGNOC0T DC    C'SYSIN Keywords have to be entered in Column 1. '
MSGNOC0A DC    C'  Admissible SYSIN Keywords:  '
MSGNOCDA DC    C'  ---------- ----- ---------  '
MSGNOC01 DC    C'NOTIFY=nnn      (number of Global Notify records)    '
MSGNOC02 DC    C'USERIDS=nnnn    (number of Userids to be loaded)     '
MSGNOC03 DC    C'MESSAGES=nnnnn  (number of User Messages in BRODCAST)'
MSGNOC04 DC    C'EXTRAUSERIDRECS=nn (extra Userid records in BRODCAST -X
                new Userids / 9)'
MSGNOC05 DC    C'RECORDS=nnnnnn  (total number of records in BRODCAST)'
MSGNOC06 DC    C'TRACKS=nnnn     (total tracks in BRODCAST allocation)'
MSGNOC07 DC    C'CYLINDERS=nnn   (total cylinders in BRODCAST allocatiox
               n)'
MSGCORRE DC    C'Please correct the indicated errors in the JCL and rer-
               un the job.'
MSGTR2BR DC    C'           Tracks     yield            BRODCAST  recorx
               ds.'
MSGCY2BR DC    C'           Cylinders  yield            BRODCAST  recorx
               ds.'
MSGRC2TR DC    C'           Records    yield            Tracks    allocx
               ated for BRODCAST.'
MSGRC2CY DC    C'           Records    yield            Cylinders allocx
               ated for BRODCAST.'
MSGUI2UR DC    C'           Userids    need             Userid records x
               in BRODCAST.'
MSGEU2UI DC    C'           Extra UID records contain space for        x
                    Userids.'
MSGNO2NI DC    C'           Notify records require            Notify inx
               dex records.'
MSGNRROU DC    C'           Notify records round to           as a multx
               iple of 25.'
MSGNOTOT DC    C'           Notify records require            Total BROx
               DCAST records.'
MSGTOTB1 DC    C'Based on NOTIFY=, USERIDS=, MESSAGES=, EXTRAUSERIDRECSx
               =, the number'
MSGTOTB2 DC    C' of records required for a new BRODCAST Dataset would x
               be:           '
MSGTOTB3 DC    C'This requires an allocation of            Tracks or   x
                        Cylinders.'
MSGTOTB4 DC    C'Allocation for a BRODCAST Dataset must be in 1 extent x
               only....'
MSGTOTB5 DC    C'To satisfy specs, you can allocate anything larger thax
               n this size.'
MSGCYLRE DC    C'(It is recommended to allocate space in Cylinders rathx
               er than in Tracks.)'
MSGALLRE DC    C'To get allocation recommendations, you have to code atx
                least: '
MSGALLR1 DC    C'  NOTIFY=, USERIDS=, MESSAGES= parameters in SYSIN. '
MSGEXKE1 DC    C'The TRACKS=, CYLINDERS=, and RECORDS= keywords'
MSGEXKE2 DC    C' are for calculation purposes only, and are not used '
MSGEXKE3 DC    C' in determining minimum BRODCAST Dataset size.       '
RECPTRK  DC    C'Records per Track   : '
TRKPCYL  DC    C'Tracks per Cylinder : '
RECPCYL  DC    C'Records per Cylinder: '
NEWPAGE  DC    C'1'
NEXTLIN  DC    C' '
TWOLINE  DC    C'0'
THRLINE  DC    C'-'
NOLINE   DC    C'+'
*--------------------------------------------------------------------*
TITLINE  DS    0CL133
         DC    C'1'
         DC    CL3' '
         DC    CL6'---'
         DC    CL79'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM   -X
               --'
         DC    CL46' '
         SPACE
*--------------------------------------------------------------------*
         SPACE
CPYRLINE DS    0CL133
         DC    C'0'
         DC    CL3' '
* -->                               Currently 77 characters
         DC    C'&COPYRGT'
         DC    C'&COPYRSV'
* -->
         DC    CL52' '
         SPACE
*--------------------------------------------------------------------*
         SPACE
REPTLN01 DS    0CL133
         DC    C'-'
         DC    CL3' '
         DC    CL6'---'
         DC    CL55'&PGMNAME   ---   BRODCAST Dataset Calculation Progrx
               am  '
         DC    C' ---'
         DC    CL64' '
*--------------------------------------------------------------------*
JFCBDTIT DC    C'              JFCB  DIAGNOSTIC  HEX  DISPLAY  '
MEASR30H DC    C'01      05        10        15        20        25    x
                   30'
RULER30H DC    C'--------++--------++--------++--------++--------++----x
               ----++'
MASK4    DC    XL4'40202120'
MASK6    DC    XL6'402020202120'
MASK10   DC    XL10'40202020202020202120'
BPARM    DC    AL2(BPARME-BPARM,0),C'NON'
BPARME   EQU   *
         DS    0F
QNAM     DC    CL8'SYSIKJBC'
RNAME    DC    X'000000'
         SPACE 3
BRODUMMY DCB   DDNAME=BRODUMMY,    JCL CONNECTION                      X
               BLKSIZE=129,        LENGTH OF FILES BLOCK               X
               DSORG=PS,           SEQUENTIAL....                      X
               MACRF=(WL),         LOAD OF BDAM FILE                   X
               RECFM=F,            FIXED LENGTH                        X
               KEYLEN=1,           SIZE OF KEY                         X
               EXLST=JFCB1
*
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,LRECL=133,MACRF=PM,RECFM=FBA
*
SYSIN    DCB   MACRF=GM,DDNAME=SYSIN,DSORG=PS,RECFM=FB,LRECL=80,       X
               EODAD=SYSINEND
         SPACE 3
         LTORG
         SPACE
         DS    0F
ENQUSER  ENQ   (QNAM,RNAME,E,,SYSTEM),MF=L
         SPACE 3
         DS    0F                  NEEDED FOR CORRECT EXLST
JFCB1    DC    X'87'
         DC    AL3(INFMJFCB)
         IEFJFCBN LIST=YES
         SPACE 1
*-----------------------------------------------------------------*
*----         GETMAINED DATA AREA FIELDS                      ----*
*-----------------------------------------------------------------*
DATAAREA DSECT
SAVE     DS    9D
*-----------------------------------------------------------------*
PACKWORK DC    D'0'              PACK WORK AREA
CHARNUM  DC    CL10' '           CHARACTER NUMBER JUSTIFIED LEFT         06854
BINVALUE DS    F                 FULLWORD BINARY NUMBER
*-----------------------------------------------------------------*
CHNOTIFY DC    CL10' '           CHARACTER NUMBER JUSTIFIED LEFT         06854
BINOTIFY DS    F                 FULLWORD BINARY NUMBER
CHUSERID DC    CL10' '           CHARACTER NUMBER JUSTIFIED LEFT         06854
BIUSERID DS    F                 FULLWORD BINARY NUMBER
CHMESAGE DC    CL10' '           CHARACTER NUMBER JUSTIFIED LEFT         06854
BIMESAGE DS    F                 FULLWORD BINARY NUMBER
CHTRACKS DC    CL10' '           CHARACTER NUMBER JUSTIFIED LEFT         06854
BITRACKS DS    F                 FULLWORD BINARY NUMBER
CHCYLIND DC    CL10' '           CHARACTER NUMBER JUSTIFIED LEFT         06854
BICYLIND DS    F                 FULLWORD BINARY NUMBER
CHEXTRUS DC    CL10' '           CHARACTER NUMBER JUSTIFIED LEFT         06854
BIEXTRUS DS    F                 FULLWORD BINARY NUMBER
CHRECORD DC    CL10' '           CHARACTER NUMBER JUSTIFIED LEFT         06854
BIRECORD DS    F                 FULLWORD BINARY NUMBER
*-----------------------------------------------------------------*
BIRE2TR  DS    F                 FULLWORD BINARY NUMBER
DERE2TR  DS    PL8
BIRE2CY  DS    F                 FULLWORD BINARY NUMBER
DERE2CY  DS    PL8
BITO2TR  DS    F                 FULLWORD BINARY NUMBER
DETO2TR  DS    PL8
BITO2CY  DS    F                 FULLWORD BINARY NUMBER
DETO2CY  DS    PL8
BIUI2UR  DS    F                 FULLWORD BINARY NUMBER
DEUI2UR  DS    PL8
BIEU2UI  DS    F                 FULLWORD BINARY NUMBER
DEEU2UI  DS    PL8
BINOTFI  DS    F                 FULLWORD BINARY NUMBER
DENOTFI  DS    PL8
BINOTFR  DS    F                 FULLWORD BINARY NUMBER
DENOTFR  DS    PL8
BINOTOT  DS    F                 FULLWORD BINARY NUMBER
DENOTOT  DS    PL8
BITOTREC DS    F                 FULLWORD BINARY NUMBER
DETOTREC DS    PL8
*-----------------------------------------------------------------*
HIGHVAL  DS    F                   NUMBER OF RECORDS IN BRODCAST
NUMBREC  DS    F                   COUNT OF RECORDS LOADED
RECONTRK DS    F                   COUNT RECORDS ON THIS TRACK
RECPERTR DS    F                   RECORDS PER TRACK
TRKPERCY DS    F                   COUNT TRACKS PER CYLINDER
RECPERCY DS    F                   COUNT OF RECORDS PER CYLINDER
*  ------   Calculated values  -  below
BITRKREC DS    F                   RECORDS FROM TRACKS=
DETRKREC DS    PL8                 RECORDS FROM TRACKS, DECIMAL
BICYLREC DS    F                   RECORDS FROM CYLINDERS=
DECYLREC DS    PL8                 RECORDS FROM CYLINDERS, DECIMAL
*  ------   Calculated values  -  above
RC15     DS    C                   STORE RETURN CODE FROM WRITE
NEWID    DC    C'        '         STORE PARM USERID HERE
         DS    CL72                PADDING
ADDADR   DS    0CL12
UMSGCNT  DC    PL3'0'              COUNT OF MESSAGES FOR EACH USER
TMSGCNT  DC    PL5'0'              COUNT OF ALL MESSAGES DISPLAYED
NEXT     DS    F                   FOR IKJIFRIF ADD ADDRESS
OLDID    DC    C'        '         STORE OLD USERID HERE
LEVEL    DS    0CL7                LEVEL OF SYS1.BRODCAST
LEVELLIT DS    CL6                    LITERAL 'LEVEL'
LEVELLEV DS    CL1                       LEVEL NUMBER - CHAR FMT
RNAM     DC    X'000000'           FREE SEARCH RECORD RBA - STORED
MYUSSLOT DC    X'00'               STORE SLOT OF MY USERID IN RECORD
NWUSRBA  DC    X'000000'           STORE RBA OF NEW USERID FOR LATER
NWUSSLOT DC    X'00'               STORE SLOT OF NEW USERID IN RECORD
FNUSRBA  DC    X'000000'           RBA OF USERID TO BE FOUND
FNUSSLOT DC    X'00'               SLOT OF THIS USERID IN RECORD
USERID   DS    0CL8                STORE FOUND USERID HERE
USERIDI  DS    CL7                 STORE FOUND USERID HERE
USERIDF  DS    CL1                 8TH CHARACTER
FINDID   DS    0CL8                USERID NAME TO BE FOUND
FINDIDI  DS    CL7                 FIRST 7 CHARACTERS
FINDIDF  DS    CL1                 8TH CHARACTER
         DS    0F                  ALIGN ON FULLWORD
SAVEINF1 DS    CL8                 PLACE TO STORE CCHHR
LINEB    DS    C                   LINE-1
LINE     DS    CL137
LINET    EQU   LINE+7
INHDR    DS    CL130
         DS    XL2
INREC    DS    CL130
         DS    0F
WRTWR    WRITE MDLDECB,SF,MF=L
WRTWREND DS    0F
WRTWRLEN EQU   *-WRTWR
STOR0001 DS    2F
STOR1415 DS    2F
WK1TOTAL DC    C'                                                '
WK1ALL DC C'                                                          '
WK1NOUSR DC    C'                                              '
EOJFLAG  DS    X
NUMCFLG  DS    X
INVNFLG  DS    X
EOFWFLG  DS    X
JFCBFLG  DS    X
FLAG01   DS    X
*                                  X'01' - NOTIFY CODED
*                                  X'02' - USERIDS CODED
*                                  X'04' - MESSAGES CODED
*                                  X'08' - TRACKS CODED
*                                  X'10' - CYLINDERS CODED
*                                  X'20' - EXTRAUSERIDRECS CODED
*                                  X'40' - RECORDS CODED
*                                  X'80' - NOT YET USED
FLAG02   DS    X                   NOT YET USED
         DS    CL1
FLAGSYST DS    X
*                                  X'01' - BRODUMMY DD IS IN JCL
*                                  X'02' - SYSIN    DD IS IN JCL
OUTLINE  DS    CL133
         DS    CL9                 FILLER
         DS    0D
CVDWORK  DS    D
DECREPTR DS    PL8
DECREPCY DS    PL8
DECTRPCY DS    PL8
STORWRK1 DS    PL12
SAVE34   DS    2F
SAVE45   DS    2F
SAVER2   DS    F
SAVER3   DS    F
SAVER3A  DS    F
SAVER4A  DS    F
SAVER5   DS    F
SAVER6   DS    F
SAVER7   DS    F
SAVER9   DS    F
SAVER9A  DS    F
SAVER9B  DS    F
SAVER9C  DS    F
SAVER9D  DS    F
SAVER9E  DS    F
SAVER151 DS    3F
STORR4   DS    F
STORR5   DS    F
         DS    C
INSYSIN  DS    CL80
WRKSYSIN DS    CL80
DATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA
         IKJCPPL
         IKJUPT
         IKJPSCB
         IKJECT
         IKJIOPL
         IEZIOB   DSECT=YES
         CVT  DSECT=YES,LIST=YES
         END
