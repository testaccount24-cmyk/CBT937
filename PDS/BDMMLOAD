BDMMLOAD TITLE 'BDMMLOAD - LOAD USER MESSAGES IN BULK TO SYS1.BRODCAST'
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  Documentation:   This program is a batch program which bulk        *
*                   loads a file of userid messages into a BRODCAST   *
*                   Dataset.  The messages are checked against        *
*                   userids which are already in the BRODCAST         *
*                   dataset, before they are loaded.                  *
*                                                                     *
*       Copyright (C) 1995-2025 Sam Golob Systems Programming LLC     *
*                 All Rights Reserved                                 *
*                                                                     *
*       Batch Program - Execution JCL                                 *
*                                                                     *
*  //  JOB CARD                                                       *
*  //*-----------------------------------------------------*//        *
*  //*   BDMMLOAD EXECUTION - LOAD USER MESSAGES IN BULK   *//        *
*  //*-----------------------------------------------------*//        *
*  //BDMMLOAD EXEC PGM=BDMMLOAD                                       *
*  //STEPLIB  DD DISP=SHR,DSN=yourid.BRODMSTR.LOADLIB                 *
*  //BRODCAST DD DISP=SHR,DSN=your.brodcast.dataset                   *
*  //SYSPRINT DD SYSOUT=*                                             *
*  //BDMMDUMP DD DISP=SHR,                                            *
*  //            DSN=yourid.brodcast.msgdump                          *
*  //BDMMREAD DD DISP=(NEW,PASS,DELETE),                              *
*  //            DSN=yourid.msdump.MREAD,UNIT=SYSALLDA,               *
*  //            DCB=(DSORG=PS,RECFM=FB,BLKSIZE=12000,LRECL=12),      *
*  //            SPACE=(TRK,(5,5),RLSE)                               *
*  //BDMUIDWK DD DISP=(NEW,PASS,DELETE),                              *
*  //            DSN=yourid.msdump.UIDWK,UNIT=SYSALLDA,               *
*  //            DCB=(DSORG=PS,RECFM=FB,BLKSIZE=17000,LRECL=17),      *
*  //            SPACE=(TRK,(5,5),RLSE)                               *
*  //BDMFRMAP DD DISP=(NEW,PASS,DELETE),                              *
*  //            DSN=yourid.msdump.FRMAP,UNIT=SYSALLDA,               *
*  //            DCB=(DSORG=PS,RECFM=FB,BLKSIZE=7000,LRECL=7),        *
*  //            SPACE=(TRK,(5,5),RLSE)                               *
*  //SYSIN    DD DUMMY                                                *
*                                                                     *
*  Function:   To load userid messages from a BDMMDUMP format file    *
*              into a BRODCAST Dataset.                               *
*                                                                     *
*  Author:     Sam Golob               Version:   1.5.0A              *
*                                                                     *
*  Date:       Dec 27, 2006                                           *
*                                                                     *
*  Changes:    09/17/07 - Limit size of FRMAP when it is more than    *
*                  &EXTRNUM bigger than the maximum total number      *
*                  of messages to be loaded.  This is because you     *
*                  can waste I/O's when the output BRODCAST dataset   *
*                  has many free records, and you only need &EXTRNUM  *
*                  more of them, than the total number of messages    *
*                  in the BDMMDUMP dataset.                           *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    STM   15,1,HEXSAVE
         LA    1,&FROM
         LA    0,&LEN
         LA    15,&TO
         BAL   4,HEX
         LM    15,1,HEXSAVE
         MEND
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
*        Register Equates
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 1
SP000    EQU   0
         SPACE 1
         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV
         LCLC  &PGMNAME
         LCLA  &EXTRNUM
&EXTRNUM SETA  20
&VERSNUM SETC  ' 1.5.0A'
&PKGNAME SETC  'BRODMSTR'
&PKGTITL SETC  'Broadcast Master'
&VERTITL SETC  ' Version '
&COPYRGT SETC  'Copyright (c) 1995-2025 Sam Golob Systems Programming'
&COPYRSV SETC  ' LLC - All Rights Reserved  '
&PGMNAME SETC  'BDMMLOAD'
&PGMNAME AMODE 24
&PGMNAME RMODE 24
&PGMNAME CSECT
         B     BEGINN-*(,R15)       Branch over Eyecatchers
EXTRANUM DC    A(&EXTRNUM)
         DC    CL8'&PGMNAME'
         DC    C' '
         DC    C'&PKGTITL'
         DC    C'&VERTITL'
         DC    C'&VERSNUM'
         DC    C' '
         DC    C'&COPYRGT'
         DC    C'&COPYRSV'
         DC    CL16' &SYSDATE &SYSTIME '
         DC    CL6'HLASM '
         DC    C'&SYSVER'
         DC    C' '
BEGINN   DS    0H
         STM   R14,R12,12(R13)
         USING BDMMLOAD,R12,R11,R10,R8
         LR    R12,R15              Set up base registers
         LA    R11,4095(,R12)
         LA    R11,1(,R11)
         LA    R10,4095(,R11)
         LA    R10,1(,R10)
         LA    R8,4095(,R10)
         LA    R8,1(,R8)
         LR    R5,R1                Preserve PARM Pointer.
         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         USING DATAAREA,R13
         ST    R5,SAVEPRM           PARM Pointer to Data Area Field
         L     R1,SAVEPRM           Restore PARM Pointer
         BAL   R9,INITCON           Initialize Constants in Data Area
         SPACE 1
* ----------------------------------------------------------------- *    06223
TIOTSCAN DS    0H             Determine the presence of DD names in      06224
*                             the JCL:  BRODCAST, BDMMDUMP, SYSIN,       06225
*                                       BDMMREAD.                        06225
* ----->                      Then OPEN them if there is JCL for them.   06226
* ----->                      Then test the OPEN if it was good.         06226
* ----->                      Set DDNFLAG on if the appropriate DD       06226
* ----->                       was in the JCL.                           06226
* ----->                      Set BDMNOFLG on if the appropriate OPEN    06226
* ----->                       for the DD DIDN'T WORK!!!                 06226
* ----------------------------------------------------------------- *    06227
         MVI   DDNFLAG,X'00'        ZERO OUT DDNFLAG - Nothing OPEN
         ST    R3,SAVER3A           Save work registers
         ST    R5,SAVER5A
         L     R5,16                R5=CVT                               06228
         L     R5,0(,R5)            R5=TCB WORDS                         06229
         L     R5,4(,R5)            R5=MY TCB                            06230
         L     R5,12(,R5)           R5=TIOT                              06231
         LA    R5,24(,R5)           R5=FIRST DD ENTRY                    06232
TIOTLOOP CLC   0(4,R5),=XL4'00'     END OF TIOT?                         06233
         BE    TIOTSEND             Yes. Go on with OPENs.               06234
         CLC   4(8,R5),BRODCASN     BRODCAST DDNAME there?               06235
         BNE   TIOTPRTN             No                                   06236
         OI    DDNFLAG,X'01'        Show presence of BRODCAST DD         06237
         B     TIOTNEXT             Try next entry                       06238
TIOTPRTN CLC   4(8,R5),BDMMDUMN     BDMMDUMP DDNAME there?               06239
         BNE   TIOTSYSN             No                                   06240
         OI    DDNFLAG,X'02'        Show presence of BDMMDUMP DD         06241
         B     TIOTNEXT             Try next entry                       06242
TIOTSYSN CLC   4(8,R5),SYSINM       SYSIN DDNAME there?                  06239
         BNE   TIOTBDMR             No                                   06240
         OI    DDNFLAG,X'04'        Show presence of SYSIN  DD           06241
         B     TIOTNEXT             Try next entry                       06242
TIOTBDMR CLC   4(8,R5),BDMMREAN     BDMMREAD DDNAME there?               06239
         BNE   TIOTBDMU             No                                   06240
         OI    DDNFLAG,X'08'        Show presence of BDMMREAD DD         06241
         B     TIOTNEXT             Try next entry                       06242
TIOTBDMU CLC   4(8,R5),BDMUIDWN     BDMUIDWK DDNAME there?               06239
         BNE   TIOTFRMP             No                                   06240
         OI    DDNFLAG,X'10'        Show presence of BDMUIDWK DD         06241
         B     TIOTNEXT             Try next entry                       06242
TIOTFRMP CLC   4(8,R5),BDMFRMAN     BDMFRMAP DDNAME there?               06239
         BNE   TIOTSYSP             No                                   06240
         OI    DDNFLAG,X'20'        Show presence of BDMFRMAP DD         06241
         B     TIOTNEXT             Try next entry                       06242
TIOTSYSP CLC   4(8,R5),SYSPRINN     SYSPRINT DDNAME there?               06239
         BNE   TIOTNEXT             No                                   06240
         OI    DDNFLAG,X'40'        Show presence of SYSPRINT DD         06241
         B     TIOTNEXT             Try next entry                       06242
TIOTNEXT SR    R3,R3                                                     06243
         IC    R3,0(,R5)            R3=LENGTH OF DD ENTRY                06244
         AR    R5,R3                R5=NEXT DD ENTRY                     06245
         B     TIOTLOOP             GO CHECK IT                          06246
TIOTSEND DS    0H                                                        06247
         L     R3,SAVER3A           Restore work registers
         L     R5,SAVER5A
         B     CHEKSYSP             Jump over Constants
* ---- >     - - - - - - - - - - - -
BRODCASN DC    CL8'BRODCAST'        Literals for the DD names.
BDMMDUMN DC    CL8'BDMMDUMP'
BDMMREAN DC    CL8'BDMMREAD'
BDMUIDWN DC    CL8'BDMUIDWK'
BDMFRMAN DC    CL8'BDMFRMAP'
SYSINM   DC    CL8'SYSIN   '
SYSPRINN DC    CL8'SYSPRINT'
* ---- >     - - - - - - - - - - - -
* ---------------------------------------------------------------- *
*                                                                  *
*   OPEN FILES -                                                   *
*                                                                  *
*    When we're finished here, we should have a good idea about    *
*    how the DD names were coded in the JCL, and which files were  *
*    actually opened.  We use 2 flags:  DDNFLAG (if on) shows      *
*    that the DD name was actually coded in the JCL.  BDMNOFLG     *
*    (if on) shows that the actual file is NOT OPEN.  In either    *
*    flag:                                                         *
*                                                                  *
*    BRODCAST DD  -  flag = X'01'                                  *
*    BDMMDUMP DD  -  flag = X'02'                                  *
*    SYSIN    DD  -  flag = X'04'                                  *
*    BDMMREAD DD  -  flag = X'08'                                  *
*    BDMUIDWK DD  -  flag = X'10'                                  *
*    BDMFRMAP DD  -  flag = X'20'                                  *
*    SYSPRINT DD  -  flag = X'40'                                  *
*                                                                  *
* ---------------------------------------------------------------- *
CHEKSYSP DS    0H
         TM    DDNFLAG,X'40'        SYSPRINT there?
         BO    DOOPENS              Yes. Go OPEN it.
         WTO   'BDMML00I     ----------------------------  ',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMML10E     SYSPRINT DD Name is missing...',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMML00I     ----------------------------  ',ROUTCDE=11X
               ,DESC=7
         TM    DDNFLAG,X'02'        BDMMDUMP there?
         BO    TRYIFBRD
         WTO   'BDMML10E     BDMMDUMP DD Name is missing...',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMML00I     ----------------------------  ',ROUTCDE=11X
               ,DESC=7
TRYIFBRD DS    0H
         TM    DDNFLAG,X'01'        BRODCAST there?
         BO    TRYMREAD
         WTO   'BDMML10E     BRODCAST DD Name is missing...',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMML00I     ----------------------------  ',ROUTCDE=11X
               ,DESC=7
TRYMREAD DS    0H
         TM    DDNFLAG,X'08'        BDMMREAD there?
         BO    TRYUIDWK
         WTO   'BDMML10E     BDMMREAD DD Name is missing...',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMML00I     ----------------------------  ',ROUTCDE=11X
               ,DESC=7
TRYUIDWK DS    0H
         TM    DDNFLAG,X'10'        BDMUIDWK there?
         BO    TRYFRMAP
         WTO   'BDMML10E     BDMUIDWK DD Name is missing...',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMML00I     ----------------------------  ',ROUTCDE=11X
               ,DESC=7
TRYFRMAP DS    0H
         TM    DDNFLAG,X'20'        BDMFRMAP there?
         BO    NODELMSG
         WTO   'BDMML10E     BDMFRMAP DD Name is missing...',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMML00I     ----------------------------  ',ROUTCDE=11X
               ,DESC=7
NODELMSG DS    0H
         B     EOJ16                End right away.  Code 16.
DOOPENS  DS    0H                   OPEN SYSPRINT and print titles
         OPEN  (SYSPRINT,(OUTPUT))
         PUT   SYSPRINT,TITLINE
         PUT   SYSPRINT,CPYRLINE
         PUT   SYSPRINT,ULOTITLE
         PUT   SYSPRINT,BLNKLINE
         TM    DDNFLAG,X'38'        BDMMREAD or BDMUIDWK or BDMFRMAP?
         BNO   WMESS                Any missing?  Error messages.
         TM    DDNFLAG,X'01'        Is BRODCAST DD in JCL?
         BZ    NOBRODDD             No. Don't OPEN. Flag as Bad OPEN.
         OPEN  (BRODCAST,(UPDAT))
         TM    BRODCAST+48,X'10'    Did the OPEN work?
         BO    TRYOOPN1             Yes. Go OPEN the other files.
NOBRODDD DS    0H
         OI    BDMNOFLG,X'01'       Flag that BRODCAST DD is not OPEN
TRYOOPN1 DS    0H
         TM    DDNFLAG,X'02'        Is BDMMDUMP DD in JCL?
         BZ    NOUOUTDD             No. Don't OPEN. Flag as Bad OPEN.
         TM    DDNFLAG,X'01'        BROADCAST DATASET IN JCL?
         BZ    WMESS                No. Get out and do nothing.
         TM    BDMNOFLG,X'01'       BRODCAST Dataset not OPEN?
         BO    WMESS                If so, don't OPEN others.
         MVC   BDMMDUMP+X'21'(3),=AL3(COUNDEND) Change EODAD Address
         OPEN  (BDMMDUMP,(INPUT))
         TM    BDMMDUMP+48,X'10'    Did the OPEN work?
         BO    USOUTOPN             Yes. Don't flag that it didn't.
NOUOUTDD DS    0H
         OI    BDMNOFLG,X'02'       Flag that BDMMDUMP DD is not OPEN
         B     WMESS                Go to the next DD name.
USOUTOPN DS    0H                   Report on BDMMDUMP Characteristics
* ----------------------------------------------------------------- *
*   BDMMDUMP has to be OPEN here, because we branched if not OPEN.  *
* ----------------------------------------------------------------- *
         RDJFCB BDMMDUMP
         MVC   LINE,LINE-1
         MVC   LINET(20),=C'BDMMDUMP Properties '
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(20),=C'-------- ---------- '
         PUT   SYSPRINT,LINE
         BAL   R9,PRTJFCB
         MVC   LINE,LINE-1
         PUT   SYSPRINT,LINE
TRYOOPN2 DS    0H
         B     TRYOOPNO             If so, no UID report. But go on.
TRYOOPNO DS    0H
         TM    DDNFLAG,X'03'        BRODCAST and BDMMDUMP there?
         BO    TRYUSOUT             They are OPEN, so go on.
         B     WMESS                They are not OPEN - Error & Exit.
TRYUSOUT DS    0H
*
*
* ------------------------------------------------------------------ *
HREAD    DS    0H
         BAL   R9,HEADREAD          Read Header Record and extract
*                                   RBA of first UID record to search.
*                                   This value is stored in SAVERBA(3).
*                                   Might as well save everything.
CNDUMP   DS    0H
         BAL   R9,COUNDUMP
DISPBROD DS    0H
         RDJFCB BRODCAST
         MVC   LINE,LINE-1
         MVC   LINET(20),=C'BRODCAST Properties '
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(20),=C'-------- ---------- '
         PUT   SYSPRINT,LINE
         BAL   R9,PRTJFCB
         MVC   LINE,LINE-1
         PUT   SYSPRINT,LINE
CFREE    DS    0H
         BAL   R9,COUNTFRE
UIDWORK  DS    0H
         BAL   R9,GETUIDRS
         BAL   R9,UIDTABLE
         BAL   R9,PRELSCAN
         CLC   SCNTBIN,FREEBIN
         BH    NOROOM
         CLC   SCNTBIN,=F'0'
         BE    NOLOAD
         BAL   R9,LOADMSGS
         B     EOJ
* ------------------------------------------------------------------ *
* --  Normal End-of-job is just above here.                       -- *
* ------------------------------------------------------------------ *
NOROOM   DS    0H
         MVC   LINE,LINE-1
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(49),=C'Not enough free slots to hold eligible mess-
               ages. '
         MVC   LINET+49(21),=C' No messages loaded. '
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(23),=C'  Eligible messages :  '
         MVC   LINET+23(10),MASK10
         ED    LINET+23(10),SCNTCNT+3
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(23),=C'  Free message slots:  '
         MVC   LINET+23(10),MASK10
         ED    LINET+23(10),FREEREC+3
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(23),=C'     ---------------   '
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(23),=C'     Return Code = 8   '
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(23),=C'     ---------------   '
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         PUT   SYSPRINT,LINE
         B     EOJ8
* ------------------------------------------------------------------ *
NOLOAD   DS    0H
         MVC   LINE,LINE-1
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(30),=C'No eligible messages to load. '
         MVC   LINET+30(21),=C' No messages loaded. '
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(23),=C'  Eligible messages :  '
         MVC   LINET+23(10),MASK10
         ED    LINET+23(10),SCNTCNT+3
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(23),=C'  Free message slots:  '
         MVC   LINET+23(10),MASK10
         ED    LINET+23(10),FREEREC+3
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(23),=C'     ---------------   '
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(23),=C'     Return Code = 4   '
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(23),=C'     ---------------   '
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         PUT   SYSPRINT,LINE
         B     EOJ4
* ------------------------------------------------------------------ *
BADEND   DS    0H                         COME HERE IF ID KEY NOT X'01'
         MVC   LINE,LINE-1                 WRITE MESSAGE THAT
         MVC   LINET(L'MESPREND),MESPREND     THINGS ARE NOT
         PUT   SYSPRINT,LINE                     SO GOOD.
* ------------------------------------------------------------------ *
         SPACE 3
WMESS    DS    0H                           Crucial DD names missing.
         TM    DDNFLAG,X'3B'          BDMMREAD, BDMUIDWK, or BDMFRMAP?
*                                     Also BRODCAST and BDMMDUMP
         BNO   WMESS1                 Not all there? Report which one.
         MVC   LINE,LINE-1                  Clear Line
         MVC   LINEM(32),=C'Don''t know why I exited here....'
         PUT   SYSPRINT,LINE
         B     EOJ0
WMESS1   DS    0H                           Crucial DD names missing.
         TM    DDNFLAG,X'01'                Is BRODCAST DD there?
         BO    WMESS2                       Yes. Try BDMMDUMP next.
         MVC   LINE,LINE-1                  Clear Line
         MVC   LINEM(L'MESSAGE1),MESSAGE1   Write OPEN Error message
         PUT   SYSPRINT,LINE
WMESS2   DS    0H
         TM    DDNFLAG,X'02'                Is BDMMDUMP DD there?
         BO    WMESS3                       Yes. Try work file DD's.
         MVC   LINE,LINE-1                  Clear Line
         MVC   LINEM(L'MESSAGE2),MESSAGE2   Write OPEN Error message
         PUT   SYSPRINT,LINE
WMESS3   DS    0H
         TM    DDNFLAG,X'08'
         BO    TRYX10
         MVC   LINE,LINE-1                  Clear Line
         MVC   LINEM(L'MESSAGE3),MESSAGE3   No DD for BDMMREAD
         PUT   SYSPRINT,LINE
TRYX10   DS    0H
         TM    DDNFLAG,X'10'
         BO    TRYX20
         MVC   LINE,LINE-1                  Clear Line
         MVC   LINEM(L'MESSAGE4),MESSAGE4   No DD for BDMUIDWK
         PUT   SYSPRINT,LINE
TRYX20   DS    0H
         TM    DDNFLAG,X'20'
         BO    EXIT12
         MVC   LINE,LINE-1                  Clear Line
         MVC   LINEM(L'MESSAGE5),MESSAGE5   No DD for BDMFRMAP
         PUT   SYSPRINT,LINE
EXIT12   DS    0H                           Fall to here, RC=12.
         MVC   LINE,LINE-1
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINEM(47),=C'BDMML05E   ***  Please correct your JCL   *x
               **  '
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         PUT   SYSPRINT,LINE
         B     EOJ12                        Fall to here, RC=12.
EXIT16   B     EOJ16                        Fall to here, RC=16.
EOJ0     DS    0H                  BYE. CC = 0.
EOJ      DS    0H                  BYE. CC = 0.
         LA    R5,0                Set return code in R5 to load later.
         B     EOJOUT
EOJ4     DS    0H                  Set CC = 4.
         LA    R5,4                Set return code in R5 to load later.
         B     EOJOUT
EOJ8     DS    0H                  Set CC = 8.
         LA    R5,8                Set return code in R5 to load later.
         B     EOJOUT
EOJ12    DS    0H                  Set CC = 12.
         LA    R5,12               Set return code in R5 to load later.
         B     EOJOUT
EOJ16    DS    0H                  Set CC = 16.
         LA    R5,16               Set return code in R5 to load later.
         B     EOJOUT
EOJOUT   DS    0H
         CLOSE (BRODCAST)
EOJUSCLS DS    0H                  Close SYSPRINT after everything.
* - test - >
*        MVC   LINE,LINE-1
*        MVC   LINET+12(31),=C'Size of UIDWK Before FREEMAIN. '
*        HEX   LINET,4,UIDGTSIZ
*        PUT   SYSPRINT,LINE
* - test - >
         CLOSE (SYSPRINT)
*        L     R1,USIDTBLA         Load address if UIDTABLE.
*        L     R0,UIDGTSIZ
*        FREEMAIN RU,LV=(R0),A=(R1),SP=SP000
         LR    R1,R13              Restore address of GETMAINed area.
         L     R0,DATALEN
         FREEMAIN RU,LV=(R0),A=(R1),SP=SP000
         LR    R15,R5              Restore corrupted RC register
         L     R13,4(,R13)         Prepare return to the system.
         L     R14,12(,R13)        Restore R12
         ST    R15,16(,R13)        Put RC into passed savearea
         LM    R0,R12,20(R13)      Other registers
         BR    R14                 Back to system
         EJECT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* - -           S  U  B  R  O  U  T  I  N  E  S               - - *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEX      MVC   1(1,R15),0(R1)      MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         BR    R4                  RETURN TO CALLER
HEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        Initialize Data Areas that have been GETMAINed.          *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
INITCON  DS    0H
         MVI   LINE-1,C' '                INITIALIZE BLANKER
         MVI   LOADAIND,C'0'
         MVI   LOADMIND,C'0'
         MVC   LINE,LINE-1
         MVC   BDMFRRBA,=X'000000'
         MVC   BDMFRNXT,=X'000000'
         MVC   STRTAREA(6),BLANKS
         MVC   SCUSERID(7),BLANKS
         MVC   SAVEDUI(8),BLANKS
         MVC   USERID,BLANKS
         MVI   IDSTRTFL,X'00'             Initialize ID Start Flag
         MVI   KEYHOLD,X'00'              Initialize Key Holder
         MVC   RECHOLD(129),KEYHOLD       Fill with X'00'
         MVI   DHLKEY,X'00'               Same for Message Hold Area
         MVC   DHLREC(129),DHLKEY
         MVI   OUTLINE-1,X'40'            INITIALIZE BLANKER
         MVC   OUTLINE(133),OUTLINE-1     CLEAR LINE AREA
         MVC   PUTUIDRB(3),=X'000000'
         MVI   PUTUIDUS,X'00'
         XC    MSGQUANT,MSGQUANT
         XC    SCGQUANT,SCGQUANT
         XC    USERBIN,USERBIN
         XC    MSGLBIN,MSGLBIN
         XC    MSGTBIN,MSGTBIN
         ZAP   LIMITREC,=P'0'
         XC    LIMITBIN,LIMITBIN
         ZAP   SCNLCNT,=P'0'
         XC    SCNLBIN,SCNLBIN
         ZAP   SCNTCNT,=P'0'
         XC    SCNTBIN,SCNTBIN
         ZAP   MSGLCNT,=P'0'              INITIALIZE COUNTER
         ZAP   MSGTCNT,=P'0'              INITIALIZE COUNTER
         ZAP   TECOUNT,=P'0'              INITIALIZE COUNTER
         ZAP   USERCNT,=P'0'              INITIALIZE COUNTER
         ZAP   UIDDCNT,=P'0'              INITIALIZE COUNTER
         ZAP   SLOTCNT,=P'0'              INITIALIZE COUNTER
         MVI   MYUSSLOT,X'00'
         ZAP   FREEREC,=P'0'              INITIALIZE COUNTER
         ZAP   USRMSG,=P'0'               INITIALIZE COUNTER
         MVC   FREEBIN(4),=F'0'
         MVC   UIDDBIN(4),=F'0'
         MVC   UIDCBIN(4),=F'0'
         MVC   UIDTBIN(4),=F'0'
         MVC   UALLBIN(4),=F'0'
         MVI   CFFFLAG,X'00'
         MVI   BDMNOFLG,X'00'             MARK ALL FILES OPENABLE
         XC    DWORK,DWORK                CLEAR WORK AREA
         MVI   COUNDFLG,X'00'
         MVI   BDMMDFLG,X'00'
         MVI   FRLIMFLG,X'00'
         MVI   JFCB1,X'87'                INITIALIZE JFCB HEADER
         ZAP   UIDDMSG,=P'0'
         ZAP   UIDTMSG,=P'0'
         ZAP   UALLMSG,=P'0'
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        READ THE SYS1.BRODCAST HEADER RECORD AND COPY FIELDS.    *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEADREAD DS    0H
         ST    R9,SAVER9A
         READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOKZERO,MF=E       RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R3,MDLDECB+12       ADDRESS OF RECORD
         USING R1BC,R3             Addressability to Record 1 Mapping
         MVC   SAVERBA(3),R1USPTR  Save RBA 1st Userid Directory Record
         MVC   SAVUIDR(3),R1USPTR  SAVE RBA of First USER Dir Record
         MVC   HIGHVAL(4),R1RECNUM Save get out value
         MVC   SAVHDADR(4),R1RECNUM Save get out value
         MVC   NOTEDRBA(3),R1BCPTR  Save Notify Directory Address
         MVC   FRSRCRBA(3),R1FRESRH Save Free Search Record RBA
         MVC   INCORGEN(4),R1GENNUM Save Incore Notices Table Gen Numbr
         MVC   NUMNOTCS(2),R1BCMAX  Number of Notice message records
         DROP  R3
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         L     R9,SAVER9A
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
COUNTFRE DS    0H
         ST    R9,SAVER9B
*--------------------------------------------------------------------*
*        Read through all the BRODCAST Dataset records and count     *
*        used message slots and free message slots.  Since we are    *
*        reading through all the records anyway, when we come to     *
*        the Free Search Record, we pull the initial RBA setting     *
*        from it.                                                    *
*--------------------------------------------------------------------*
*    BLOCKNO has started with an RBA of X'000000' from the initial   *
*     READ of the BRODCAST Header record, and it gets incremented    *
*     by one, as we read through the entire BRODCAST Dataset.        *
*--------------------------------------------------------------------*
         SPACE
         TM    DDNFLAG,X'20'
         BZ    COUFEXIX
         OPEN  (BDMFRMAP,(OUTPUT))
         LA    R0,0                Zero out register
         ICM   R0,7,BLOCKNO        Load with block number information
COUFLOOP DS    0H
         ICM   R1,7,BLOCKNO        Get RBA processed previously.
         LA    R1,1(,R1)           Increment by one.
         STCM  R1,7,BLOCKNO        Store it back for the next READ.
         CLC   BLOCKNO(3),HIGHVAL+1  Did we reach max?
         BE    COUFEXIT            If we've read them all, exit.
         CLC   LIMITBIN,FREEBIN    Is number of free records > limit?
         BNH   COUFLIMT            Yes. Stop output in FRMAP.
         B     COUFNLIM            No. Keep building FRMAP.
COUFLIMT DS    0H
         OI    FRLIMFLG,X'01'      Flag that we are limiting FRMAP
         B     COUFEXIT            And stop creating FRMAP
COUFNLIM DS    0H
         SPACE
         READ  RECECB,             DECB TO USE IN MACRO EXPANSION      X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO             RBA TO HOLD THE KEY
         SPACE
         CHECK RECECB
         SPACE
         ST    R2,SAVER2C
         L     R2,RECECB+20        Address of Key
         MVC   KEYHOLD(1),0(R2)    Move the key data where we can see
         L     R2,SAVER2C
         L     R3,RECECB+12        Address of Data
         MVC   RECHOLD(129),0(R3)  Move the data where it is accessible
         CLI   KEYHOLD,X'FF'       Is this an unused message record?
         BE    COUNTFF             Yes. Count it.
         CLI   KEYHOLD,X'03'       Is this a used message record?
         BE    COUNT03             Yes. Count it.
         CLI   KEYHOLD,X'05'       Info from the Free Search record?
         BE    GETF05              Yes. Get it while we're here.
         B     FREEB
COUNTFF  DS    0H                  Got a Type X'FF'
         AP    FREEREC,=P'1'       Count it.
         L     R1,FREEBIN
         A     R1,=F'1'
         ST    R1,FREEBIN
         MVC   BDMFRKEY,KEYHOLD
         MVC   BDMFRRBA,BDMFRNXT
         MVC   BDMFRNXT,BLOCKNO
         TM    CFFFLAG,X'01'       First time thru?
         BZ    COUNTFFE            Yes. Don't PUT output.
         PUT   BDMFRMAP,BDMFRMRC   PUT output record.
COUNTFFE DS    0H
         OI    CFFFLAG,X'01'       Mark not first time.
         B     FREEB               Get the next record.
COUNT03  DS    0H                  Got a Type X'03'
         AP    USRMSG,=P'1'        Count it.
         B     FREEB               Get the next record.
GETF05   DS    0H                  Got the Type X'05'
         USING FREESRCH,R3
         MVC   FRSRCVAL(3),FSEARCH  Get Initial Free Search RBA.
         DROP  R3
         B     FREEB               Get the next record.
         SPACE
*--------------------------------------------------------------------*
FREEB    DS    0H                  Every READ needs a FREEDBUF.         009
         FREEDBUF RECECB,          DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         SPACE
         B     COUFLOOP            Read another BRODCAST record.
         SPACE
*--------------------------------------------------------------------*
COUFEXIT DS    0H
* ---- >>>>>
         MVC   LINE,LINE-1
         MVC   LINET(21),=C'BRODCAST Analysis    '
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(21),=C'-------- --------    '
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(33),=C'Free Message Records in BRODCAST:'
         MVC   LINET+34(10),MASK10
         ED    LINET+34(10),FREEREC+3
         TM    FRLIMFLG,X'01'
         BZ    COUFPFRE
         MVC   LINET+47(26),=C'Limited to Necessary Size '
COUFPFRE DS    0H
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(33),=C'User Messages Found  in BRODCAST:'
         MVC   LINET+34(10),MASK10
         ED    LINET+34(10),USRMSG+3
         PUT   SYSPRINT,LINE
         TM    DDNFLAG,X'20'
         BZ    COUFEXIX
         MVC   BDMFRKEY,KEYHOLD
         MVC   BDMFRRBA,BDMFRNXT
         MVC   BDMFRNXT,=X'000000'
         PUT   BDMFRMAP,BDMFRMRC
         CLOSE BDMFRMAP
         MVC   LINE,LINE-1
         MVC   LINET(37),=C'Free Message Mapping Table Loaded:-->'
         PUT   SYSPRINT,LINE
COUFEXIX DS    0H
         L     R9,SAVER9B
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
GETSYSIN DS    0H
SYSINEND DS    0H
         B     EOJ
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
COUNDUMP DS    0H
         ST    R9,SAVER9E
         TM    DDNFLAG,X'08'
         BZ    COUNTEND
         OPEN  (BDMMREAD,(OUTPUT))
         ZAP   UALLMSG,=P'0'
         ZAP   UIDDMSG,=P'0'
         ZAP   UIDTMSG,=P'0'
         MVC   BDMMRBIN,=F'0'
         MVC   SAVEDUI(8),BLANKS
COUNDLUP DS    0H
         GET   BDMMDUMP,DHL130
         CLC   =C'./--- ',DHL130
         BE    COUNDHUI
         B     COUNDMSG
COUNDHUI DS    0H                         Header found
         TM    COUNDFLG,X'01'
         BZ    COUNDPAS
         PUT   BDMMREAD,BDMMROUT
COUNDPAS DS    0H
         OI    COUNDFLG,X'01'
         AP    UIDDCNT,=P'1'              Count Userids Found
         L     R0,UIDCBIN
         A     R0,=F'1'
         ST    R0,UIDCBIN
         ZAP   UIDTMSG,UIDDMSG
         MVC   UIDTBIN(4),UIDDBIN
         ZAP   UIDDMSG,=P'0'
         MVC   UIDDBIN(4),=F'0'
         MVC   SAVEDUID(7),DHL130+6
         MVC   BDMMRUID(7),DHL130+6
         MVI   BDMMRUIF,X'40'
         B     COUNDLUP
COUNDMSG DS    0H
         CLI   DHL130,X'03'
         BNE   COUNDERR
         AP    UIDDMSG,=P'1'
         L     R1,UIDDBIN
         A     R1,=F'1'
         ST    R1,UIDDBIN
         AP    UALLMSG,=P'1'
         L     R0,UALLBIN
         A     R0,=F'1'
         ST    R0,UALLBIN
         MVC   BDMMRBIN,UIDDBIN
         B     COUNDLUP
COUNDERR DS    0H
         MVC   LINE,LINE-1
         MVC   LINE+2(130),DHL130
         PUT   SYSPRINT,LINE
         B     COUNTEND
COUNDEND DS    0H
         PUT   BDMMREAD,BDMMROUT
         OI    BDMMDFLG,X'01'
COUNTEND DS    0H
         MVC   LINE,LINE-1
         MVC   LINET(18),=C'BDMMDUMP Analysis '
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(18),=C'-------- -------- '
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(33),=C'Number  of Userids   in BDMMDUMP:'
         MVC   LINET+34(10),MASK10
         ED    LINET+34(10),UIDDCNT+3
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(33),=C'Total # of Messages  in BDMMDUMP:'
         MVC   LINET+34(10),MASK10
         ED    LINET+34(10),UALLMSG+3
         PUT   SYSPRINT,LINE
         ST    R3,SAVER3C
         XR    R3,R3
         L     R3,EXTRANUM
         A     R3,UALLBIN
         ST    R3,LIMITBIN
         CVD   R3,DWORK            Convert it to printable
         ZAP   LIMITREC,DWORK      Store away as packed number
         L     R3,SAVER3C
         MVC   LINE,LINE-1
         MVC   LINET(33),=C'Limit # of Free Recs in BDMFRMAP:'
         MVC   LINET+34(10),MASK10
         ED    LINET+34(10),LIMITREC+3
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         PUT   SYSPRINT,LINE
         CLOSE BDMMREAD
         CLOSE (BDMMDUMP,REREAD)
         L     R9,SAVER9E
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* ------------------------------------------------------------------ *
* ---    GET EACH USERID RECORD AND WRITE TO BDMUIDWK FILE       --- *
* ------------------------------------------------------------------ *
GETUIDRS DS    0H                  READ THROUGH USERID RECORDS
         ST    R9,SAVER9D
         TM    DDNFLAG,X'10'
         BZ    GETUIDRE
         MVC   BDMUIDWK+X'21'(3),=AL3(ENDUSER)  Change EODAD Address
         OPEN  (BDMUIDWK,(OUTPUT))
         MVC   GETUIDRC,GETUIDRC-1
GETUIDRL DS    0H                  READ THROUGH USERID RECORDS
         CLC   SAVERBA(3),ZEROS    ARE WE AT THE END OF USERID RECORDS
         BE    ENDUSER             NO USERID LIKE THIS. DEAL WITH IT.
         ZAP   SLOTCNT,=P'0'       NEW SLOT COUNT FOR NEW READ
         MVI   MYUSSLOT,X'00'
         LA    R2,9                COUNT OF USERS PER RECORD
         MVC   BLOCKNO,SAVERBA     GET RBA FOR READ
         READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R3,MDLDECB+12       ADDRESS OF RECORD
         USING USDIR,R3
         MVC   LASTRBA(3),SAVERBA  SAVE CURRENT RBA
         MVC   UIDPRBA(3),SAVERBA  SAVE CURRENT RBA FOR UID REPORT
         MVC   SAVERBA(3),USDNEXT  GET NEXT RECORD'S RBA
         ST    R5,SAVER5B
         LA    R5,0                INITIALIZE USERID SLOT COUNTER
GETULOOP DS    0H
         AP    SLOTCNT,=P'1'       COUNT WHICH SLOT THIS IS
         ST    R1,SAVER1B          \
         XR    R1,R1                \
         IC    R1,MYUSSLOT           \
         LA    R1,1(,R1)           Same in Binary
         STC   R1,MYUSSLOT           /
         L     R1,SAVER1B           /
         MVC   USERID(8),BLANKS    ENSURE BLANK IN 8TH PLACE
         MVC   USERIDI(7),USDID    COPY WHO THIS IS
         CLC   USERIDI(7),ZEROS    IS THIS A REAL USER?
         BE    GETUTRYN            NOPE. JUST GO TO NEXT ENTRY
         MVC   GETUIDRU(7),BLANKS
         MVC   GETUIDRR(6),=X'000000000000'
         MVC   GETUIDRU(7),USDID
         MVC   GETUIDRR(3),USDRBA
         MVC   GETUIDRN(3),USDEND
         MVC   GETUIDRB(3),LASTRBA
         MVC   GETUIDUS(1),MYUSSLOT
         TM    DDNFLAG,X'10'       Is BDMUIDWK there?
         BZ    GETUNUWK            Yes. Can't PUT anything to it.
         PUT   BDMUIDWK,GETUIDRC   PUT OUT THIS ID TO OUTPUT FILE
GETUNUWK DS    0H
         L     R1,USERBIN
         A     R1,=F'1'
         ST    R1,USERBIN
         AP    USERCNT,=P'1'       INCREMENT USER COUNTER      SG 05/99
*
GETUTRYN LA    R3,13(,R3)          BUMP LOCATION TO NEXT USERID
         LA    R5,1(,R5)           BUMP COUNTER WITHIN RECORD
         BCT   R2,GETULOOP         TRY FOR ANOTHER USER ENTRY
*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         B     GETUIDRL            END OF RECORD? GET ANOTHER.
GETUCONS DS    0H
         DC    X'00'
GETUIDRC DS    0XL17
GETUIDRU DC    CL7' '
GETUIDRR DC    XL3'00'
GETUIDRN DC    XL3'00'
GETUIDRB DC    XL3'00'
GETUIDUS DC    XL1'00'
GETUIDRE DS    0H
         L     R5,SAVER5B
         B     GETUIDRX
*        *--------------------------------*
*        *  GET HERE AT END OF USER RCDS  *
*        *--------------------------------*
* -- >      Put out the Summary Report line....
*
ENDUSER  DS    0H
         MVC   WK1ALL,USRALL                      WITH THE TOTAL COUNT
         MVC   WK1ALL+34(10),MASK10               AND ENDING MESSAGE
         ED    WK1ALL+34(10),USERCNT+3
         MVC   LINET(L'WK1ALL),WK1ALL
         PUT   SYSPRINT,LINE                THEN
         MVC   LINE,LINE-1                   YES. WE TOTAL 'EM ALL.
         PUT   SYSPRINT,LINE                   LINES AT THE END
         CLOSE (BDMUIDWK,REREAD)
ENDUEOJ  B     GETUIDRX                     Now get the heck out.
GETUIDRX DS    0H
         L     R9,SAVER9D
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* ------------ >  Do a run through BDMUIDWK File - below
* ------------------------------------------------------------------- *
UIDTABLE DS    0H                  Run through the BDMUIDWK file
*                                   to create a GETMAINed table that
*                                   can be searched repeatedly.
* ------------------------------------------------------------------- *
         ST    R9,SAVER9F
         TM    DDNFLAG,X'10'       Is BDMUIDWK there?
         BZ    UIDTABLN            No. Don't OPEN.
         MVC   BDMUIDWK+X'21'(3),=AL3(ENUIDTBL) Change EODAD Address
         OPEN  (BDMUIDWK,(INPUT))
         TM    BDMUIDWK+48,X'10'   Is OPEN OK this time?
         BNO   UIDTABNO            No. Say so.
UIDTSTRT DS    0H                  Start setting up for table load.
         ZAP   TECOUNT,=P'0'       Zero Table Entry count.
         STM   R4,R5,SAVRG45       Save work registers
         XR    R4,R4               Zero R4
         XR    R5,R5               Zero R5
         L     R5,USERBIN          Insert number of Userids defined
         M     R4,=F'17'           Multiply by 5 bytes per entry
         A     R5,=F'68'           Add 68 for UIHDR, UITLR, two extra.
         LR    R0,R5               Dump this quantity into R0
         ST    R0,UIDGTSIZ         Store quantity of bytes in table
* - test - >
*        MVC   LINE,LINE-1
*        MVC   LINET+12(31),=C'Size of UIDWK After  GETMAIN.  '
*        HEX   LINET,4,UIDGTSIZ
*        PUT   SYSPRINT,LINE
* - test - >
         LM    R4,R5,SAVRG45       Restore work registers
         L     R0,UIDGTSIZ         Load it back into R0 for GETMAIN
         GETMAIN RU,LV=(0),LOC=BELOW,SP=SP000
         ST    R1,USIDTBLA         Save address of GETMAINed storage
         L     R3,USIDTBLA         Get it back for us to use now.
         MVC   0(17,R3),=CL17'UIDHEADER'   Put in the table header
         LA    R3,17(,R3)          Bump past header.
         ST    R3,CUUIDTBL         Save address of start of real data.
         L     R3,CUUIDTBL         Load it back so we can use it.
         ST    R2,SAVER2A          Work Register
         L     R2,USERBIN          Load for BCT loop
MKUIDTBL DS    0H
         GET   BDMUIDWK,PUTUIDRC   Read a UIDWK file record
         MVC   0(17,R3),PUTUIDRC   Move it to the table
         LA    R3,17(,R3)          Bump to next table entry slot
         AP    TECOUNT,=P'1'       Count how many entries
         BCT   R2,MKUIDTBL         Loop for number of userids only
ENUIDTBL DS    0H
         MVC   0(17,R3),=CL17'UIDTRAILER' End GETMAINed table w/trailer
         L     R2,SAVER2A
         CLOSE BDMUIDWK
         SPACE
         B     UIDTABLX            Report how many entries were loaded
         LTORG
UIDTABLX DS    0H                  Report of table load.
         MVC   LINE,LINE-1
         MVC   LINET(37),=C'Userid Table Entries Loaded - Count: '
         MVC   LINET+34(10),MASK10
*        HEX   LINET+54,8,TECOUNT
         ED    LINET+34(10),TECOUNT+3
         MVC   LINET+30(6),=C'Count:'
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         PUT   SYSPRINT,LINE
         B     UIDTABLN
UIDTABNO DS    0H
         MVC   LINET(27),=C'BDMUIDWK not OPEN for INPUT'
         PUT   SYSPRINT,LINE
UIDTABLN DS    0H                  Exit this routine.
         L     R9,SAVER9F
         BR    R9
* ------------ >  Do a run through BDMUIDWK File - above
* ------------------------------------------------------------------ *
PRELSCAN DS    0H
         ST    R9,SAVER9L                 Save BAL Register
         ST    R7,SAVER7C
         L     R7,UIDCBIN                 Load BCT Register
PRELSMSG DS    0H
         MVC   LINE,LINE-1
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(25),=C'Preliminary Userid Scan  '
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(25),=C'----------- ------ ----  '
         PUT   SYSPRINT,LINE
PRELSOPN DS    0H
         MVC   BDMMREAD+X'21'(3),=AL3(PRELSRPT) Change EODAD Address
         OPEN  (BDMMREAD,(INPUT))
         XC    SCNTBIN,SCNTBIN
         ZAP   SCNTCNT,=P'0'
         XC    SCNLBIN,SCNLBIN
         ZAP   SCNLCNT,=P'0'
PRELSSUI DS    0H                        READ a record in MREAD
         GET   BDMMREAD,SCNMROUT
         MVC   SCUSERID(7),SCNMRUID      Save its Userid for Scan
         L     R2,SCNMRBIN               Number of Messages in this ID
         ST    R2,SCGQUANT               Store that number temporarily
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  We will now decide if this quantity of messages is eligible to be  *
*  loaded in this run.  The quantity is ineligible if:                *
*     1. There is no userid in BRODCAST corresponding to this userid. *
*     2. This userid in BRODCAST already contains messages.           *
*  To determine that, we run a scan through the UIDTABLE which is in  *
*  storage, that was created by the UIDTABLE routine.                 *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
PRELMSTR DS    0H                         Scan this Userid
         XC    SCNLBIN,SCNLBIN
         ZAP   SCNLCNT,=P'0'
         ST    R6,SAVER6A                 Save Work Register
         L     R6,USIDTBLA                Point to Userid Record Table
         CLC   0(17,R6),=CL17'UIDHEADER'  Was it loaded?
         BNE   SCANME01                   No. Error.
         B     SCANM1GO
SCANME01 DS    0H
         MVI   SCANMIND,C'1'              Diagnostic
         B     SCANMERR
SCANM1GO DS    0H
         LA    R6,17(,R6)                 Point to real data
SCANUCHK DS    0H                         Check userid against table.
         CLC   0(17,R6),=CL17'UIDTRAILER'
         BE    SCANME02
         B     SCANM2GO
SCANME02 DS    0H
         MVC   LINE,LINE-1
         MVC   LINET(7),=C'Userid '
         MVC   LINET+7(7),SCNMRUID
         MVC   LINET+15(39),=C' not to be loaded. Not in BRODCAST.    '
         PUT   SYSPRINT,LINE
         BCT   R7,PRELSSUI               GET another Userid and repeat
         B     PRELSRPT
SCANM2GO DS    0H
         CLC   SCNMRUID(7),0(R6)          Userid matches?
         BE    SCANUMAT
SCANUTRY DS    0H                         Try next userid table entry.
         LA    R6,17(,R6)                 Bump.
         B     SCANUCHK                   Loop back for match.
SCANUMAT DS    0H                         Userid match was found
         CLC   7(6,R6),=X'000000000000'
         BNE   SCANUNMP
SCANULOD DS    0H                         Userid match was found
         MVC   SCNLBIN,SCNMRBIN
         ST    R5,SAVER5C          Save work register
         L     R5,SCNLBIN          Get number for printout
         CVD   R5,DWORK            Convert it to printable
         ZAP   SCNLCNT,DWORK       Store away as packed number
         MVC   LINE,LINE-1
         MVC   LINET(19),=C'Userid         has '
         MVC   LINET+7(7),SCNMRUID
         MVC   LINET+19(10),MASK10
         ED    LINET+19(10),DWORK+3       Make it pretty
         MVC   LINET+30(18),=C'eligible messages.'
         PUT   SYSPRINT,LINE
         L     R1,SCNTBIN                 Previous total msgs eligible
         A     R1,SCNMRBIN                Add current to total
         ST    R1,SCNTBIN                 Store sum away
         L     R5,SCNTBIN          Get number
         CVD   R5,DWORK            Convert it to printable
         ZAP   SCNTCNT,DWORK       Store total away as packed number
         L     R5,SAVER5C          Restore work register
         BCT   R7,PRELSSUI               GET another Userid and repeat
         B     PRELSRPT
SCANUNMP DS    0H                         Message if can't load.
         MVC   LINE,LINE-1
         MVC   LINET(36),=C'Userid         already has messages. '
         MVC   LINET+7(7),SCNMRUID
         MVC   LINET+37(30),=C'No messages eligible for load.'
         PUT   SYSPRINT,LINE
         BCT   R7,PRELSSUI               GET another Userid and repeat
         B     PRELSRPT
* ---- >
PRELSUID DS    0H                         Protection from branch.
         B     PRELSRPT
SCANMERR DS    0H
         MVC   LINE,LINE-1
         MVC   LINET(19),=C'I got to SCANMERR. '
         MVC   LINET+22(1),SCANMIND
         PUT   SYSPRINT,LINE
         B     PRELSCND
SCANMIND DC    C' '
         DS    0H
PRELSRPT DS    0H
         L     R6,SAVER6A                 Restore UIDTABLE Register
         L     R7,SAVER7C                 Restore BCT Register
         MVC   LINE,LINE-1
         MVC   LINET(37),=C'Number of messages eligible to load: '
         MVC   LINET+37(10),MASK10
         ED    LINET+37(10),SCNTCNT+3
         PUT   SYSPRINT,LINE
PRELSCND DS    0H
         CLOSE BDMMREAD
         FREEPOOL BDMMREAD
         L     R9,SAVER9L                 Restore BAL Register
         BR    R9
* ------------------------------------------------------------------ *
LOADMSGS DS    0H
         ST    R9,SAVER9G                 Save BAL Register
         MVC   BDMMREAD+X'21'(3),=AL3(MREADEND) Change EODAD Address
         MVC   BDMMDUMP+X'21'(3),=AL3(MREADEND) Change EODAD Address
         OPEN  (BDMMREAD,(INPUT))
         OPEN  (BDMMDUMP,(INPUT))
         OPEN  (BDMFRMAP,(UPDAT))
LOADINGM DS    0H
         MVC   LINE,LINE-1
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(20),=C'Loading Userids Now '
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(20),=C'------- ------- --- '
         PUT   SYSPRINT,LINE
LOADMSTR DS    0H                         Start next Userid
         XC    MSGLBIN,MSGLBIN
         ZAP   MSGLCNT,=P'0'
         ST    R6,SAVER6A                 Save Work Register
         L     R6,USIDTBLA                Point to Userid Record Table
         CLC   0(17,R6),=CL17'UIDHEADER'  Was it loaded?
         BNE   LOADME01                   No. Error.
         B     LOADM1GO
LOADME01 DS    0H
         MVI   LOADMIND,C'1'              Diagnostic
         B     LOADMERR
LOADM1GO DS    0H
         LA    R6,17(,R6)                 Point to real data
LOADMINI DS    0H                         Initialize Loops
         GET   BDMMREAD,WRKMROUT
         L     R2,WRKMRBIN                Number of Messages for ID
         ST    R2,MSGQUANT
LOADMDMP DS    0H                         Synchronize MREAD to MSGDUMP
         GET   BDMMDUMP,WRK130
         CLC   =C'./--- ',WRK130          Should be first msg header
         BNE   LOADME02                   No. Error.
         B     LOADM2GO
LOADME02 DS    0H
         MVI   LOADMIND,C'2'
         B     LOADMERR
LOADM2GO DS    0H
* - <>
         MVC   LINE,LINE-1
         MVC   LINET(8),=C'Userid :'
         MVC   LINET+10(7),WRKMRUID
*        MVC   LINET+20(7),WRK130+6
         PUT   SYSPRINT,LINE
* - <>
         CLC   WRK130+6(7),WRKMRUID       Do first userids match?
         BNE   LOADME03                   No. Error.
         B     LOADM3GO
LOADME03 DS    0H
         MVI   LOADMIND,C'3'
         B     LOADMERR
LOADM3GO DS    0H
LOADUCHK DS    0H                         Check userid against table.
         CLC   0(17,R6),=CL17'UIDTRAILER'
         BE    LOADME04
         B     LOADM4GO
LOADME04 DS    0H
         MVC   LINE,LINE-1
         MVC   LINET(7),=C'Userid '
         MVC   LINET+7(7),WRKMRUID
         MVC   LINET+15(39),=C' has no entry in the BRODCAST dataset. '
         PUT   SYSPRINT,LINE
* ---- >
LOADURLP DS    0H                         Resynchronize message dump
*                                          file to the next Userid.
         GET   BDMMDUMP,WRK130
         CLC   =C'./--- ',WRK130          At next id yet?
         BNE   LOADURLP                   No. Loop till you get there.
*                                         Resynchronize message summary
         GET   BDMMREAD,WRKMROUT
         L     R2,WRKMRBIN                Number of Messages for ID
         ST    R2,MSGQUANT                Save the quantity for BCT
         L     R6,USIDTBLA                Point to Userid Record Table
         CLC   0(17,R6),=CL17'UIDHEADER'  Was it loaded?
         BNE   LOADME01                   No. Error.
         LA    R6,17(,R6)                 Point to real data
         B     LOADM2GO                   Reinit this Userid.
* ---- >
LOADM4ER DS    0H
         MVI   LOADMIND,C'4'
         B     LOADMERR
LOADM4GO DS    0H
* - <>
*        MVC   LINE,LINE-1
*        MVC   LINET(7),0(R6)
*        HEX   LINET+10,10,7(R6)
*        PUT   SYSPRINT,LINE
* - <>
         MVC   PUTUIDRC(17),0(R6)
         MVC   SAVUIDRC(17),PUTUIDRC
* - <>
*        MVC   LINE,LINE-1
*        MVC   LINET(7),WRKMRUID
*        MVC   LINET+10(7),0(R6)
*        PUT   SYSPRINT,LINE
* - <>
         CLC   WRKMRUID(7),0(R6)          Userid matches?
         BE    LOADUMAT
LOADUTRY DS    0H                         Try next userid table entry.
         LA    R6,17(,R6)                 Bump.
         B     LOADUCHK                   Loop back for match.
LOADUMAT DS    0H                         Userid match was found
         CLC   7(6,R6),=X'000000000000'
         BNE   LOADUNMP
* - <>
*        MVC   LINE,LINE-1
*        MVC   LINET(7),SAVUIDRU
*        HEX   LINET+10,3,SAVUIDRB
*        HEX   LINET+20,1,SAVUIDUS
*        PUT   SYSPRINT,LINE
* - <>
LOADULOD DS    0H                         Userid match was found
         NI    IDSTRTFL,X'FF'-X'01'
         BAL   R9,LOADALLM                Load messages for this id.
         B     LOADMSTR                   Go initialize for next id.
LOADUNMP DS    0H                         Message if can't load.
         MVC   LINE,LINE-1
         MVC   LINET(36),=C'Userid         already has messages. '
         MVC   LINET+7(7),WRKMRUID
         MVC   LINET+37(30),=C'No additional messages loaded.'
         PUT   SYSPRINT,LINE
* ---- >
LOADUNLP DS    0H                         Resynchronize message dump
*                                          file to the next Userid.
         GET   BDMMDUMP,WRK130
         CLC   =C'./--- ',WRK130          At next id yet?
         BNE   LOADUNLP                   No. Loop till you get there.
*                                         Resynchronize message summary
         GET   BDMMREAD,WRKMROUT
         L     R2,WRKMRBIN                Number of Messages for ID
         ST    R2,MSGQUANT                Save the quantity for BCT
         B     LOADM2GO                   Continue with this Userid.
* ---- >
LOADUEND DS    0H
         B     LOADMSGE
LOADMBDE DS    0H
         MVI   LOADMIND,C'5'
LOADMERR DS    0H
*        CLOSE BDMMLOAD      TEST TEST TEST TEST TEST
         MVC   LINE,LINE-1
         MVC   LINET(19),=C'I got to LOADMERR. '
         MVC   LINET+22(1),LOADMIND
         PUT   SYSPRINT,LINE
         B     LOADMSGE
MREADEND DS    0H
         MVC   LINE,LINE-1
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(64),=C'   -------  -------- ---- ---- ------ ---- x
               --- -------- ------- '
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(64),=C'            Messages have been loaded into x
               the BRODCAST dataset.'
         MVC   LINET(10),MASK10
         ED    LINET(10),MSGTCNT+3
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(64),=C'   -------  -------- ---- ---- ------ ---- x
               --- -------- ------- '
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(23),=C'     ---------------   '
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(23),=C'     Return Code = 0   '
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINET(23),=C'     ---------------   '
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         PUT   SYSPRINT,LINE
LOADMSGE DS    0H
         CLOSE BDMMREAD
         CLOSE BDMMDUMP
         CLOSE BDMFRMAP
         L     R6,SAVER6A
         L     R9,SAVER9G
         BR    R9
* ------------------------------------------------------------------ *
LOADALLM DS    0H
         ST    R9,SAVER9H
         ST    R7,SAVER7A          Save previous R7 value
         L     R7,MSGQUANT         Load R7 as BAL Register
LOADALUP DS    0H
         GET   BDMMDUMP,WRK130
* --- >
*        MVC   LINE,LINE-1
*        MVC   LINE,WRK130
*        PUT   SYSPRINT,LINE
* --- >
         MVI   LOADAIND,C'1'       Diagnostic
         CLI   WRKKEY,X'03'
         BNE   LOADALER
LOADAFRC DS    0H
         ST    R4,SAVER4A
LOADAFRX DS    0H
         GET   BDMFRMAP            Next free record to write into.
         MVC   BDMFRMRC(7),0(R1)   TEST TEST TEST TEST TEST
         MVC   SAVFRMRC(7),BDMFRMRC  Save entire Free Space Record
         LR    R4,R1
         USING BDMFRMRC,R4
         CLI   BDMFRKEY,X'FF'
         BNE   LOADAFRX
         MVI   BDMFRKEY,X'88'        Show that this slot has been used
         PUTX  BDMFRMAP            Show this free record is now used.
         DROP  R4
         L     R4,SAVER4A
* --- >
*        ST    R1,SAVER1C
*        MVC   LINE,LINE-1
*        HEX   LINET,3,BDMFRRBA
*        HEX   LINET+10,3,BDMFRNXT
*        HEX   LINET+20,7,BDMFRMRC
*        HEX   LINET+40,7,SAVFRMRC
*        PUT   SYSPRINT,LINE
*        L     R1,SAVER1C
* --- >
         MVC   BLOCKNO(3),SAVFRRBA   Move its block number for READ.
         TM    IDSTRTFL,X'01'
         BO    NOTFRST1
         MVC   SVFSTRBA,SAVFRRBA
NOTFRST1 DS    0H
         OI    IDSTRTFL,X'01'
         READ  LOADECB,            DECB TO USE IN MACRO EXPANSION      X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO             RBA TO HOLD THE KEY
         SPACE
         CHECK LOADECB
         SPACE
         ST    R2,SAVER2B
         MVI   LOADAIND,C'2'
         L     R2,LOADECB+20       Address of Key
         MVC   KEYHOLD(1),0(R2)    Look at the key data
*        CLI   KEYHOLD,X'FF'       Is it a free record?
*        BNE   LOADALER            No. Error.
         MVI   0(R2),X'03'         Move new key in, from BDMMDUMP recd
         L     R3,LOADECB+12       Address of Data
         MVC   0(126,R3),WRKREC    Move the new message in.
         MVC   126(3,R3),SAVFRNXT  Move the RBA of next message in.
*        MVC   SVLSTRBA(3),SAVFRNXT    Last RBA for Userid Record
         MVC   SVUPDFRE(3),SAVFRNXT    Save for Free Search Rcd Update
* - >
         C     R7,=F'1'                Last WRITE now?
         BNE   LOADAAEN                No. Usual processing.
         MVC   126(3,R3),=X'000000'    Yes. Move zeros for next RBA.
         MVC   SVLSTRBA(3),SAVFRRBA    Current RBA for Userid Record
LOADAAEN DS    0H                      Go on with WRITE.
         ST    R3,LOADECB+12           Make sure update will take
* - >
         WRITE LOADECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO,MF=E        RBA OF THE RECORD
         SPACE
         CHECK LOADECB
LOADAMND FREEDBUF LOADECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         L     R2,SAVER2B
* --- >
*        ST    R1,SAVER1C
*        MVC   LINE,LINE-1
*        HEX   LINET,3,BDMFRRBA
*        HEX   LINET+10,3,BDMFRNXT
*        HEX   LINET+20,7,BDMFRMRC
*        HEX   LINET+40,7,SAVFRMRC
*        PUT   SYSPRINT,LINE
*        L     R1,SAVER1C
* --- >
* - >
         AP    MSGLCNT,=P'1'
         AP    MSGTCNT,=P'1'
         L     R0,MSGLBIN
         A     R0,=F'1'
         ST    R0,MSGLBIN
         L     R0,MSGTBIN
         A     R0,=F'1'
         ST    R0,MSGTBIN
* - >
         BCT   R7,LOADALUP
         L     R7,SAVER7A
* - >
         MVC   LINE,LINE-1
         MVC   LINET(39),=C'            Messages Loaded for Userid '
         MVC   LINET(10),MASK10
         ED    LINET(10),MSGLCNT+3
         MVC   LINET+39(7),WRKMRUID
         PUT   SYSPRINT,LINE
* - >
         BAL   R9,UPDUIDRC                Update Userid Record
         BAL   R9,UPDFRSRC                Update Free Search Record
         B     LOADALEN
LOADARWR DS    0H
LOADALER DS    0H
         MVC   LINE,LINE-1
         MVC   LINET(19),=C'I got to LOADALER. '
         MVC   LINET+22(1),LOADAIND
         PUT   SYSPRINT,LINE
         B     LOADALEN
LOADALEN DS    0H
         L     R9,SAVER9H
         BR    R9
* ------------------------------------------------------------------ *
UPDUIDRC DS    0H
         ST    R9,SAVER9I
UPDUFIND DS    0H                  GET USER SLOT GIVEN RBA AND SLOT #
         MVC   BLOCKNO(3),SAVUIDRB    RBA
         READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R2,MDLDECB+20       ADDRESS OF KEY
*        CLI   0(R2),X'01'         USERID RECORD?
*        BNE   BADEND
         LA    R2,0
         LA    R3,0
         IC    R3,SAVUIDUS            SLOT NUMBER
         BCTR  R3,0                   LESS ONE THE WAY WE CALCULATE IT
         M     R2,=F'13'
         L     R5,MDLDECB+12       ADDRESS OF RECORD
         LA    R2,0(R3,R5)         FIND OUR SLOT
         LR    R3,R2               PUT IN R3 TO SET UP RETRY
         USING USDENTRY,R3
         MVC   USDRBA(3),SVFSTRBA
         MVC   USDEND(3),SVLSTRBA
         DROP  R3
         WRITE MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
UPDUIDRE DS    0H
         L     R9,SAVER9I
         BR    R9
* ------------------------------------------------------------------ *
UPDFRSRC DS    0H
         ST    R9,SAVER9J
UPDFRSRD DS    0H                  GET USER SLOT GIVEN RBA AND SLOT #
         MVC   BLOCKNO(3),FRSRCRBA    RBA
         READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R2,MDLDECB+20       ADDRESS OF KEY
         CLI   0(R2),X'05'         FREE SEARCH RECORD?
         BNE   UPDFRSER
         L     R3,MDLDECB+12       ADDRESS OF RECORD
         USING FREESRCH,R3
         MVC   FSEARCH(3),SVUPDFRE
         DROP  R3
         WRITE MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         B     UPDFRSRE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
UPDFRSER DS    0H
         MVC   LINE,LINE-1
         MVC   LINET(38),=C'Free Search Record Update is in Error.'
         PUT   SYSPRINT,LINE
UPDFRSRE DS    0H
         L     R9,SAVER9J
         BR    R9
* ------------------------------------------------------------------ *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* -- BELOW ---------------  SUBROUTINE TO PRINT JFCB INFORMATION ---- *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
PRTJFCB  DS    0H                         Print JFCB info for BDMUSIN
         ST    R9,SAVER9K                 Save the BAL register
         MVC   OUTLINE,OUTLINE-1
         MVC   OUTLINE,MSGDSN       Move in message skeleton
         MVC   OUTLINE+19(44),JFCBDSNM    DSNAME
         PUT   SYSPRINT,OUTLINE
NOPRTU01 DS    0H
         MVC   OUTLINE,OUTLINE-1
         MVC   OUTLINE,MSGMBR
         MVC   OUTLINE+19(8),JFCBELNM     MEMBER NAME
         PUT   SYSPRINT,OUTLINE
NOPRTU02 DS    0H
         MVC   OUTLINE,OUTLINE-1
         MVC   OUTLINE,MSGVOLSR           VOLSER
         MVC   OUTLINE+19(6),JFCBVOLS
         MVC   OUTLINE+26(6),JFCBVOLS+6
         MVC   OUTLINE+33(6),JFCBVOLS+12
         MVC   OUTLINE+40(6),JFCBVOLS+18
         MVC   OUTLINE+47(6),JFCBVOLS+24
         PUT   SYSPRINT,OUTLINE
NOPRTU03 DS    0H
         MVC   OUTLINE,OUTLINE-1
         MVC   OUTLINE,MSGDSORG           DSORG
         MVC   OUTLINE+19(3),=C'IS '
         CLI   JFCDSRG1,JFCORGIS
         BE    PUTDSRG
         MVC   OUTLINE+19(3),=C'ISU'
         CLI   JFCDSRG1,JFCORGIS+JFCORGU
         BE    PUTDSRG
         MVC   OUTLINE+19(3),=C'PS '
         CLI   JFCDSRG1,JFCORGPS
         BE    PUTDSRG
         MVC   OUTLINE+19(3),=C'PSU'
         CLI   JFCDSRG1,JFCORGPS+JFCORGU
         BE    PUTDSRG
         MVC   OUTLINE+19(3),=C'DA '
         CLI   JFCDSRG1,JFCORGDA
         BE    PUTDSRG
         MVC   OUTLINE+19(3),=C'DAU'
         CLI   JFCDSRG1,JFCORGDA+JFCORGU
         BE    PUTDSRG
         MVC   OUTLINE+19(3),=C'PO '
         CLI   JFCDSRG1,JFCORGPO
         BE    PUTDSRG
         MVC   OUTLINE+19(3),=C'POU'
         CLI   JFCDSRG1,JFCORGPO+JFCORGU
         BE    PUTDSRG
         OI    FLAG1,X'01'                FLAG DSORG MISSING
         MVC   OUTLINE+19(15),=C'MISSING OR VSAM'
PUTDSRG  PUT   SYSPRINT,OUTLINE
RECFM    DS    0H
         MVC   OUTLINE,OUTLINE-1
         MVC   OUTLINE,MSGRECFM           RECFM
         LA    R4,OUTLINE+19
         TM    JFCRECFM,JFCUND
         BNO   NOTUND
         MVI   0(R4),C'U'
         OI    FLAG2,X'01'                FLAG RECFM=U
         A     R4,ONE
         B     CHKB
NOTUND   TM    JFCRECFM,JFCFIX
         BNO   NOTFIX
         MVI   0(R4),C'F'
         A     R4,ONE
NOTFIX   TM    JFCRECFM,JFCVAR
         BNO   CHKB
         MVI   0(R4),C'V'
         A     R4,ONE
CHKB     TM    JFCRECFM,JFCRFB
         BNO   NOTBLK
         MVI   0(R4),C'B'
         A     R4,ONE
NOTBLK   TM    JFCRECFM,JFCRFS
         BNO   NOTSCN
         MVI   0(R4),C'S'
         A     R4,ONE
NOTSCN   TM    JFCRECFM,JFCASA
         BNO   NOTASA
         MVI   0(R4),C'A'
         A     R4,ONE
NOTASA   TM    JFCRECFM,JFCMAC
         BNO   PUTRCFM
         MVI   0(R4),C'M'
PUTRCFM  PUT   SYSPRINT,OUTLINE
LRECL    DS    0H
         MVC   OUTLINE,OUTLINE-1          Clear line.
         MVC   OUTLINE,MSGLRECL           Put LRECL skeleton into it.
         SR    R4,R4                      Clear work register
         LH    R4,JFCLRECL                Load LRECL in from JFCB
         C     R4,=F'0'                   Is it zero?
         BNE   LRECPRT                    No. Don't check for RECFM=U.
         TM    FLAG2,X'01'                Is RECFM=U?
         BO    LRECPRT                    Yes-0 is legitimate.
         OI    FLAG1,X'04'
         MVC   OUTLINE+19(7),=C'MISSING'
         B     LRECPUT
LRECPRT  DS    0H
         CVD   R4,DECVALUE
         MVC   OUTLINE+19(10),MASK10      LRECL
         ED    OUTLINE+19(10),DECVALUE+3
LRECPUT  PUT   SYSPRINT,OUTLINE
BLKSIZE  MVC   OUTLINE,OUTLINE-1
         MVC   OUTLINE,MSGBLKSZ
         SR    R4,R4
         LH    R4,JFCBLKSI
         C     R4,=F'0'
         BNE   BLKSIZEG                   BLOCK SIZE IS GOOD
         OI    FLAG1,X'02'                FLAG BLKSIZE MISSING
         MVC   OUTLINE+19(15),=C'ZERO OR MISSING'
         B     BLKSZPUT
BLKSIZEG CVD   R4,DECVALUE
         MVC   OUTLINE+19(10),MASK10      BLKSIZE
         ED    OUTLINE+19(10),DECVALUE+3
BLKSZPUT PUT   SYSPRINT,OUTLINE
         L     R9,SAVER9K
         BR    R9
* -- ABOVE ---------------  SUBROUTINE TO PRINT JFCB INFORMATION ---- *
* ------------------------------------------------------------------ *
*-----------------------------------------------------------------*
*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*
*-----------------------------------------------------------------*
*--------------------------------------------------------------------*
TITLINE  DS    0CL133              Program Title on Report
         DC    C'1'
         DC    CL3' '
         DC    CL6'---'
         DC    CL79'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM   -X
               --'
         DC    CL46' '
         SPACE
*--------------------------------------------------------------------*
ULOTITLE DS    0CL133              Userid Diagnostics Report Title
         DC    C'0'
         DC    CL11' '
         DC    CL3'-  '
         DC    CL79'&PGMNAME Program  -  Message Bulk Loader Program  -X
                 '
         DC    CL41' '
*--------------------------------------------------------------------*
*--------------------------------------------------------------------*
         SPACE
CPYRLINE DS    0CL133              Copyright information for program
         DC    C'0'
         DC    CL3' '
* -->                              Currently 77 characters
         DC    C'&COPYRGT'
         DC    C'&COPYRSV'
* -->
         DC    CL48' '
         SPACE
*--------------------------------------------------------------------*
BLNKLINE DC    CL133' '            Blank Line sample
*-----------------------------------------------------------------*
FLAG1    DC    X'00'
*              X'01'               DSORG IS MISSING
FLAG2    DC    X'00'
ONE      DC    F'1'
DECVALUE DS    CL8
EDPAT    DC    X'402020206B2020206B202120'
PACKZERO DC    PL3'0'
PACKZER5 DC    PL5'0'
FULLZERO DC    F'0'
UIDGTSIZ DC    F'0'
* - - - - - - - - - - - - - - - - - - - - - - - - *
FF       EQU   X'FF'
F16      DC    F'16'
BLANKS   DC    C'        '         8 BLANKS
F00      DC    F'0'
BLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER
ZEROS    DS    0CL8
ZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING
         DC    X'0000'
MESSAGE1 DC    C'BDMML01E   ---  BRODCAST DD Name Missing  ---  '
MESSAGE2 DC    C'BDMML01E   ---  BDMMDUMP DD Name Missing  ---  '
MESSAGE3 DC    C'BDMML01E   ---  BDMMREAD DD Name Missing  ---  '
MESSAGE4 DC    C'BDMML01E   ---  BDMUIDWK DD Name Missing  ---  '
MESSAGE5 DC    C'BDMML01E   ---  BDMFRMAP DD Name Missing  ---  '
USRALL DC C'Total # of Userids   in BRODCAST:                         '
MESPREND DC    C'?????  Preliminary end of USERID Records - - *'
MSGDSN   DC    CL133'         DSNAME  ='
MSGVOLSR DC    CL133'         VOLSER  ='
MSGMBR   DC    CL133'         MEMBER  ='
MSGDSORG DC    CL133'         DSORG   ='
MSGBLKSZ DC    CL133'         BLKSIZE ='
MSGLRECL DC    CL133'         LRECL   ='
MSGRECFM DC    CL133'         RECFM   ='
         DC    CL133' '
MASK6    DC    XL6'402020202120'
MASK7A   DC    XL7'40202020212020'
MASK10   DC    XL10'40202020202020202120'
BLOCKNO  DC    X'000000'           STORE BLOCK NUMBER FOR READ
         DS    0F                  NEEDED FOR CORRECT EXLST
JFCB1    DC    X'87'
         DC    AL3(INFMJFCB)
         IEFJFCBN LIST=YES
         SPACE 3
BRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X
               BLKSIZE=129,        LENGTH OF FILES BLOCK               X
               DSORG=DA,           IS DIRECT ACCESS FILE               X
               MACRF=(RISXC,WIC),  3 BYTE RBA, DYNAMIC BUF, READ/CHECK X
               OPTCD=R,            3 BYTE RBA WILL BE USED             X
               RECFM=F,            FIXED LENGTH                        X
               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X
               KEYLEN=1,           SIZE OF KEY                         X
               BUFL=130,           KEYLEN + BLKSIZE                    X
               EXLST=JFCB1
         SPACE 3
SYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FA,LRECL=133,   X 05426
               BLKSIZE=133                                               05427
BDMMDUMP DCB   DSORG=PS,DDNAME=BDMMDUMP,MACRF=GM,                      X
               LRECL=130,RECFM=FB,EXLST=JFCB1
BDMMREAD DCB   DSORG=PS,DDNAME=BDMMREAD,MACRF=(GM,PM),                 X
               LRECL=12,RECFM=FB,EODAD=MREADEND
BDMUIDWK DCB   DSORG=PS,DDNAME=BDMUIDWK,MACRF=(GM,PM),                 X
               LRECL=17,RECFM=FB
BDMFRMAP DCB   DSORG=PS,DDNAME=BDMFRMAP,MACRF=(GL,PM),                 X
               LRECL=7,RECFM=FB
SYSIN    DCB   MACRF=GM,DDNAME=SYSIN,DSORG=PS,RECFM=FB,LRECL=80,       X
               EODAD=SYSINEND
         LTORG
         SPACE
         DS    0F
         SPACE 3
*-----------------------------------------------------------------*
*----         GETMAINED DATA AREA FIELDS                      ----*
*-----------------------------------------------------------------*
DATAAREA DSECT
SAVE     DS    9D
DWORK    DC    D'0'
USERBIN  DC    F'0'
USERCNT  DC    PL8'0'              COUNT OF ALL MESSAGES DISPLAYED
SLOTCNT  DC    PL8'0'              COUNT OF SLOT NUMBER IN UID RECORD
FREEREC  DC    PL8'0'              CT FOR INACTIVE MAIL MSG RECS
FREEBIN  DC    F'0'
LIMITREC DC    PL8'0'              LIMIT SIZE OF FREE RECORD MAP FILE
LIMITBIN DC    F'0'
USRMSG   DC    PL8'0'              CT FOR USER MAIL MSG RECS
UIDDMSG  DC    PL8'0'
UIDDBIN  DC    F'0'
UIDTMSG  DC    PL8'0'
UIDTBIN  DC    F'0'
UALLMSG  DC    PL8'0'
UALLBIN  DC    F'0'
UIDDCNT  DC    PL8'0'
UIDCBIN  DC    F'0'
LASTRBA  DC    X'000000'           STORE CURRENT RBA
UIDPRB   DS    0F
UIDPRBAX DC    X'00'
UIDPRBA  DC    X'000000'           STORE CURRENT RBA FOR DIAG PRINT
SAVERBA  DC    X'000000'           STORE RBA FOR LATER READ
SAVUIDR  DC    X'000000'           STORE RBA FOR LATER READ
MYUSSLOT DC    X'00'               STORE SLOT OF MY USERID IN RECORD
USERID   DS    0CL8                STORE FOUND USERID HERE
USERIDI  DS    CL7                 STORE FOUND USERID HERE
USERIDE  DS    C
         DS    0F                  ALIGN ON FULLWORD
SAVER1A  DS    F                   WORK REGISTER
SAVER1B  DS    F                   WORK REGISTER
SAVER1C  DS    F                   WORK REGISTER
SAVER2A  DS    F                   WORK REGISTER
SAVER2B  DS    F                   WORK REGISTER
SAVER2C  DS    F                   WORK REGISTER
SAVER3A  DS    F                   WORK REGS FOR TIOT SCAN
SAVER3B  DS    F                   WORK REGS FOR TIOT SCAN
SAVER3C  DS    F                   WORK REGS FOR LIMIT FRNUM
SAVER4A  DS    F                   WORK REG
SAVER5A  DS    F                   WORK REGISTER
SAVER5B  DS    F                   WORK REGISTER
SAVER5C  DS    F                   WORK REGISTER
SAVER6A  DS    F                   BAL REGISTER SAVE AREA
SAVER6B  DS    F                   BAL REGISTER SAVE AREA
SAVER7A  DS    F                   WORK REGISTER
SAVER7B  DS    F                   WORK REGISTER
SAVER7C  DS    F                   WORK REGISTER
SAVEPRM  DS    F                   TEMP SAVE FOR PARM POINTER
SAVER9A  DS    F                   BAL REGISTER SAVE AREA
SAVER9B  DS    F                   BAL REGISTER SAVE AREA
SAVER9C  DS    F                   BAL REGISTER SAVE AREA
SAVER9D  DS    F                   BAL REGISTER SAVE AREA
SAVER9E  DS    F                   BAL REGISTER SAVE AREA
SAVER9F  DS    F                   BAL REGISTER SAVE AREA
SAVER9G  DS    F                   BAL REGISTER SAVE AREA
SAVER9H  DS    F                   BAL REGISTER SAVE AREA
SAVER9I  DS    F                   BAL REGISTER SAVE AREA
SAVER9J  DS    F                   BAL REGISTER SAVE AREA
SAVER9K  DS    F                   BAL REGISTER SAVE AREA
SAVER9L  DS    F                   BAL REGISTER SAVE AREA
SAVER9M  DS    F                   BAL REGISTER SAVE AREA
SAVRG45  DS    2F
HEXSAVE  DS    3F                  SAVE FOR HEX MACRO
* ------------------------------- *
* --  Save Header Information  -- *
* ------------------------------- *
CURNOTBL DS    F       Address of beginning of data in Note dir table
HIGHVAL  DS    F
SAVHDADR DS    F                   SAVE HEADER ADDRESS
INCORGEN DS    F
CUUIDTBL DS    F
NUMNOTCS DS    H
NOTEDRBA DS    XL3
FRSRCRBA DS    XL3
FRSRCVAL DS    XL3
* ------------------------- *
LINEB    DS    C                   LINE-1
LINE     DS    CL133
LINET    EQU   LINE+7
LINEM    EQU   LINE+1
OUTLINEB DS    C                   OUTLINE-1
OUTLINE  DS    CL133
         DS    0F
RDWR     READ  MDLDECB,DI,MF=L
RDWREND  DS    0F
RDWRLEN  EQU   *-RDWR
WK1ALL DC C'                                                          '
BDMNOFLG DS    X
*        EQU   X'01'               BRODCAST DD MISSING
*        EQU   X'02'               BDMUSIN  DD MISSING
*        EQU   X'04'               UIDDIAG  DD MISSING
         SPACE 1
* ------------------------- *
FRLIMFLG DS    X
* ------------------------- *
DDNFLAG  DS    X
IDSTRTFL DS    X
         DS    C
* ------------------------- *
USIDTBLA DS    F                   Address of GETMAINED Userid Table
* ------------------------- *
REC130   DS    0CL130              Dump Record made with Key+Data
KEYHOLD  DS    XL1                 Key slot
RECHOLD  DS    XL129               Data slot
* ------------------------- *
DHL130   DS    0CL130
DHLKEY   DS    XL1
DHLREC   DS    XL129
* ------------------------- *
SAVEDUI  DS    0CL8
SAVEDUID DS    CL7
SAVEDUIB DS    CL1
STRTAREA DS    CL6
* ------------------------- *
BDMMROUT DS    0CL12
BDMMRUID DS    CL7
BDMMRUIF DS    CL1
BDMMRBIN DS    XL4
* ------------------------- *
BDMFRMRC DS    0CL7
BDMFRKEY DS    X
BDMFRRBA DS    XL3
BDMFRNXT DS    XL3
* ------------------------- *
         DS    2F             PADDING
* ------------------------- *
SAVFRMRC DS    0CL7
SAVFRKEY DS    X
SAVFRRBA DS    XL3
SAVFRNXT DS    XL3
* ------------------------- *
         DS    0F
WRKMROUT DS    0CL12
WRKMRUID DS    CL7
WRKMRUIF DS    CL1
WRKMRBIN DS    XL4
* ------------------------- *
         DS    2F             PADDING
* ------------------------- *
         DS    0F
SCNMROUT DS    0CL12
SCNMRUID DS    CL7
SCNMRUIF DS    CL1
SCNMRBIN DS    XL4
* ------------------------- *
         DS    2F             PADDING
* ------------------------- *
WRK130   DS    0CL130
WRKKEY   DS    XL1
WRKREC   DS    XL129
* ------------------------- *
COUNDFLG DS    X
BDMMDFLG DS    X
CFFFLAG  DS    X
LOADMIND DS    X
LOADAIND DS    X
MSGQUANT DS    F
SCGQUANT DS    F
TECOUNT  DS    PL8
SCUSERID DS    CL7
* ------------------------- *
PUTUIDRC DS    0XL17
PUTUIDRU DC    CL7' '
PUTUIDRR DC    XL3'00'
PUTUIDRN DC    XL3'00'
PUTUIDRB DC    XL3'00'
PUTUIDUS DC    XL1'00'
* ------------------------- *
SAVUIDRC DS    0XL17
SAVUIDRU DC    CL7' '
SAVUIDRR DC    XL3'00'
SAVUIDRN DC    XL3'00'
SAVUIDRB DC    XL3'00'
SAVUIDUS DC    XL1'00'
* ------------------------- *
SVFSTRBA DC    XL3'00'
SVLSTRBA DC    XL3'00'
SVUPDFRE DC    XL3'00'
* ------------------------- *
MSGLCNT  DC    PL8'0'
MSGLBIN  DC    F'0'
MSGTCNT  DC    PL8'0'
MSGTBIN  DC    F'0'
* ------------------------- *
SCNLCNT  DC    PL8'0'
SCNLBIN  DC    F'0'
SCNTCNT  DC    PL8'0'
SCNTBIN  DC    F'0'
* ------------------------- *
DATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA
         IEZBITS
         IKJZT301 DSECT=YES
         IKJZT302 DSECT=YES
         IKJZT303 DSECT=YES
         IKJZT304 DSECT=YES
         IKJZT305 DSECT=YES
         IKJZT306 DSECT=YES
         CVT  DSECT=YES,LIST=YES
         END
