BDMSCAN  TITLE 'ANALYZE SYS1.BRODCAST DATASET'
*------------------------------------------------------------------*
*
*          B D M S C A N   ( Scan BROADCAST )   Version  1.5.0A
*
*
*       Copyright (C) 1995-2025 Sam Golob Systems Programming LLC
*                 All Rights Reserved
*
*
*        This program analyzes the TSO Broadcast dataset.  It
*        displays the number of available blocks and how they
*        are used.  It also displays the TSO users who have
*        messages waiting.  In addition it also does a validity
*        check on records which are in the message pool to assure
*        they are chained off of a user record.  According to
*        documentation, instances occur which can result in these
*        garbage records existing.
*
*------------------------------------------------------------------*
         EJECT
*------------------------------------------------------------------*
*        RECORD TYPES in the BRODCAST Dataset:
*
*        The six record types and their keys are:
*
*        X'00'     BRODCAST 'NOTICES' Directory Record.
*
*        X'01'     User 'MAIL' Directory Record.
*
*        X'02'     BRODCAST 'NOTICES' Message Record.
*
*        X'03'     User 'MAIL' Message Record.
*
*        X'04'     Header Record of BRODCAST Dataset.
*
*        X'05'     RBA Address of First Record usable for a message.
*
*        X'FF'     Dummy Inactive 'MAIL' Message Record.
*                   (First byte if data in this type must contain
*                    the "R" value of CCHHR or TTR.  This is the
*                    record number within the track, starting
*                    from X'01' and going up to the maximum
*                    number of BRODCAST records that fit into
*                    a track (device dependent).)
*
*                  Examples:  max is X'32' for 3390s
*                             max is X'35' for 3380s
*                             max is X'30' for 3350s
*
*                  So, if you copy the BRODCAST dataset across
*                  device types, you have to reset these numbers
*                  to the correct "R" value for the CCHHR or TTR.
*
*        The 'BDAM' Access Method reads these records looking
*        at the (one byte) key separately, and the (129 byte)
*        data separately.
*
*
*        JCL TO INVOKE:
*
*            //BRODCAST EXEC PGM=BDMSCAN,REGION=2M
*            //STEPLIB  DD  -- NONAUTHORIZED LIBRARY IF YOU CHOOSE --
*            //BRODMAP  DD  SYSOUT=A,DCB=BLKSIZE=133
*            //BRODPRNT DD  SYSOUT=A
*            //BRODCAST DD  DSN=SYS1.BRODCAST,DISP=SHR
*
* INSTALLED:  30 Mar 95
*
* CHANGE LOG:
*    05 Sep 2005 - Corrected CLOSE macro for closing DCBs that
*                  are in the BDMPRINT program.
*
*    09 Aug 2005 - Added BDMPRINT program instead of the snap of
*                  the Header record area.  With the BDMPRINT
*                  program you can intelligently look at, and
*                  format, any BRODCAST record.
*
*    17 Aug 2005 - Create an Incore Notices Directory Table which
*                  can be interrogated by the program instead of
*                  accessing the BRODCAST dataset directly.  The
*                  BDMPRINT program needs this information to
*                  determine both: if a notice message is active,
*                  and, what the notice number is, for OPER SEND.
*
*                  When this table exists, its start address is
*                  passed to BDMPRINT as the third parameter.  If
*                  this table does not exist yet, as when reading
*                  the header record for the first time, an address
*                  of F'0' is passed to BDMPRINT as the third
*                  parameter.  BDMPRINT can tell the difference.
*
*    21 Aug 2005 - Create a new report with DD name BRODUSER which
*                  prints the Userid message chains.
*
*                  Protection of outputs if a DD name (other than
*                  BRODMAP) is missing.  You can now eliminate
*                  the BRODPRNT and/or BRODUSER reports by leaving
*                  out either or both DD name(s) from the JCL.
*
*------------------------------------------------------------------*
*
*    Parameter list to call  BDMPRINT
*
*       0(R1)  -   Fullword containing 3-byte current RBA in low
*                  order part of the fullword.
*       4(R1)  -   130 byte area containing key+data of current
*                  record being printed and formatted.
*       8(R1)  -   Incore Notice Directory Table - address of
*                  its beginning.  Zero if not EXECMODE=X'02'
*      12(R1)  -   Address of Userid if EXECMODE=X'04'
*      16(R1)  -   DDNFLAG   - which DD names are OPEN
*      17(R1)  -   EXECMODE  - which part of the program is
*                              calling BDMPRINT
*      18(R1)  -   FFACTREC  - actual record number on track
*      19(R1)  -   FFMRKREC  - marked record number in X'FF' record
*
*------------------------------------------------------------------*
         EJECT
*------------------------------------------------------------------*
*        BELOW IS A PICTORIAL VIEW OF THE BROADCAST WHICH SHOULD
*        HELP ONE TO BE ABLE TO NAVIGATE IT SUCCESSFULLY.
*
*            S Y S 1 . B R O D C A S T
*  ===============================================================
*  =                                                             =
*  =   *--*--------*---------*----------------------------*---*  =
*  =   *04*        * R1USPTR *  'SYS1.BRODCAST DATA SET'  *   *  =
*  =   *--*--------*-----+---*----------------------------*---*  =
*  =                     +                                       =
*  =    ++++++++++++++++++                                       =
*  =    +     1ST USER MAIL DIRECTORY RECORD  (EACH USERID       =
*  =    +       ENTRY CONSISTS OF A 13 BYTE AREA; THE USERID,    =
*  =    +       NEXT RBA POINTER AND ENDING RBA POINTER.         =
*  =    +                                                        =
*  =   *--*-------*---*----* /// *------*---*----*--*-----*      =
*  =   *01* USERID*RBA*ERBA* /// *USERID*RBA*ERBA*7F* RBA *      =
*  =   *--*-------*---*----* /// *------*---*----*--*--+--*      =
*  =                                                   +         =
*  =    +++++++++++++++++++++++++++++++ //// +++++++++++         =
*  =    +                                                        =
*  =    +    LAST USER MAIL DIRECTORY RECORD                     =
*  =    +                                                        =
*  =    +    NOTE: '000' ENDS THE CHAIN OF X'01' RECORDS.        =
*  =   *--*-------*---*----* /// *------*---*----*--*-----*      =
*  =   *01* USERID*RBA*ERBA* /// *USERID*RBA*ERBA*7F* 000 *      =
*  =   *--*-------*---*----* /// *------*-+-*-+--*--*--+--*      =
*  =                                      +   +                  =
*  =    +++++++++++++++++++++++++++++++++++   +++++++++++++++++  =
*  =    +                                                     +  =
*  =    +     1ST MESSAGE RECORD FOR USER                     +  =
*  =   *--*-----------------------------------------*-----*   +  =
*  =   *03*                                         * RBA *   +  =
*  =   *--*-----------------------------------------*--+--*   +  =
*  =                                                   +      +  =
*  =    ++++++++++++++++++++++++++ //// ++++++++++++++++      +  =
*  =    +                                                     +  =
*  =    +++++++++++++++++++++++++++++++++++++++++++++++++++++++  =
*  =    ++    LAST MESSAGE RECORD FOR USER                       =
*  =    ++   NOTE: '000' ENDS THE CHAIN OF X'03' RECORDS.        =
*  =   *--*-----------------------------------------*-----*      =
*  =   *03*                                         * 000 *      =
*  =   *--*-----------------------------------------*-----*      =
*  =                                                             =
*  =             FREE  SPACE                                     =
*  =   *--*-----------------------------------------------*      =
*  =   *FF*                                               *      =
*  =   *--*-----------------------------------------------*      =
*  =                                                             =
*  ===============================================================
*------------------------------------------------------------------*
         EJECT
*------------------------------------------------------------------*
         MACRO
         IKJZT301  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*
*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                                RECORD 1                             *
*                                                                     *
*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *
*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *
*        CONCERNING THE DATA SET.                                     *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
R1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET
         AGO   .SKIP
.NODSECT ANOP
R1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET
.SKIP    ANOP
R1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW
R1BCFLGS DS    B -            NOTICES FLAGS - NOT USED
R1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST
*                               NOTICES DIRECTORY RECORD
R1USPTRP DS    0A -           SAME AS R1USPTR BELOW
R1USFLGS DS    B -            USER MAIL FLAGS - NOT USED
R1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD
R1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS
R1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -
*                               FROM MASTER SCHEDULER BASEA, BABCMAX
*                                                                     *
R1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =
*                               ' SYS1.BRODCAST DATA SET '
R1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS
*                               A 1-DIGIT NUMBER
         DS    CL1            RESERVED
R1FRESRH DS    CL3            RBA OF FREE SEARCH RECORD
R1GENNUM DS    F              GENERATION NUMBER FOR IN-STORAGE
*                               NOTICE TABLE
         DS    CL76 -         RESERVED
         MEND
         MACRO
         IKJZT302  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*
*        IKJZT302      RELEASE=OS/VS2.2   LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                        NOTICES DIRECTORY RECORD                     *
*                                                                     *
*        THE BROADCAST NOTICES DIRECTORY RECORD (BCDIR) HAS BROADCAST *
*        MESSAGE NUMBERS AND A POINTER TO THE MESSAGE RECORD          *
*        ASSOCIATED WITH EACH MSG. NUMBER.                            *
*                                                                     *
*        NOTE: THIS MACRO USES EQUATES GENERATED BY 'IEZBITS' MACRO.  *
*              THEREFORE, THE IEZBITS MACRO MUST BE CODED             *
*              PREVIOUS TO CALLING THIS MACRO.                        *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
BCDIR    DSECT , -
         AGO   .SKIP
.NODSECT ANOP
BCDIR    DS    0F
.SKIP    ANOP
BCDNENT  EQU   25             NUMBER OF ENTRIES
BCDENTRY DS    0CL5 -         ENTRY FOR 1 BROADCAST MSG NO.
BCDMFLG  DS    0BL1 -         BROADCAST DIRECTORY MSG. FLAG:
BCDNOMSG EQU   BIT0
*                               '1' = NO NOTICES MSG ASSIGNED
*                                     TO THIS MSG NUMBER
*                               '0' = NOTICES MSG FOR THIS NUMBER
*                                     IS ASSIGNED
BCDMSGNO DS    FL2 -          BROADCAST NOTICES MSG NO. IN HEX
BCDMRBA  DS    AL3 -          RELATIVE BLOCK ADDR OF NOTICE MSG RCD
         DS    24CL5 -        RESERVE SPACE FOR 24 MORE ENTRIES
*                               IDENTICAL IN FORMAT TO 'BCDENTRY'
BCDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'
BCDNEXT  DS    AL3 -          CHAIN PTR TO NEXT NOTICE DIRECTORY RCD
*                               (ZERO IF LAST)
         MEND
         MACRO
         IKJZT303   &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*
*        IKJZT303      RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                         NOTICES MESSAGE RECORD                      *
*                                                                     *
*          THE BRODCAST NOTICES MESSAGE RECORD (BCMSG) IS A           *
*          RECORD IN THE SYS1.BRODCAST DATA SET WHICH CONTAINS A      *
*          NOTICES MESSAGE INTENDED FOR ALL USERS.                    *
*                                           10/1/72     LEVEL=1       *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
BCMSG    DSECT , -            BRODCAST NOTICES MESSAGE RECORD
         AGO   .SKIP
.NODSECT ANOP
BCMSG    DS    0F -           BRODCAST NOTICES MESSAGE RECORD
.SKIP    ANOP
BCMLNG   DS    FL1 -          LENGTH OF BRODCAST NOTICES MSG TEXT
BCMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)
         DS    XL3 -          RESERVED
         MEND
         MACRO
         IKJZT304  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*
*        IKJZT304       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                       USER MAIL DIRECTORY RECORD                    *
*                                                                     *
*        THE USER MAIL DIRECTORY RECORD (USDIR) IS A LOGICAL          *
*        DIRECTORY RECORD IN THE SYS1.BRODCAST DATA SET.              *
*        THE DIRECTORY CONTAINS USERIDS AND PTRS TO THE FIRST AND     *
*        LAST MESSAGE FOR EACH USERID.                                *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
USDIR    DSECT , -            USER MAIL DIRECTORY RECORD
         AGO   .SKIP
.NODSECT ANOP
USDIR    DS    0F -           USER MAIL DIRECTORY RECORD
.SKIP    ANOP
USDENTRY DS    0CL13 -        DIRECTORY ENTRY FOR 1 USERID
USDID    DS    CL7 -          USERID (LEFT JUSTIFIED, PADDED W/ BLANKS)
USDRBA   DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST
*                               MESSAGE FOR THIS USERID (ZERO IF NONE)
USDEND   DS    AL3 -          RBA OF LAST MESSAGE FOR THIS USERID
*                               (ZERO IF NONE)
         DS    8CL13 -        RESERVE SPACE FOR 8 MORE DIRECTORY
*                               ENTRIES IDENTICAL IN FORMAT TO THE
*                               PRECEDING 'USDENTRY'
         DS    XL8 -          RESERVED
USDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'
USDNEXT  DS    AL3 -          CHAIN PTR TO NEXT USER MAIL DIRECTORY
*                               RECORD (ZERO IF LAST)
         MEND
         MACRO
         IKJZT305  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*
*        IKJZT305       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                        USER MAIL MESSAGE RECORD                     *
*                                                                     *
*        THE USER MAIL MESSAGE RECORD (USMSG) IS A RECORD IN          *
*        THE SYS1.BRODCAST DATA SET WHICH CONTAINS A MAIL MESSAGE     *
*        INTENDED FOR A PARTICULAR USERID.                            *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
USMSG    DSECT , -            USER MAIL MESSAGE RECORD
         AGO   .SKIP
.NODSECT ANOP
USMSG    DS    0F -           USER MAIL MESSAGE RECORD
.SKIP    ANOP
USMLNG   DS    FL1 -          LENGTH OF MAIL MSG TEXT
USMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)
USMNEXT  DS    AL3 -          CHAIN PTR TO NEXT MAIL MESSAGE RECORD
*                               FOR THIS USERID (ZERO IF LAST)
         MEND
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    DS    0H
         ST    R4,SAV4HEX
         STM   R15,R1,HEXSAVE
         LA    R1,&FROM
         LA    R0,&LEN
         LA    R15,&TO
         BAL   R4,HEX
         L     R4,SAV4HEX
         LM    R15,R1,HEXSAVE
         MEND
         SPACE
R0       EQU   0                  USED BY O.S.
R1       EQU   1                  ADDR OF PARM LIST
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9                   PTR TO OUTPUT LINE FOR PUT
R10      EQU   10                  BAL REGISTER
R11      EQU   11
R12      EQU   12                  BASE REGISTER
R13      EQU   13                  SAVE-AREA ADDRESS
R14      EQU   14                  ULTIMATE RETURN ADDRESS
R15      EQU   15                  ENTRY-PT ADDR, WORK REG, RET CODE
         SPACE
         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV
         LCLC  &PGMNAME
&VERSNUM SETC  ' 1.5.0A'
&PKGNAME SETC  'BRODMSTR'
&PKGTITL SETC  'Broadcast Master'
&VERTITL SETC  ' Version '
&COPYRGT SETC  'Copyright (c) 1995-2025 Sam Golob Systems Programming'
&COPYRSV SETC  ' LLC - All Rights Reserved  '
&PGMNAME SETC  'BDMSCAN '
&PGMNAME AMODE 24
&PGMNAME RMODE 24
&PGMNAME CSECT
         B     BEGINN-*(,R15)
         DC    CL8'&PGMNAME'
         DC    C' '
         DC    C'&PKGTITL'
         DC    C'&VERTITL'
         DC    C'&VERSNUM'
         DC    C' '
         DC    C'&COPYRGT'
         DC    C'&COPYRSV'
         DC    CL16' &SYSDATE &SYSTIME '
         DC    CL6'HLASM '
         DC    C'&SYSVER'
         DC    C' '
BEGINN   DS    0H
         STM   R14,R12,12(R13)
         LR    R5,R1               Save PARM address
         LR    R12,R15             Load entry address
         USING BDMSCAN,R12,R11,R8  Establish addressability
         LA    R11,4095(,R12)
         LA    R11,1(,R11)
         LA    R8,4095(,R11)
         LA    R8,1(,R8)
         LR    R15,R13             Save caller's save address
         LA    R13,SAVE            Get our savearea address
         ST    R15,SAVE+4          Save off into low save
         ST    R13,8(,R15)         Chain mine back
         ST    R5,PARMSAVE         Store PARM address for reloading
         XR    R9,R9               For possible debug purposes
         XR    R10,R10             For possible debug purposes
INITPGM  DS    0H
         MVI   EESVERS,X'00'       Don't assume EESCB exists.
         MVI   LINE-1,X'40'
         MVI   BLANK44-1,X'40'     Initialize Blanks area
         MVC   BLANK44(44),BLANK44-1
         L     R0,=V(BDMPRINT)     Get BDMPRINT program entry point
         ST    R0,BDMPRPGM         Store it for future use
         L     R0,=V(BRODPRNT)     Get BRODPRNT DCB address
         ST    R0,BRODPDCB         Store it for future use
         L     R0,=V(BRODUSER)     Get BRODUSER DCB address
         ST    R0,BRODUDCB         Store it for future use
         SPACE
         L     R1,PARMSAVE         Reload PARM address
         L     R1,0(,R1)           See if PARM was coded
         MVC   PWKAREA(3),2(R1)    Uppercase the parm for 3 bytes
         OC    PWKAREA(3),BLANK44
         CLC   =C'ALL',PWKAREA     Was ALL coded?
         BNE   TIOTSCAN            No. Don't flip flag
         OI    ALLPRINT,X'01'      Yes. Let the program know.
* ----------------------------------------------------------------- *    06223
TIOTSCAN DS    0H             Determine the presence of Optional         06224
*                             DDNAMES:  BRODPRNT, BRODUSER, SYSIN        06225
* ----->                      OPEN them if there is JCL for them.        06226
* ----------------------------------------------------------------- *    06227
* --   DD NAME  -  IF THIS DD NAME IS PRESENT, THEN AS FOLLOWS   -- *    06227
* --                                                             -- *    06227
* --                  BRODPRNT  -  DDNFLAG = X'01'               -- *    06227
* --                  BRODUSER  -  DDNFLAG = X'02'               -- *    06227
* --                  SYSIN     -  DDNFLAG = X'04'               -- *    06227
* --                  BRODCAST  -  DDNFLAG = X'08'               -- *    06227
* --                  BRODMAP   -  DDNFLAG = X'10'               -- *    06227
* ----------------------------------------------------------------- *    06227
         MVI   DDNFLAG,X'00'        INITIALIZE FLAG
* ----------------------------------------------------------------- *    06227
         ST    R3,SAVER3
         ST    R5,SAVER5
         L     R5,16          R5=CVT                                     06228
         L     R5,0(,R5)      R5=TCB WORDS                               06229
         L     R5,4(,R5)      R5=MY TCB                                  06230
         L     R5,12(,R5)     R5=TIOT                                    06231
         LA    R5,24(,R5)     R5=FIRST DD ENTRY                          06232
TIOTLOOP CLC   0(4,R5),=XL4'00' END OF TIOT?                             06233
         BE    TIOTSEND       YES, CHECK FOR OUTPUT VOL OVERRIDES        06234
         CLC   4(8,R5),BRODPRNC     BRODPRNT DDNAME THERE?               06235
         BNE   TIOTPRTN       NO                                         06236
         OI    DDNFLAG,X'01'        SHOW PRESENCE OF BRODPRNT DD         06237
         B     TIOTNEXT       CONTINUE                                   06238
TIOTPRTN CLC   4(8,R5),BRODUSRC                                          06239
         BNE   TIOTUSRN                                                  06240
         OI    DDNFLAG,X'02'        SHOW PRESENCE OF BRODUSER DD         06241
         B     TIOTNEXT                                                  06242
TIOTUSRN CLC   4(8,R5),SYSINC                                            06239
         BNE   TIOTBRCN                                                  06240
         OI    DDNFLAG,X'04'        SHOW PRESENCE OF SYSIN    DD         06241
         B     TIOTNEXT                                                  06242
TIOTBRCN CLC   4(8,R5),BRODCASC                                          06239
         BNE   TIOTBRMN                                                  06240
         OI    DDNFLAG,X'08'        SHOW PRESENCE OF BRODCAST DD         06241
         B     TIOTNEXT                                                  06242
TIOTBRMN CLC   4(8,R5),BRODMAPC                                          06239
         BNE   TIOTNEXT                                                  06240
         OI    DDNFLAG,X'10'        SHOW PRESENCE OF BRODMAP  DD         06241
         B     TIOTNEXT                                                  06242
TIOTNEXT SR    R3,R3                                                     06243
         IC    R3,0(,R5)      R3=LENGTH OF DD ENTRY                      06244
         AR    R5,R3          R5=NEXT DD ENTRY                           06245
         B     TIOTLOOP       GO CHECK IT                                06246
TIOTSEND DS    0H                                                        06247
         L     R3,SAVER3
         L     R5,SAVER5
         B     CHECKDDS             BRANCH PAST CONSTANTS
* -------------------------------------------------------- *
* --   CONSTANTS   --                                   -- *
* -------------------------------------------------------- *
BRODPRNC DC    CL8'BRODPRNT'
BRODUSRC DC    CL8'BRODUSER'
SYSINC   DC    CL8'SYSIN   '
BRODCASC DC    CL8'BRODCAST'
BRODMAPC DC    CL8'BRODMAP '
* -------------------------------------------------------- *
*   Before trying the OPEN of the Required DD names,       *
*   check to make sure they were coded in the JCL first.   *
* -------------------------------------------------------- *
CHECKDDS DS    0H
         TM    DDNFLAG,X'18'     Both BRODCAST and BRODMAP DDs here?
         BO    OPEN              Yes, then OPEN both files and proceed.
* ----------------------------   No. Then messages, and RC=16.
         TM    DDNFLAG,X'08'        BRODCAST there?
         BO    BCASTIN              Yes. Try BRODMAP too.
         WTO   'BDMSC00I     ----------------------------  ',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMSC10E     BRODCAST DD Name is missing...',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMSC00I     ----------------------------  ',ROUTCDE=11X
               ,DESC=7
BCASTIN  DS    0H
         TM    DDNFLAG,X'10'        BRODMAP there?
         BO    BMAPISIN             Yes. But RC = 16.
         WTO   'BDMSC00I     ----------------------------  ',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMSC10E     BRODMAP  DD Name is missing...',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMSC00I     ----------------------------  ',ROUTCDE=11X
               ,DESC=7
BMAPISIN DS    0H
         WTO   'BDMSC00I     ----------------------------  ',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMSC07I     BRODCAST and BRODMAP are      ',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMSC07I      both Required DD Names....   ',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMSC00I     ----------------------------  ',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMSC00I     ----------------------------  ',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMSC07I     BRODPRNT and BRODUSER are     ',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMSC07I      both Optional DD Names....   ',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMSC00I     ----------------------------  ',ROUTCDE=11X
               ,DESC=7
         B     EOJ16                End right away.  Code 16.
* -------------------------------------------------------- *
*   OPEN files and print title lines in BRODPRNT report.   *
* -------------------------------------------------------- *
*     The BRODPRNT DCB is in the BDMPRINT program, but     *
*     it is OPENed and CLOSEd by this program.             *
* -------------------------------------------------------- *
OPEN     DS    0H
         TM    DDNFLAG,X'01'
         BO    NOPRTMSG
         WTO   'BDMSC00I     ----------------------------  ',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMSC06I     BRODPRNT DD Name is Optional..',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMSC00I     ----------------------------  ',ROUTCDE=11X
               ,DESC=7
NOPRTMSG DS    0H
         TM    DDNFLAG,X'02'
         BO    NOUSRMSG
         WTO   'BDMSC00I     ----------------------------  ',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMSC06I     BRODUSER DD Name is Optional..',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMSC00I     ----------------------------  ',ROUTCDE=11X
               ,DESC=7
NOUSRMSG DS    0H
         OPEN  (BRODCAST,(INPUT))
         OPEN  (BRODMAP,(OUTPUT))
         RDJFCB BRODCAST
* ------------- Get the EESCB in a program -------------*  below
* -----------------  This needs AMODE 31  --------------*
GETEESCB DS    0H
         CNOP  0,4
         L     R15,CONST            Amode 31
         BASSM R0,R15
CONST    DC    X'80',AL3(CONST+4)
         ST    R5,SAVER5A           R5 is temporary.
         L     R5,X'10'             CVT
         L     R5,X'9C'(,R5)        Point to TSVT
         L     R5,X'4C'(,R5)        Point to TPVT
         ST    R5,SAVETPVT          Save the TPVT for reference.
         L     R5,X'20'(,R5)        Point to EESCB - R5
         ST    R5,SAVEESCB          Store away the IKJEESCB address
         L     R5,SAVER5A           Restore R5 quickly.
         L     R2,SAVEESCB          Use work register here.
         LTR   R2,R2                EESCB supported for this release?
         BZ    ENDEESCB             No. Bypass EESCB stuff.
         USING IKJEESCB,R2
USEEESCB DS    0H                   Save EESCB quantities.
         CLC   EESCB_IDENTIFIER(8),LITEESCB      Is this the EESCB?
         BNE   ENDEESCB             No. Can't do anything if not it.
         MVC   EESIDENT(8),EESCB_IDENTIFIER
         MVC   EESVERS(1),EESCB_VERSION  Save EESCB Version Number
         CLI   EESCB_VERSION,X'03'  At least EESCB version 3 ?
         BL    ENDEESCB             No. Don't support fancy stuff.
         MVC   EESDSN(44),EESCB_BROADCAST_DSNAME BRODCAST dataset name
         MVC   EESVOL(6),EESCB_BROADCAST_VOLSER  BRODCAST dataset volsr
         MVC   EESUNT(8),EESCB_BROADCAST_UNIT    BRODCAST dataset unit
         DROP  R2
         CNOP  0,4
         L     R15,CONSTX          Amode 24
         BASSM R0,R15
CONSTX   DC    A(CONSTX+4)
         B     ENDEESCB
SAVETPVT DC    F'0'                Needed for Get EESCB routine
SAVEESCB DC    F'0'                Needed for Get EESCB routine
EESDSN   DC    CL44' '             BRODCAST Dsname from EESCB
EESVOL   DC    CL6' '              BRODCAST Volser from EESCB
EESUNT   DC    CL8' '              BRODCAST Unit Name from EESCB
EESVERS  DC    X'00'               EESCB version number
EESIDENT DC    CL8' '              EESCB Identifier, copied.
LITEESCB DC    CL8'IKJEESCB'
ENDEESCB DS    0H
* ------------- Get the EESCB in a program -------------*  above
*
* ---- >>>>>>
* --               OPEN the BRODPRNT DCB    -    below
* --
         TM    DDNFLAG,X'01'
         BZ    NOPRT001
         ST    R6,SAVER6          SAVE R6 for OPEN purposes.
         L     R6,BRODPDCB        Get DCB address from BDMPRINT program
         OPEN  ((6),OUTPUT)       OPEN it.
         MVC   LINE,LINE-1        Print title lines to that report.
         PUT   (6),TITLINE
         MVC   LINE,LINE-1
         PUT   (6),CPYRLINE
         MVC   LINE(133),REPTLN02
         PUT   (6),LINE
         MVC   LINE,LINE-1
         PUT   (6),LINE
         MVC   LINE,LINE-1
         PUT   (6),LINE
         L     R6,SAVER6          Restore R6 for later use.
NOPRT001 DS    0H
* --
* --               OPEN the BRODPRNT DCB    -    above
* ---- >>>>>>
* ---- >>>>>>
* --               OPEN the BRODUSER DCB    -    below
* --
         TM    DDNFLAG,X'02'      Is BRODUSER DDNAME present?
         BZ    NOBRDUSR
         ST    R6,SAVER6          SAVE R6 for OPEN purposes.
         L     R6,BRODUDCB        Get DCB address from BDMPRINT program
         OPEN  ((6),OUTPUT)       OPEN it.
         MVC   LINE,LINE-1        Print title lines to that report.
         PUT   (6),TITLINE
         MVC   LINE,LINE-1
         PUT   (6),CPYRLINE
         MVC   LINE(133),REPTUL02
         PUT   (6),LINE
         MVC   LINE,LINE-1
         PUT   (6),LINE
         MVC   LINE,LINE-1
         PUT   (6),LINE
         L     R6,SAVER6          Restore R6 for later use.
NOBRDUSR DS    0H
* --
* --               OPEN the BRODUSER DCB    -    above
* ---- >>>>>>
         SPACE
*--------------------------------------------------------------------*
*        GET THE HEADER RECORD.  THIS IS A SPECIAL RECORD 1.
*--------------------------------------------------------------------*
         SPACE
         READ  HDRECB,             ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO             RBA TO HOLD THE KEY
         SPACE
         CHECK HDRECB
         L     R2,HDRECB+20        Address of Key
         MVC   KEYHOLD(1),0(R2)    Move the key data where we can see
         L     R3,HDRECB+12        Address of Data
         MVC   RECHOLD(129),0(R3)  Move the data where it is accessible
* --- >>
*                                  Invoke BDMPRINT routine for record.
         STM   R14,R2,SAV14TO2     Save all the end registers
         LA    R1,PRMPRINT         Point to the parm area to be passed
         LA    R0,0                Zero out register
         ICM   R0,7,BLOCKNO        Load with block number information
         ST    R0,0(,R1)           Pass it to first word of parm
         LA    R0,REC130           Address of data to be printed
         ST    R0,4(,R1)           Store it in second word of parm
         LA    R0,0                Third parameter address is a dummy,
         ST    R0,8(,R1)           because the ND table isn't there yet
         LA    R0,0                Fourth parameter address is a dummy,
         ST    R0,12(,R1)          because no USERID is being passed.
         LA    R0,DDNFLAG          EXECMODE flag is one after this
         MVI   EXECMODE,X'01'
         ST    R0,16(,R1)
         L     R15,BDMPRPGM        Load entry point of print program
         BALR  R14,R15             Pass control to it
         LM    R14,R2,SAV14TO2     Restore all the end registers
* --- >>
         USING R1BC,R3             Addressability to Record 1 Mapping
         SPACE
         AP    REC04,=P'1'         Add 1 to total                JDM0
         MVC   SAVERBA(3),R1USPTR  Save RBA 1ST Mail Directory Record
         MVC   HIGHVAL(4),R1RECNUM Save get out value
         MVC   SAVHDADR(4),R1RECNUM Save get out value
         MVC   NOTEDRBA(3),R1BCPTR  Save Notify Directory Address
         MVC   FRSRCRBA(3),R1FRESRH Save Free Search Record RBA
         MVC   INCORGEN(4),R1GENNUM Save Incore Notices Table Gen Numbr
         MVC   NUMNOTCS(2),R1BCMAX  Number of Notice message records
         L     R5,HIGHVAL          Get number for printout
         CVD   R5,CVDAREA          Convert it to printable
         MVC   MAXCNT,MASK10       Move in the mask
         ED    MAXCNT,CVDAREA+3    Make it pretty
         LA    R9,TITLINE          Title line
         BAL   R10,PRINT           Print it
         LA    R9,CPYRLINE         Copyright line
         BAL   R10,PRINT           Print it
         LA    R9,REPTLN01         Line with name of report
         BAL   R10,PRINT           Print it
         MVC   DSNAMEN(44),JFCBDSNM
         LA    R9,DSNAMET
         BAL   R10,PRINT
         MVC   DSVOLSN(6),JFCBVOLS
         LA    R9,DSVOLST
         BAL   R10,PRINT
*  EESCB stuff  -  below
         CLC   EESIDENT(8),=C'IKJEESCB'
         BNE   NOEESCB1
         CLI   EESVERS,X'03'
         BL    NOEESCB1
         CLC   JFCBDSNM(44),EESDSN
         BNE   NOTOFFIC
         CLC   JFCBVOLS(6),EESVOL
         BNE   NOTOFFIC
         B     YESOFFIC
NOTOFFIC DS    0H
         MVC   LINE,LINE-1
         MVC   LINE+10(L'MESNOFFL),MESNOFFL
         LA    R9,LINE
         BAL   R10,PRINT
         B     EESCBEND
YESOFFIC DS    0H
         MVC   LINE,LINE-1
         MVC   LINE+10(L'MESYOFFL),MESYOFFL
         LA    R9,LINE
         BAL   R10,PRINT
         B     EESCBEND
EESCBEND DS    0H
NOEESCB1 DS    0H
*  EESCB stuff  -  above
         LA    R9,MAXIMUM          Total blocks line
         BAL   R10,PRINT           Print and tell how many
         SPACE
         LH    R5,R1BCMAX          Get number of notices from header
         XR    R4,R4               Clear R4 to divide by 25
         D     R4,=F'25'           Number if blocks for directory
         AH    R5,R1BCMAX          Add total for Notices & directory
         DROP  R3
         LTR   R4,R4               Is there a remainder?
         BZ    CVDNOT              No. Don't add.
         LA    R5,1(,R5)           Yes, add one.
CVDNOT   DS    0H
         CVD   R5,CVDAREA          Convert block total to printable
         MVC   NOTCNT,MASK10       Move in mask
         ED    NOTCNT,CVDAREA+3    Make it pretty
         LA    R9,NOTICES          Point to line to print
         BAL   R10,PRINT           And print the line.
         SPACE
         FREEDBUF HDRECB,          DECB address used to READ           X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB for PROCESS Dataset
         SPACE
* ------------ >  Do a run through Notices Directory records - below
* ------------------------------------------------------------------- *
NDTABLE  DS    0H                  Run through the Notices directory
*                                   records and create an incore table
*                                   of the entries.
* ------------------------------------------------------------------- *
         STM   R4,R5,SAVRG45       Save work registers
         XR    R4,R4               Zero R4
         XR    R5,R5               Zero R5
         ICM   R5,3,NUMNOTCS       Insert number of Notice entries
         M     R4,=F'5'            Multiply by 5 bytes per entry
         A     R5,=F'15'           Add 15 for NDHDR, NDTLR, one extra.
         A     R5,=F'125'          Account for almost empty record.
         LR    R0,R5               Dump this quantity into R0
         LM    R4,R5,SAVRG45       Restore work registers
         ST    R0,NOTGTSIZ         Store quantity of bytes in table
         L     R0,NOTGTSIZ         Load it back into R0 for GETMAIN
         GETMAIN RU,LV=(0),LOC=BELOW
         ST    R1,NOTETBLA         Save address of GETMAINed storage
         L     R1,NOTETBLA         Get it back for us to use now.
         MVC   0(5,R1),=C'NDHDR'   Put in the table header
         LA    R1,5(,R1)           Bump past header.
         ST    R1,CURNOTBL         Save address of start of real data.
MAKNOTBL DS    0H
         READ  NDRECB,             ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               NOTEDRBA            RBA TO HOLD THE KEY
         SPACE
         CHECK NDRECB
         L     R2,NDRECB+20        Address of Key
         MVC   KEYHOLD(1),0(R2)    Move the key data where we can see
         L     R3,NDRECB+12        Address of Data
         MVC   RECHOLD(129),0(R3)  Move the data where it is accessible
         L     R1,CURNOTBL         Get (moving) address to begin
         MVC   0(125,R1),RECHOLD   Move all the table entries there
         LA    R1,125(,R1)         Bump the current table address
         ST    R1,CURNOTBL         And store it away for next read.
         CLC   RECHOLD+126(3),=X'000000'  Last Notice directory record?
         BE    ENDNOTBL            Yes, go end up the table.
         MVC   NOTEDRBA(3),RECHOLD+126    Update to RBA of next record
         FREEDBUF NDRECB,          DECB address used to READ           X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB for PROCESS Dataset
         B     MAKNOTBL            And do another READ.
ENDNOTBL DS    0H
         MVC   0(5,R1),=C'NDTLR'   End the GETMAINed table with trailer
         SPACE
         FREEDBUF NDRECB,          DECB address used to READ           X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB for PROCESS Dataset
         SPACE
* ------------ >  Do a run through Notices Directory records - above
* ----- >    Analyze Notices Directory Records Table  -  below
ANLNOTBL DS    0H                  Read the Incore Notices Directory.
         LA    R9,NOTFYOUT         Notify messages information title
         BAL   R10,PRINT           Print it in summary report
         L     R7,NOTETBLA         Address of incore Notices directory
         CLC   =C'NDHDR',0(R7)     Is this the proper header?
         BNE   ANLNOTBB            No.
ANLNOTBP DS    0H
         LA    R7,5(,R7)           Bump past header.
         CLC   =C'NDTLR',0(R7)     Is this the trailer?
         BE    ANLNOTBE            Yes. Get out if we're at the end.
         CLC   =X'0000000000',0(R7)  Is this an empty entry?
         BE    ANLNOTBP            Yes. Just bump past and try again.
ANLNOTBS DS    0H
         TM    0(R7),X'80'         Is this an unused entry?
         BZ    ANLACTIV            No. Count it as an active entry.
         B     ANLINACT            Yes. Count it as unused.
ANLACTIV DS    0H
         AP    ACTNOT,=P'1'        Count an active entry.
         B     ANLPROCS            Go do the entry processing.
ANLINACT DS    0H
         AP    INANOT,=P'1'        Count an inactive entry
ANLPROCS DS    0H                  Directory entry processing.
         MVC   NOTNUM(2),0(R7)     Copy off the notice number.
         NI    NOTNUM,X'7F'        Turn off the indicator after copy.
         MVC   NOTRBA(3),2(R7)     Copy off this notice's RBA.
         B     ANLNOTBP            Go to the next entry.
ANLNOTBB DS    0H                  If the header is wrong, come here.
         LA    R9,NDCREERR         Read error message - header missing
         BAL   R10,PRINT           Print it in summary report
         B     ANLNOTBZ            Don't print Notices details.
ANLNOTBE DS    0H                  Time to get out and print totals.
         MVC   ACTNNUM,MASK10      Move mask.
         ED    ACTNNUM,ACTNOT      Edit total active notices.
         LA    R9,ACTNOMSG         Point to line to print.
         BAL   R10,PRINT           Print total active.
         MVC   INANNUM,MASK10      Move mask.
         ED    INANNUM,INANOT      Edit total inactive notices.
         LA    R9,INANOMSG         Point to line to print.
         BAL   R10,PRINT           Print total inactive.
ANLNOTBZ DS    0H
         SPACE
* ----- >    Analyze Notices Directory Records Table  -  above
SKIPNOTE DS    0H
         L     R0,SAVHDADR              GET MAXIMUM RECORDS    SG MAY99 005
         A     R0,=F'1'                 ONE FOR GOOD LUCK      HD DEC97 005
TYPEGET  GETMAIN RU,LV=(0),LOC=BELOW    GET STORAGE FOR TABLE  HD DEC97 005
         ST    R1,TYPETBLA              SAVE ADDRESS           HD DEC97 005
         LR    R0,R1                    SAVE ADDRESS           HD DEC97 005
         L     R1,SAVHDADR              GET LENGTH             SG MAY99 005
         LM    R14,R15,=D'0'            CLEAR FOR ICM          HD DEC97 006
         ICM   R15,B'1000',=X'99'       PAD WITH X'99'         HD DEC97 006
         MVCL  R0,R14                   CLEAR AREA             HD DEC97 006
         L     R7,TYPETBLA                                     HD DEC97 006
         MVI   1(R7),X'04'                                     HD DEC97 006
         SPACE
*--------------------------------------------------------------------*
*        This is now our READ loop as we do a successive READ,
*        incrementing the RBA number until we reach the BCNUMREC
*        value saved in 'HIGHVAL'.  Once we have read all the
*        records, we will go and analyze them.
*--------------------------------------------------------------------*
*    BLOCKNO has started with an RBA of X'000000' from the initial   *
*     READ of the BRODCAST Header record.                            *
*--------------------------------------------------------------------*
         SPACE
READLOOP DS    0H
         ICM   R1,7,BLOCKNO        Get RBA processed previously.
         LA    R1,1(,R1)           Increment by one.
         STCM  R1,7,BLOCKNO        Store it back for the next READ.
         CLC   BLOCKNO(3),HIGHVAL+1  Did we reach max?           JDM0
         BE    ANALYZE             If we've read them all, go analyze.
         SPACE
         READ  RECECB,             DECB TO USE IN MACRO EXPANSION      X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO             RBA TO HOLD THE KEY
         SPACE
         CHECK RECECB
         SPACE
         L     R2,RECECB+20        Address of Key
         MVC   KEYHOLD(1),0(R2)    Move the key data where we can see
         L     R3,RECECB+12        Address of Data
         MVC   RECHOLD(129),0(R3)  Move the data where it is accessible
         ST    R2,SAVEKEYA         Save Key Address
         L     R2,RECECB+16        Point to IOB
         USING IOBSTDRD,R2
         MVC   SAVEINF1(8),IOBSEEK Save CCHHR of record
         DROP  R2
         L     R2,SAVEKEYA         Restore Key Address
* --- >    Check X'FF' records if "R" in Byte 1 is correct - below
         CLI   KEYHOLD,X'FF'       Unused Broadcast Record?
         BNE   PASSYSFF            No. Bypass Byte-1 test.
         MVC   FFACTREC(1),SAVEINF1+7  Actual "R" from CCHHR
         MVC   FFMRKREC(1),REC130+1    Marked "R" from Byte 1 of record
         CLC   FFACTREC(1),FFMRKREC    Are they the same?
         BE    PASSGOOD                Yes. Not a bad X'FF' record.
         AP    BADFREC,=P'1'           No. Count this record as bad.
PASSGOOD DS    0H
         B     PASSALLR            Do this only for X'FF' records.
PASSYSFF DS    0H
         MVI   FFACTREC,X'00'      Not X'FF' record, then
         MVI   FFMRKREC,X'00'        zero out these fields.
PASSALLR DS    0H
* --- >    Check X'FF' records if "R" in Byte 1 is correct - above
         TM    ALLPRINT,X'01'      Has ALL been coded in the PARM?
         BO    PRINTALL            Yes, bypass filtering and print all.
         CLI   KEYHOLD,X'FF'       Is this an unused message record?
         BE    PRNTSKP1            Yes. Don't print it.
         CLI   KEYHOLD,X'03'       Is this a used message record?
         BE    PRNTSKP1            Yes. Don't print it.
PRINTALL DS    0H
* --- >>
*                                  Invoke BDMPRINT routine for record.
         STM   R14,R2,SAV14TO2     Save all the end registers
         LA    R1,PRMPRINT         Point to the parm area to be passed
         LA    R0,0                Zero out register
         ICM   R0,7,BLOCKNO        Load with block number information
         ST    R0,0(,R1)           Pass it to first word of parm
         LA    R0,REC130           Address of data to be printed
         ST    R0,4(,R1)           Store it in second word of parm
         L     R0,NOTETBLA         Pass incore Notify Directory Table
         ST    R0,8(,R1)           As third parameter
         LA    R0,0                Zero out register
         ST    R0,12(,R1)          Fourth parameter is zero, no USERID
         LA    R0,DDNFLAG
         MVI   EXECMODE,X'02'
         ST    R0,16(,R1)
         L     R15,BDMPRPGM        Load entry point of print program
         BALR  R14,R15             Pass control to it
         LM    R14,R2,SAV14TO2     Restore all the end registers
* --- >>
PRNTSKP1 DS    0H                  Enter each record's key into table.
         MVC   0(1,R7),0(R2)       Store key type into table entry.
         LA    R7,1(,R7)           Increment table entry to next one.
         SPACE
*--------------------------------------------------------------------*
*        Count the different record types for later reporting.
*--------------------------------------------------------------------*
         SPACE
         CLI   0(R2),X'00'         Is this a NOTICE directory record?
         BNE   CHK1                No. Try the next type.
         AP    NOTDIR,=P'1'        Yes. Add one to total for this type.
         B     FREEB
         SPACE
CHK1     DS    0H
         CLI   0(R2),X'01'         Is this a USERID directory record?
         BNE   CHK2                No. Try the next type.
         AP    USRIND,=P'1'        Yes. Add one to total for this type.
         B     FREEB
         SPACE
CHK2     DS    0H
         CLI   0(R2),X'02'         Is this a NOTICES message record?
         BNE   CHK3                No. Try the next type.
         AP    NOTMSG,=P'1'        Yes. Add one to total for this type.
         B     FREEB
         SPACE
CHK3     DS    0H
         CLI   0(R2),X'03'         Is this a USER message record?
         BNE   CHK4                No. Try the next type.
         AP    USRMSG,=P'1'        Yes. Add one to total for this type.
         B     FREEB
         SPACE
CHK4     DS    0H
         CLI   0(R2),X'05'         Is this the Free Search Record?
         BNE   CHKFF               No. Try the next type.
         AP    PTRMSG,=P'1'        Yes. Add one to total for this type.
         B     FREEB
         SPACE 1
CHKFF    DS    0H
         CLI   0(R2),X'FF'         Inactive unused USER mail Record?
         BNE   UNKNOWN             No. Try the next type.
         AP    FREEREC,=P'1'       Yes. Add one to total for this type.
         B     FREEB
         SPACE
UNKNOWN  DS    0H                         Format any strange key
         UNPK  ODDKEY+36(3),0(2,R2)       Print hex
         TR    ODDKEY+36(2),HEXTAB-X'F0'     to
         MVI   ODDKEY+38,C' '                   display.
         LA    R9,ODDKEY                  Point to line to print
         BAL   R10,PRINT
         SPACE
FREEB    DS    0H                  Every READ needs a FREEDBUF.         009
         FREEDBUF RECECB,          DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         SPACE
         B     READLOOP            Read another BRODCAST record.
         SPACE
*--------------------------------------------------------------------*
*        NOW, START TO ANALYZE ALL AND PRINT RESULTS TO THE REPORT.
*--------------------------------------------------------------------*
         SPACE
ANALYZE  DS    0H
         LA    R9,BREAKOUT         Key breakout information title
         BAL   R10,PRINT           PUT OUT THE SECTION HEADER
         SPACE
         MVC   KEYTYPE,TYPE04      MOVE IN DESCRIPTION           JDM0
         MVC   KEYCNT,MASK10                                     JDM0
         ED    KEYCNT,REC04                                      JDM0
         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT        JDM0
         BAL   R10,PRINT                                         JDM0
         SPACE 1                                                 JDM0
         MVC   KEYTYPE,TYPE00      MOVE IN DESCRIPTION
         MVC   KEYCNT,MASK10
         ED    KEYCNT,NOTDIR
         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT
         BAL   R10,PRINT
         SPACE
         MVC   KEYTYPE,TYPE02      MOVE IN DESCRITPION
         MVC   KEYCNT,MASK10
         ED    KEYCNT,NOTMSG
         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT
         BAL   R10,PRINT
         SPACE
         MVC   KEYTYPE,TYPE01      MOVE IN DESCRIPTION
         MVC   KEYCNT,MASK10
         ED    KEYCNT,USRIND
         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT
         BAL   R10,PRINT
         SPACE
         MVC   KEYTYPE,TYPE03      MOVE IN DESCRIPTION
         MVC   KEYCNT,MASK10
         ED    KEYCNT,USRMSG
         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT
         BAL   R10,PRINT
         SPACE
         MVC   KEYTYPE,TYPE05      MOVE IN DESCRIPTION           JDM1
         MVC   KEYCNT,MASK10                                     JDM1
         ED    KEYCNT,PTRMSG                                     JDM1
         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT        JDM1
         BAL   R10,PRINT                                         JDM1
         SPACE 1                                                 JDM1
         MVC   KEYTYPE,TYPEFF      MOVE IN DESCRIPTION
         MVC   KEYCNT,MASK10
         ED    KEYCNT,FREEREC
         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT
         BAL   R10,PRINT
         SPACE
         MVC   KEYTYPE,BADRFF      MOVE IN DESCRIPTION
         MVC   KEYCNT,MASK10
         ED    KEYCNT,BADFREC
         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT
         BAL   R10,PRINT
         SPACE
         CP    BADFREC,=P'0'
         BE    NOERRPRT
         MVC   LINE,LINE-1
         LA    R9,LINE
         BAL   R10,PRINT
         MVC   KEYTYPE(51),BADRMSG     MOVE IN DESCRIPTION
         MVC   KEYCNT+1(44),BLANK44
         MVC   KEYCNT+3(6),=C'<<<<<<'
         MVC   KEYCOUNT+2(6),=C'>>>>>>'
         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT
         BAL   R10,PRINT
         MVC   LINE,LINE-1
         LA    R9,LINE
         BAL   R10,PRINT
NOERRPRT DS    0H
         LA    R9,USERSOUT         POINT TO LINE TO PRINT
         BAL   R10,PRINT
         LA    R9,USERDASH
         BAL   R10,PRINT
         SPACE
*--------------------------------------------------------------------*
*     In MVS, there is a change from having 12 Userids per block     *
*     to 9 per block.                                                *
*--------------------------------------------------------------------*
         SPACE
* ------------------------------------------------------------------- *
INDEXLP  DS    0H               Loop through Userids and run          *
*                               the chains of messages, to see        *
*                               which Userids have messages           *
*                               outstanding, and how many.            *
* ------------------------------------------------------------------- *
         LA    R6,9                COUNT OF USERS PER RECORD
         MVC   BLOCKNO,SAVERBA
         SPACE
         READ  SCNECB,             DECB TO USE IN MACRO EXPANSION      X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO             RBA TO HOLD THE KEY
         SPACE
         CHECK SCNECB
         SPACE
         L     R3,SCNECB+12        ADDRESS OF RECORD
         USING USDIR,R3
         MVC   SAVERBA,USDNEXT     COPY NEXT INDEX RECORD NUMBER
         SPACE
*--------------------------------------------------------------------*
*        YOU WILL GO THROUGH THIS LOOP 9 TIMES, BECAUSE 9 ENTRIES
*        ARE HELD IN EVERY RECORD.
*--------------------------------------------------------------------*
         SPACE
USRLOOP  DS    0H
         MVC   USERID(7),USDID     Copy who this is
         CLC   USERID(7),ZEROS     Is this a real user?
         BE    NOMSG               Nope, must have been deleted.
         AP    USERS,=P'1'         Count how many users.
         XR    R4,R4               Clear upper byte
         ICM   R4,7,USDRBA         Get block position
         BZ    NOMSG               NO.. JUST BUMP
* --- >    Printing title of user with messages  -  below
         TM    DDNFLAG,X'02'       Is BRODUSER DDNAME present?
         BZ    NOBRDUSP            No. Skip effort to print messages.
         ST    R6,SAVER6           Save R6
         L     R6,BRODUDCB         Load DCB address for BRODUSER
         MVC   LINE,LINE-1
         MVC   USERIDM(7),USDID
         HEX   USERISTH,3,USDRBA
         HEX   USERIENH,3,USDEND
         MVC   LINE(133),USERIMSG
         DROP  R3
         PUT   (6),LINE
         MVC   LINE,LINE-1
         PUT   (6),LINE
         MVC   LINE,LINE-1
         L     R6,SAVER6           Restore R6
NOBRDUSP DS    0H
* --- >    Printing title of user with messages  -  above
ALTCODE  DS    0H                                              HD DEC97 013
         SLR   R5,R5                    CLEAR FOR ADD          HD DEC97 013
         L     R7,TYPETBLA              GET ADDRESS OF TYPETBL HD DEC97 013
         LA    R5,0(R7,R4)              POINT TO TABLE ENTRY   HD DEC97 013
         BCTR  R5,0                     ORIGIN ZERO            HD DEC97 013
         CLI   0(R5),X'03'         JUST VERIFY WERE WE ARE
         BE    TABLOK                   THIS IS A VALID ONE    HD DEC97 014
         LA    R9,TABLERR          POINT TO LINE TO PRINT
         BAL   R10,PRINT           JUST LET THEM KNOW I'M CONFUSED
         B     BUMPUSR
         SPACE
TABLOK   DS    0H
         MVI   0(R5),X'88'         SET THAT IT WAS A VALID MESSAGE
BUMPUSR  DS    0H
         AP    MSGCOUNT,=P'1'      INCREMENT HOW MANY MESSAGES
         STCM  R4,7,MSGNUM
         SPACE
         READ  MSGECB,             DECB TO USE IN MACRO EXPANSION      X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               MSGNUM              RBA TO HOLD THE KEY
         SPACE
         CHECK MSGECB
         SPACE
         L     R4,MSGECB+20        ADDRESS OF KEY
         MVC   KEYHOLD(1),0(R4)    Move the key data where we can see
         L     R4,MSGECB+12        Address of Data
         MVC   RECHOLD(129),0(R4)  Move the data where it is accessible
*
* --- >    Printing message number for this USERID  below
         TM    DDNFLAG,X'02'       Is BRODUSER DDNAME present?
         BZ    NOBRUSMN            No. Skip effort to print messages.
         ST    R6,SAVER6           Save R6
         L     R6,BRODUDCB         Load DCB address for BRODUSER
         MVC   LINE,LINE-1
         MVC   USERIDX(7),USERID
         MVC   USERMSNO(6),MASK46
         ED    USERMSNO(6),MSGCOUNT+2
         MVC   LINE(133),USERMSNM
         PUT   (6),LINE
         MVC   LINE,LINE-1
         L     R6,SAVER6           Restore R6
NOBRUSMN DS    0H
* --- >    Printing message number for this USERID  above
*
* --- >>
*                                  Invoke BDMPRINT routine for record.
         STM   R14,R2,SAV14TO2     Save all the end registers
         LA    R1,PRMPRINT         Point to the parm area to be passed
         LA    R0,0                Zero out register
         ICM   R0,7,MSGNUM         Load with block number information
         ST    R0,0(,R1)           Pass it to first word of parm
         LA    R0,REC130           Address of data to be printed
         ST    R0,4(,R1)           Store it in second word of parm
         L     R0,0                Zero for third parameter
         ST    R0,8(,R1)           Store null third parameter
         LA    R0,USERID
         ST    R0,12(,R1)          Fourth parameter is USERID
         LA    R0,DDNFLAG
         MVI   EXECMODE,X'04'
         ST    R0,16(,R1)
         L     R15,BDMPRPGM        Load entry point of print program
         BALR  R14,R15             Pass control to it
         LM    R14,R2,SAV14TO2     Restore all the end registers
* --- >>
         USING USMSG,R4
         ICM   R4,7,USMNEXT        RRN OF NEXT MESSAGE
         DROP  R4
         SPACE
         FREEDBUF MSGECB,          DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         SPACE
*--------------------------------------------------------------------*
*        TEST TO SEE IF THERE WILL BE ANOTHER RECORD AFTER THIS ONE
*        IN THE CHAIN.  IF 'USMPTR' IS INDEED ZERO, THEN WE ARE
*        FINISHED PROCESSING THIS CHAIN AND ARE READY TO DETERMINE
*        IF WE SHOULD BUILD ENTRY 1, 2, OR 3 SHOWING HOW MANY MSGS
*        A USER HAS OUTSTANDING.
*--------------------------------------------------------------------*
         SPACE
         LTR   R4,R4
         BNZ   ALTCODE
         AP    RECCNT,=P'1'
         CP    RECCNT,=P'2'        TEST MID RANGE
         BL    LINE1               LOWER
         BH    LINE3               HIGHER
         BE    LINE2               .MIDRANGE
LINE1    DS    0H
         MVC   MSGCNT1,MASK10
         MVC   USERID1,USERID
         ED    MSGCNT1,MSGCOUNT
         B     ZAPCNT
         SPACE
LINE2    DS    0H
         MVC   MSGCNT2,MASK10
         MVC   USERID2,USERID
         ED    MSGCNT2,MSGCOUNT
         B     ZAPCNT
         SPACE
LINE3    DS    0H
         MVC   MSGCNT3,MASK10
         MVC   USERID3,USERID
         ED    MSGCNT3,MSGCOUNT
         LA    R9,USERLINE
         BAL   R10,PRINT
         MVC   MSGCNT1,=CL10' '
         MVC   MSGCNT2,=CL10' '
         MVC   MSGCNT3,=CL10' '
         MVC   USERID2,=CL7' '
         MVC   USERID3,=CL7' '
         ZAP   RECCNT,=P'0'
ZAPCNT   DS    0H
         ZAP   MSGCOUNT,=P'0'
NOMSG    DS    0H
         LA    R3,13(R3)           BUMP TO NEXT ENTRY
         BCT   R6,USRLOOP          REPEAT FOR NINE TIMES
         SPACE
*--------------------------------------------------------------------*
*        END OF INNER LOOP
*--------------------------------------------------------------------*
         SPACE
         FREEDBUF SCNECB,          DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         SPACE
         CLC   SAVERBA,=3X'00'     IS THIS LAST
         BNE   INDEXLP             GO DO NEXT ONE
         CP    RECCNT,=P'0'
         BE    PUTUCNT
         LA    R9,USERLINE         POINT TO LINE TO PRINT
         BAL   R10,PRINT
PUTUCNT  DS    0H
         LA    R9,USERDASH
         BAL   R10,PRINT
         MVC   USERCNT,MASK10
         ED    USERCNT,USERS       HOW MANY USERS ARE THERE
         LA    R9,UTOTLINE         POINT TO LINE TO PRINT
         BAL   R10,PRINT
         L     R7,TYPETBLA              ONCE MORE THRU TYPETAB HD DEC97 018
VERFLOOP DS    0H
         CLI   0(R7),X'99'         END YET?
         BE    ENDVERF
         CLI   0(R7),X'03'         IS THIS STILL AN 03
         LA    R7,1(R7)            BUMP EITHER WAY
         BNE   VERFLOOP
         AP    UNUSABL,=P'1'
         B     VERFLOOP
         SPACE
*--------------------------------------------------------------------*
*        END OF OUTER LOOP
*--------------------------------------------------------------------*
         SPACE
ENDVERF  DS    0H
         MVC   UNUSDCNT,MASK10
         ED    UNUSDCNT,UNUSABL
         LA    R9,JUNKLINE         POINT TO LINE TO PRINT
         BAL   R10,PRINT
         LA    R9,JUNKLIN2         POINT TO LINE TO PRINT
         BAL   R10,PRINT
         LA    R9,JUNKLIN3         POINT TO LINE TO PRINT
         BAL   R10,PRINT
         SPACE
*--------------------------------------------------------------------*
*        TIME TO CLOSE AND END THE PROGRAM, BYE.
*--------------------------------------------------------------------*
         SPACE
CLOSE    DS    0H
         CLOSE BRODCAST
         CLOSE BRODMAP
         TM    DDNFLAG,X'01'      Is BRODPRNT DDNAME present?
         BZ    NCBRDPRT
         ST    R6,SAVER6
         L     R6,BRODPDCB
         CLOSE ((6))
         L     R6,SAVER6
NCBRDPRT DS    0H
         TM    DDNFLAG,X'02'      Is BRODUSER DDNAME present?
         BZ    NCBRDUSR
         ST    R6,SAVER6
         L     R6,BRODUDCB
         CLOSE ((6))
         L     R6,SAVER6
NCBRDUSR DS    0H
FREENOTE DS    0H                                                       020
         L     R1,NOTETBLA              Address of Table                020
         L     R0,NOTGTSIZ              Length of Table                 020
         FREEMAIN RU,LV=(0),A=(1)       Free Note Directory Table       020
FREETYP  DS    0H                                              HD DEC97 020
         L     R1,TYPETBLA              ADDRESS OF TABLE       HD DEC97 020
         LH    R0,HIGHVAL               LENGTH OF TABLE        HD DEC97 020
         AH    R0,=H'1'                 INCREMENT BY ONE       HD DEC97 020
         FREEMAIN RU,LV=(0),A=(1)       FREE TYPE TABLE        HD DEC97 020
EOJ0     DS    0H
         LA    R5,0                    Zero Return Code
         B     EOJ
EOJ4     DS    0H
         LA    R5,4                    RC = 4
         B     EOJ
EOJ8     DS    0H
         LA    R5,8                    RC = 8
         B     EOJ
EOJ12    DS    0H
         LA    R5,12                   RC = 12
         B     EOJ
EOJ16    DS    0H
         LA    R5,16                   RC = 16
         B     EOJ
EOJ      DS    0H
         L     R13,SAVE+4
         LR    R15,R5              Load return code into R15.
         ST    R15,16(,R13)        Put RC into passed save area.
         LM    R14,R12,12(R13)
         BR    R14                 Go back to system.
         SPACE
*--------------------------------------------------------------------*
*        PRINT OUTPUT SUBROUTINE.
*--------------------------------------------------------------------*
         SPACE
PRINT    DS    0H
         PUT   BRODMAP,(R9)        WRITE FROM AREA ADDRESS IN R9
         BR    R10                 RETURN TO WHENCE WE CAME
         SPACE
*--------------------------------------------------------------------*
*        DATA CONTROL BLOCKS FOLLOW.
*--------------------------------------------------------------------*
         SPACE
BRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X
               BLKSIZE=129,        LENGTH OF FILES BLOCK               X
               DSORG=DA,           IS DIRECT ACCESS FILE               X
               MACRF=RISC,         3 BYTE RBA, DYNAMIC BUF, READ/CHECK X
               OPTCD=R,            3 BYTE RBA WILL BE USED             X
               RECFM=F,            FIXED LENGTH                        X
               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X
               KEYLEN=1,           SIZE OF KEY                         X
               BUFL=130,           KEYLEN + BLKSIZE                    X
               EXLST=JFCB1
         SPACE
BRODMAP  DCB   DDNAME=BRODMAP,DSORG=PS,LRECL=133,MACRF=PM,RECFM=FBA
         SPACE
         DS    0F                  NEEDED FOR CORRECT EXLST
JFCB1    DC    X'87'
         DC    AL3(INFMJFCB)
         IEFJFCBN LIST=YES
         LTORG
         SPACE
*--------------------------------------------------------------------*
*        DATA AREAS FOLLOW.
*--------------------------------------------------------------------*
         SPACE
CVDAREA  DS    D
SAVE     DC    18F'0'
TYPETBLA DS    F       Address of GETMAINED Type Table         HD
NOTETBLA DS    F       Address of GETMAINED Notice Directory Table
NOTGTSIZ DS    F
CURNOTBL DS    F       Address of beginning of data in Note dir table
HIGHVAL  DS    F
SAVHDADR DS    F                   SAVE HEADER ADDRESS         SG MAY99
BDMPRPGM DS    F                   BDMPRINT entry point
BRODPDCB DS    F                   BRODPRNT DCB in BDMPRINT program
BRODUDCB DS    F                   BRODUSER DCB in BDMPRINT program
SAVRG45  DC    2F'0'               Save Regs 4 and 5 for NDTABLE build
SAVER1   DS    F                   Save Register 1
SAVER3   DS    F                   Save Register 3
SAVER5   DS    F                   Save Register 5
SAVER5A  DS    F                   Save Register 5
SAVER6   DS    F                   Preserve R6 during BRODPRNT handling
SAVER6A  DS    F                   Save Register 6
SAVER10  DS    F                   Save Register 10
SAVEKEYA DS    F                   Save Key address
PARMSAVE DS    F                   Save passed PARM address if any
SAV14TO2 DC    6F'0'
SAVEINF1 DS    CL8                 PLACE TO STORE CCHHR
SAVERBA  DS    CL3                 SAVE LOCAL OF USER INDEX
NOTEDRBA DS    CL3                 Save RBA of Notify Directory f/headr
FRSRCRBA DS    CL3                 Save RBA of Free Search Rcd f/header
NUMNOTCS DS    CL2                 Number of Notices slots in BRODCAST
         DC    C' '                Initialized at beginning of program
BLANK44  DC    CL44' '             General Blanks if needed
PWKAREA  DC    CL3' '              For uppercasing the PARM
ALLPRINT DC    X'00'
* - - - - - - - - - - -  - - - - - <<<<<<<<<<< >>>>>>>>>>>   below
*   Keep DDNFLAG and EXECMODE and FFACTREC and FFMRKREC together!
DDNFLAG  DC    X'00'               Results of TIOT scan
*              X'01'               BRODPRNT DD is coded in JCL
*              X'02'               BRODUSER DD is coded in JCL
*              X'04'               SYSIN    DD is coded in JCL
EXECMODE DC    X'00'               Execution mode of BDMPRINT program
*              X'01'               Header Record only
*              X'02'               Notice Messages Directory Mode
*              X'04'               BRODUSER mode
FFACTREC DC    X'00'               FF actual record number on track
FFMRKREC DC    X'00'               FF marked record number on track
* - - - - - - - - - - -  - - - - - <<<<<<<<<<< >>>>>>>>>>>   above
REC130   DS    0CL130              Dump Record made with Key+Data
KEYHOLD  DC    XL1'00'             Key slot
RECHOLD  DC    XL129'00'           Data slot
INCORGEN DS    F
ZEROS    DC    XL7'00'             Zero Userid Entry
*EXTAB   DC    CL16'0123456789ABCDEF'
         DS    0F
BLOCKNO  DC    X'000000'           BLOCK NUMBERS
MSGNUM   DS    CL3                 SAVE LOCAL OF USER INDEX
MASK3    DC    XL3'202120'
MASK4    DC    XL4'40202120'
MASK46   DC    XL6'402020202120'
MASK46A  DC    XL6'404020202120'
MASK7    DC    XL7'4020206B202120'
MASK10   DC    XL10'40202020202020202120'
RECCNT   DC    PL1'0'
MSGCOUNT DC    PL5'0'
NOTDIR   DC    PL5'0'              CT FOR NOTICE DIRECTORY RECS
USRIND   DC    PL5'0'              CT FOR USER MAIL DIRECTORY RECS
NOTMSG   DC    PL5'0'              CT FOR NOTICE MSG RECS
USRMSG   DC    PL5'0'              CT FOR USER MAIL MSG RECS
PTRMSG   DC    PL5'0'              CT FOR POINTER REC (ALWAYS 1) JDM1
REC04    DC    PL5'0'              CT FOR MASTER REC (ALWAYS 1)  JDM0
FREEREC  DC    PL5'0'              CT FOR INACTIVE MAIL MSG RECS
BADFREC  DC    PL5'0'              CT FOR BAD X'FF' RECORDS
UNUSABL  DC    PL5'0'
USERS    DC    PL5'0'
ACTNOT   DC    PL5'0'              Number of active Notify messages
INANOT   DC    PL5'0'              Number of inactive Nofify messages
NOTRBA   DC    X'000000'           Current Notice RBA
NOTNUM   DC    X'0000'             Current Notice Number
HINRBA   DC    X'000000'           Hi Notices RBA
LONRBA   DC    X'000000'           Lo Notices RBA
TYPE00   DC    CL50'Number of BRODCAST "Notices" Directory Records'
TYPE01   DC    CL50'Number of USER "Mail" Directory Records'
TYPE02   DC    CL50'Number of BRODCAST "Notices" Message Records'
TYPE03   DC    CL50'Number of USER "Mail" Message Records'
TYPE04   DC    CL50'Count  of BRODCAST Header Record (Should be 1)'
TYPE05   DC    CL50'Count  of Free Search Record (Should be 1)'
TYPEFF   DC    CL50'Number of Empty USER "Mail" Record Slots'
BADRFF   DC    CL50'Number of Bad  empty "Mail" Record Slots'
BADRMSG  DC   CL51'(BRODCAST DATASET UNUSABLE! Fix with BDMDSFIX pgm.)'
ODDKEY   DC    CL133'  ** Unknown Key Type Encountered :    **'
TABLERR  DC    CL133'  ** Keys have been updated during this run **'
BREAKOUT DC    CL133'0< Record counts from the BRODCAST Keys       >'
NOTFYOUT DC    CL133'0< Statistics about Global "Notices" Messages >'
USERSOUT DC    CL133'0< The Following Users Have Messages Waiting  >'
USERDASH DC    CL133'    ----------------------------------------------X
               --------------------'
NDCREERR DC    CL133'   Notify Directory Table Read Error  -  1'
MESNOFFL DC    C'This BRODCAST Dataset IS NOT IN USE by the system.'
MESYOFFL DC    C'This BRODCAST Dataset IS IN USE by the system.'
*
USERID   DS    CL7
         SPACE
*--------------------------------------------------------------------*
*--              M E S S A G E   L A Y O U T S                     --*
*--------------------------------------------------------------------*
         SPACE
USERIMSG DS    0CL133
         DC    CL8'-   *** '
USERITXT DC    CL31'Chain of Messages for USERID:  '
USERIDM  DC    CL7'       '
         DC    CL5'  -- '
         DC    CL8' Start: '
USERISTH DC    CL7'       '
         DC    CL6' End: '
USERIENH DC    CL7'       '
         DC    CL54' '
         SPACE
*--------------------------------------------------------------------*
USERMSNM DS    0CL133
         DC    CL1' '
USERMTXT DC    CL15'Message Number '
USERMSNO DC    CL7'       '
         DC    CL14' for Userid:  '
USERIDX  DC    CL7'       '
         DC    CL89' '
         SPACE
*--------------------------------------------------------------------*
         SPACE
ACTNOMSG DS    0CL133
         DC    CL10' '
ACTNMSG  DC    CL50'Number of Active BRODCAST Notices Messages    '
ACTNNUM  DC    CL10'       '
         DC    CL63' '
         SPACE
*--------------------------------------------------------------------*
         SPACE
INANOMSG DS    0CL133
         DC    CL10' '
INANMSG  DC    CL50'Number of Inactive BRODCAST Notices Messages  '
INANNUM  DC    CL10'       '
         DC    CL63' '
         SPACE
*--------------------------------------------------------------------*
         SPACE
KEYCOUNT DS    0CL133
         DC    CL10' '
KEYTYPE  DC    CL50'Header Records'
KEYCNT   DC    CL10'         1'
         DC    CL63' '
         SPACE
*--------------------------------------------------------------------*
         SPACE
MAXIMUM  DS    0CL133
         DC    CL60'0Total Available Blocks in Dataset'
MAXCNT   DS    CL10
         DC    CL63' '
         SPACE
*--------------------------------------------------------------------*
         SPACE
DSNAMET  DS    0CL133
         DC    CL30'-BRODCAST Dataset Name  : '
DSNAMEN  DS    CL44
         DC    CL59' '
         SPACE
*--------------------------------------------------------------------*
         SPACE
DSVOLST  DS    0CL133
         DC    CL30' BRODCAST Dataset Volser: '
DSVOLSN  DS    CL6
         DC    CL97' '
         SPACE
*--------------------------------------------------------------------*
         SPACE
NOTICES  DS    0CL133
         DC    CL60' Blocks Required for Notify Service (Directory+MessX
               ages)'
NOTCNT   DS    CL10
         DC    CL63' '
         SPACE
*--------------------------------------------------------------------*
         SPACE
USERLINE DS    0CL133
         DC    CL4' '
USERID1  DS    CL7
         DC    CL1' '
MSGCNT1  DS    CL10
         DC    CL6'  |   '
USERID2  DS    CL7
         DC    CL1' '
MSGCNT2  DS    CL10
         DC    CL6'  |   '
USERID3  DS    CL7
         DC    CL1' '
MSGCNT3  DS    CL10
         DC    CL63' '
         SPACE
*--------------------------------------------------------------------*
         SPACE
UTOTLINE DS    0CL133
         DC    CL60' Number of TSO Users Defined in this BRODCAST datasX
               et:'
USERCNT  DS    CL10
         DC    CL63' '
         SPACE
*--------------------------------------------------------------------*
TITLINE  DS    0CL133
         DC    C'1'
         DC    CL3' '
         DC    CL6'---'
         DC    CL79'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM   -X
               --'
         DC    CL46' '
         SPACE
*--------------------------------------------------------------------*
         SPACE
CPYRLINE DS    0CL133
         DC    C'0'
         DC    CL3' '
* -->                               Currently 77 characters
         DC    C'&COPYRGT'
         DC    C'&COPYRSV'
* -->
         DC    CL52' '
         SPACE
*--------------------------------------------------------------------*
         SPACE
REPTLN01 DS    0CL133
         DC    C'-'
         DC    CL3' '
         DC    CL6'---'
         DC    CL51'&PGMNAME   ---   BRODCAST Dataset Summary Report  '
         DC    C' ---'
         DC    CL68' '
*--------------------------------------------------------------------*
         SPACE
REPTLN02 DS    0CL133
         DC    C'-'
         DC    CL2' '
         DC    CL6'---'
         DC    CL43'&PGMNAME   ---   BRODCAST Dataset - Record '
         DC    CL17'Display Report   '
         DC    C'--- '
         DC    CL60' '
*--------------------------------------------------------------------*
         SPACE
REPTUL02 DS    0CL133
         DC    C'-'
         DC    CL2' '
         DC    CL6'---'
         DC    CL42'&PGMNAME   ---   BRODCAST Userid Messages '
         DC    CL17'Display Report   '
         DC    C'--- '
         DC    CL61' '
*--------------------------------------------------------------------*
         SPACE
JUNKLINE DS    0CL133
         DC    CL60'0Blocks found to be Orphaned (not connected to a UsX
               erid):'
UNUSDCNT DC    CL10' '
         DC    CL63' '
         SPACE
*--------------------------------------------------------------------*
         SPACE
JUNKLIN2 DS    0CL133
         DC    CL65' (Use the BDMDIAG TSO command to display and/or del-
               ete these.)'
         DC    CL2' '
         DC    CL66' '
         SPACE
*--------------------------------------------------------------------*
         SPACE
JUNKLIN3 DS    0CL133
         DC    CL75' (BDMDIAG REPORT reports orphaned blocks, and BDMDI-
               AG DELBAD deletes them.)'
         DC    CL2' '
         DC    CL56' '
         SPACE
PRMPRINT DS    0F
PRMDRCNO DS    F                   RBA number of record in BRODCAST
PRMDRCAD DS    F                   Address of 130-byte record to be
*                                   printed and optionally formatted.
PRMNDTBL DS    F                   Pointer to incore Notices Directory
*                                   Table, zero if it isn't there.
         DC    C' '                                                      05250
LINE     DC    CL133' '                                                  05251
*--------------------------------------------------------------------*
* --------------------------------------------------------- *
*    BAL REGISTER IS R4.
* --------------------------------------------------------- *
HEX      DS    0H
         MVC   1(1,R15),0(R1)        Move byte
         UNPK  0(3,R15),1(2,R15)     Unpack
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)           Increment output pointer
         LA    R1,1(,R1)             Increment input pointer
         BCT   R0,HEX                Decrement length, then loop
         MVI   0(R15),C' '           Blank the trailing byte
         BR    R4                    Return to caller
HEXTAB   DC    C'0123456789ABCDEF'   Translate table
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEXSAVE  DS    3F                    Register save for HEX macro
SAV4HEX  DC    F'0'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*
*--------------------------------------------------------------------*
         SPACE
         EJECT
*----------------------------------------------------------------*
*        THE FOLLOWING IS TAKEN FROM AN OLD MVS MANUAL CALLED
*        "OS/VS2 MVS CONVERSION NOTEBOOK" (GC28-0689-6) AND
*        CONTAINS THE FOLLOWING REFERENCE TO HOW THE BROADCAST
*        HAS CHANGED FROM OS/MVT AND SVS TO MVS:
*
*        'MODIFIED TO INCLUDE A CHANGE LEVEL INDICATOR IN THE
*        HEADER RECORD AND A NEW FIELD FOR EACH USER ID IN THE
*        MAIL DIRECTORY RECORDS. THIS FIELD CONTAINS THE
*        ADDRESS OF THE LAST MESSAGE IN THE CHAIN OF MESSAGES
*        ASSOCIATED WITH EACH NEW USER.'
*
*        NOTE: UNTIL I CAN DUMP RECORDS AND FIGURE OUT WHERE THE
*              ABOVE STATEMENTS FIT INTO THE DSECTS BELOW, WILL
*              LET IT TO THE READER TO HELP AND GET IT FIGURED
*              OUT BEFORE I DO.
*
*----------------------------------------------------------------*
         SPACE
         IEZBITS
         SPACE
         IEZIOB   DSECT=YES
         SPACE
         IKJZT301 DSECT=YES
         SPACE
         IKJZT302
         SPACE
         IKJZT303
         SPACE
         IKJZT304
         SPACE
         IKJZT305
         SPACE
         IKJZT306
         SPACE
         IKJEESCB
         END
BDMPRINT TITLE 'PRINT AND FORMAT RECORDS FROM THE BRODCAST DATASET'
*------------------------------------------------------------------*
*
*          B D M P R I N T                      VERSION  1.5.0A
*
*
*       Copyright (C) 1995-2025 Sam Golob Systems Programming LLC
*                 All Rights Reserved
*
*
*        This program hex prints records from the BRODCAST dataset.
*        It also formats the record, according to record type,
*        after the record has been hex printed out.
*
*------------------------------------------------------------------*
         EJECT
*------------------------------------------------------------------*
*
*        X'00'     BRODCAST 'NOTICES' DIRECTORY RECORD.
*
*        X'01'     USER 'MAIL' DIRECTORY RECORD.
*
*        X'02'     BROADCAST 'NOTICES' MESSAGE RECORD.
*
*        X'03'     USER 'MAIL' MESSAGE RECORD.
*
*        X'04'     FIRST RECORD OF BRODCAST DATA SET.
*
*        X'05'     RBA ADDRESS OF FIRST DUMMY RECORD AVAILABLE.
*
*        X'FF'     DUMMY INACTIVE 'MAIL' MESSAGE RECORD.
*
*                  (Note for X'FF' record types...)
*                   The first "record byte" has to be the
*                   record number in the track.  In other
*                   words, it has to be the R from the
*                   CCHHR or TTR of the particular block.
*                   If the first byte of an unused message
*                   record does not have this value, all
*                   hell breaks loose.  Therefore, when
*                   copying the BRODCAST dataset between
*                   two different DASD device types, this
*                   value has to be reset, otherwise the
*                   whole dataset can't do its thing.
*
*------------------------------------------------------------------*
*
*        This program is invoked as a subroutine.
*
*------------------------------------------------------------------*
*
* CHANGE LOG:
*
*------------------------------------------------------------------*
         EJECT
*------------------------------------------------------------------*
         MACRO
         IKJZT301  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*
*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                                RECORD 1                             *
*                                                                     *
*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *
*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *
*        CONCERNING THE DATA SET.                                     *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
R1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET
         AGO   .SKIP
.NODSECT ANOP
R1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET
.SKIP    ANOP
R1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW
R1BCFLGS DS    B -            NOTICES FLAGS - NOT USED
R1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST
*                               NOTICES DIRECTORY RECORD
R1USPTRP DS    0A -           SAME AS R1USPTR BELOW
R1USFLGS DS    B -            USER MAIL FLAGS - NOT USED
R1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD
R1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS
R1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -
*                               FROM MASTER SCHEDULER BASEA, BABCMAX
*                                                                     *
R1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =
*                               ' SYS1.BRODCAST DATA SET '
R1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS
*                               A 1-DIGIT NUMBER
         DS    CL1            RESERVED
R1FRESRH DS    CL3            RBA OF FREE SEARCH RECORD
R1GENNUM DS    F              GENERATION NUMBER FOR IN-STORAGE
*                               NOTICE TABLE
         DS    CL76 -         RESERVED
         MEND
         MACRO
         IKJZT302  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*
*        IKJZT302      RELEASE=OS/VS2.2   LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                        NOTICES DIRECTORY RECORD                     *
*                                                                     *
*        THE BROADCAST NOTICES DIRECTORY RECORD (BCDIR) HAS BROADCAST *
*        MESSAGE NUMBERS AND A POINTER TO THE MESSAGE RECORD          *
*        ASSOCIATED WITH EACH MSG. NUMBER.                            *
*                                                                     *
*        NOTE: THIS MACRO USES EQUATES GENERATED BY 'IEZBITS' MACRO.  *
*              THEREFORE, THE IEZBITS MACRO MUST BE CODED             *
*              PREVIOUS TO CALLING THIS MACRO.                        *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
BCDIR    DSECT , -
         AGO   .SKIP
.NODSECT ANOP
BCDIR    DS    0F
.SKIP    ANOP
BCDNENT  EQU   25             NUMBER OF ENTRIES
BCDENTRY DS    0CL5 -         ENTRY FOR 1 BROADCAST MSG NO.
BCDMFLG  DS    0BL1 -         BROADCAST DIRECTORY MSG. FLAG:
BCDNOMSG EQU   BIT0
*                               '1' = NO NOTICES MSG ASSIGNED
*                                     TO THIS MSG NUMBER
*                               '0' = NOTICES MSG FOR THIS NUMBER
*                                     IS ASSIGNED
BCDMSGNO DS    FL2 -          BROADCAST NOTICES MSG NO. IN HEX
BCDMRBA  DS    AL3 -          RELATIVE BLOCK ADDR OF NOTICE MSG RCD
         DS    24CL5 -        RESERVE SPACE FOR 24 MORE ENTRIES
*                               IDENTICAL IN FORMAT TO 'BCDENTRY'
BCDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'
BCDNEXT  DS    AL3 -          CHAIN PTR TO NEXT NOTICE DIRECTORY RCD
*                               (ZERO IF LAST)
         MEND
         MACRO
         IKJZT303   &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*
*        IKJZT303      RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                         NOTICES MESSAGE RECORD                      *
*                                                                     *
*          THE BRODCAST NOTICES MESSAGE RECORD (BCMSG) IS A           *
*          RECORD IN THE SYS1.BRODCAST DATA SET WHICH CONTAINS A      *
*          NOTICES MESSAGE INTENDED FOR ALL USERS.                    *
*                                           10/1/72     LEVEL=1       *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
BCMSG    DSECT , -            BRODCAST NOTICES MESSAGE RECORD
         AGO   .SKIP
.NODSECT ANOP
BCMSG    DS    0F -           BRODCAST NOTICES MESSAGE RECORD
.SKIP    ANOP
BCMLNG   DS    FL1 -          LENGTH OF BRODCAST NOTICES MSG TEXT
BCMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)
         DS    XL3 -          RESERVED
         MEND
         MACRO
         IKJZT304  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*
*        IKJZT304       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                       USER MAIL DIRECTORY RECORD                    *
*                                                                     *
*        THE USER MAIL DIRECTORY RECORD (USDIR) IS A LOGICAL          *
*        DIRECTORY RECORD IN THE SYS1.BRODCAST DATA SET.              *
*        THE DIRECTORY CONTAINS USERIDS AND PTRS TO THE FIRST AND     *
*        LAST MESSAGE FOR EACH USERID.                                *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
USDIR    DSECT , -            USER MAIL DIRECTORY RECORD
         AGO   .SKIP
.NODSECT ANOP
USDIR    DS    0F -           USER MAIL DIRECTORY RECORD
.SKIP    ANOP
USDENTRY DS    0CL13 -        DIRECTORY ENTRY FOR 1 USERID
USDID    DS    CL7 -          USERID (LEFT JUSTIFIED, PADDED W/ BLANKS)
USDRBA   DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST
*                               MESSAGE FOR THIS USERID (ZERO IF NONE)
USDEND   DS    AL3 -          RBA OF LAST MESSAGE FOR THIS USERID
*                               (ZERO IF NONE)
         DS    8CL13 -        RESERVE SPACE FOR 8 MORE DIRECTORY
*                               ENTRIES IDENTICAL IN FORMAT TO THE
*                               PRECEDING 'USDENTRY'
         DS    XL8 -          RESERVED
USDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'
USDNEXT  DS    AL3 -          CHAIN PTR TO NEXT USER MAIL DIRECTORY
*                               RECORD (ZERO IF LAST)
         MEND
         MACRO
         IKJZT305  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*
*        IKJZT305       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                        USER MAIL MESSAGE RECORD                     *
*                                                                     *
*        THE USER MAIL MESSAGE RECORD (USMSG) IS A RECORD IN          *
*        THE SYS1.BRODCAST DATA SET WHICH CONTAINS A MAIL MESSAGE     *
*        INTENDED FOR A PARTICULAR USERID.                            *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
USMSG    DSECT , -            USER MAIL MESSAGE RECORD
         AGO   .SKIP
.NODSECT ANOP
USMSG    DS    0F -           USER MAIL MESSAGE RECORD
.SKIP    ANOP
USMLNG   DS    FL1 -          LENGTH OF MAIL MSG TEXT
USMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)
USMNEXT  DS    AL3 -          CHAIN PTR TO NEXT MAIL MESSAGE RECORD
*                               FOR THIS USERID (ZERO IF LAST)
         MEND
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    DS    0H
         ST    R4,SAV4HEX
         STM   R15,R1,HEXSAVE
         LA    R1,&FROM
         LA    R0,&LEN
         LA    R15,&TO
         BAL   R4,HEX
         L     R4,SAV4HEX
         LM    R15,R1,HEXSAVE
         MEND
         SPACE
R0       EQU   0                   Work, system
R1       EQU   1                   Address of PARM list
R2       EQU   2
R3       EQU   3                   USING for DSECTs
R4       EQU   4                   Work, BAL Register for HEX routine
R5       EQU   5                   Work
R6       EQU   6                   Work
R7       EQU   7                   BAL Register, usually
R8       EQU   8                   Work - BCT
R9       EQU   9                   Fourth Base Register
R10      EQU   10                  Third Base Register
R11      EQU   11                  Second Base Register
R12      EQU   12                  First Base Register
R13      EQU   13                  SAVE-AREA ADDRESS
R14      EQU   14                  ULTIMATE RETURN ADDRESS
R15      EQU   15                  ENTRY-PT ADDR, WORK REG, RET CODE
         SPACE
         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV
         LCLC  &PGMNAME
&VERSNUM SETC  ' 1.5.0A'
&PKGNAME SETC  'BRODMSTR'
&PKGTITL SETC  'Broadcast Master'
&VERTITL SETC  ' Version '
&COPYRGT SETC  'Copyright (c) 1995-2025 Sam Golob Systems Programming'
&COPYRSV SETC  ' LLC - All Rights Reserved  '
&PGMNAME SETC  'BDMPRINT'
&PGMNAME AMODE 24
&PGMNAME RMODE 24
&PGMNAME CSECT
         B     BEGINN-*(,R15)
         DC    CL8'&PGMNAME'
         DC    C' '
         DC    C'&PKGTITL'
         DC    C'&VERTITL'
         DC    C'&VERSNUM'
         DC    C' '
         DC    C'&COPYRGT'
         DC    C'&COPYRSV'
         DC    CL16' &SYSDATE &SYSTIME '
         DC    CL6'HLASM '
         DC    C'&SYSVER'
         DC    C' '
BEGINN   DS    0H
         STM   R14,R12,12(R13)     Save Registers
         LR    R5,R1               Save PARM address
         LR    R12,R15             LOAD ENTRY ADDRESS
         USING BDMPRINT,R12,R11,R10,R9  Establish Addressability
         LA    R11,4095(,R12)           4 base registers
         LA    R11,1(,R11)
         LA    R10,4095(,R11)
         LA    R10,1(,R10)
         LA    R9,4095(,R10)
         LA    R9,1(,R9)
         LR    R15,R13             Save his save address
         LA    R13,SAVE            Get our save area address
         ST    R15,SAVE+4          Save off into low savearea
         ST    R13,8(,R15)         Chain mine back to his
         LR    R1,R5               Get PARM address
         ST    R1,SAVPARMS         And save it.
         MVI   BLANK44-1,X'40'
         MVC   BLANK44,BLANK44-1
         USING PRMDSECT,R5
         MVI   DDNFLAG,X'00'
         MVI   NTHRDFLG,X'00'      Initialize third parm flag to zero
         MVI   ACTNTFLG,X'00'      Initialize Active Notice flag
         L     R1,0(,R5)           Get hex RBA number from parm
         ST    R1,SAVRNHEX         And save it to the program
         L     R1,4(,R5)           Get 130-bytes of record
         MVC   REC130A(130),0(R1)  And save it so we can see it
         L     R1,8(,R5)           Look at third parm address
         LTR   R1,R1               Is it zero?
         BNZ   HASTHIRD            No. Don't flag that it's missing.
         MVI   NTHRDFLG,X'01'      Yes. Flag third parm as missing.
HASTHIRD DS    0H                  ND Table exists
         ST    R1,NOTETBLB         Load Notify Directory Table address
         L     R1,12(,R5)
         LTR   R1,R1
         BZ    NOTFORTH
         MVC   USERID1(7),0(R1)
         MVI   USERFLAG,X'01'
NOTFORTH DS    0H
         L     R1,16(,R5)
         MVC   DDNFLAG(1),0(R1)
         MVC   EXECMODE(1),1(R1)
         MVC   FFACTREC(1),2(R1)
         MVC   FFMRKREC(1),3(R1)
         DROP  R5
* -------------------------------------------------------- *
         TM    USERFLAG,X'01'
         BO    PRNTUSER
PRNTSTRT DS    0H
         MVI   LINE-1,X'40'        Initialize with
         MVI   HEXPRTWK-1,X'40'       blanks
         L     R1,SAVPARMS         Get address of the PARMs back
         L     R5,0(,R1)           Get RBA number
         CVD   R5,DWORK            Convert it to decimal
         MVC   RECRDDEC,MASK7A     Move in the mask
         ED    RECRDDEC,DWORK+5    Edit the number in
         TM    DDNFLAG,X'01'
         BZ    NOPRT003
         MVC   LINE(133),LINE-1    Clear output line                     04726
         MVC   LINE(133),RECRDMSG  Print record number in decimal
         PUT   BRODPRNT,LINE
         MVC   LINE(133),LINE-1    Clear output line                     04726
         HEX   RECRDHEX,3,SAVRNHEX+1  Run HEX value of record number in
         MVC   LINE(133),RECRDMHX     Move it to print message for hex.
         PUT   BRODPRNT,LINE
* --------------------------------------------------------- *            04690
HEXPRINT DS    0H                  Hex Print from Tape Data (INAREA)     04691
         ST    R5,R5HXPRT          Save register.                        04695
         L     R5,=A(TRTCSECT)     Point to translation table CSECT.     04696
         USING TRTCSECT,R5                                               04697
*                                                                        04702
HEXPRNXX DS    0H                                                        04715
         L     R2,=F'130'          MAKE SURE R2 HAS 130 BYTE LENGTH      04717
MOVESIZ1 DS    0H                                                        04720
         MVC   HEXPRTWK(133),HEXPRTWK-1 CLEAR OUTPUT AREA                04721
         BCTR  R2,0                ONE LESS FOR EXECUTE                  04722
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04723
         EX    R2,MOVRULER         PUT IN HEX RULER                      04724
         PUT   BRODPRNT,LINE                                             04725
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04726
         EX    R2,MOVDATIN         Move the data in.                     04729
         EX    R2,TRHEXL0          TRANSLATE TO REMOVE UNPRINTABLES      04738
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04740
         EX    R2,MOVTOLIN         MOVE TRANSLATED DATA TO OUTPUT        04741
         PUT   BRODPRNT,LINE                                             04742
         EX    R2,MOVDATIN         Move the data back in.                04745
         EX    R2,TRHEXL1          TRANSLATE TO PRINT FIRST NIBBLE       04748
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04749
         EX    R2,MOVTOLIN         MOVE 1ST HALF OF HEX TO OUTPUT        04750
         PUT   BRODPRNT,LINE                                             04751
         EX    R2,MOVDATIN         Move the data back in.                04754
         EX    R2,TRHEXL2          TRANSLATE TO PRINT LAST NIBBLE        04757
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04758
         EX    R2,MOVTOLIN         MOVE 2ND HALF OF HEX TO OUTPUT        04759
         PUT   BRODPRNT,LINE                                             04760
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04761
         PUT   BRODPRNT,LINE       Print blank line.                     04760
** ---- >>>>>       Break in here to format header fields   -   below
         ST    R7,SAVRG7
         BAL   R7,FORMATRC
         L     R7,SAVRG7
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04761
         PUT   BRODPRNT,LINE       Print blank line.                     04760
** ---- >>>>>       Break in here to format header fields   -   above
NOPRT003 DS    0H
         B     HEXPREND                                                  04762
*
PRNTUSER DS    0H
         TM    DDNFLAG,X'02'
         BZ    NOUSR004
         MVI   LINE-1,X'40'        Initialize with
         MVI   HEXPRTWK-1,X'40'       blanks
         L     R1,SAVPARMS         Get address of the PARMs back
         L     R5,0(,R1)           Get RBA number
         CVD   R5,DWORK            Convert it to decimal
         MVC   RECRDDEC,MASK7A     Move in the mask
         ED    RECRDDEC,DWORK+5    Edit the number in
         MVC   LINE(133),LINE-1    Clear output line                     04726
         MVC   LINE(133),RECRDMSG  Print record number in decimal
         PUT   BRODUSER,LINE
         MVC   LINE(133),LINE-1    Clear output line                     04726
         HEX   RECRDHEX,3,SAVRNHEX+1  Run HEX value of record number in
         MVC   LINE(133),RECRDMHX     Move it to print message for hex.
         PUT   BRODUSER,LINE
* --------------------------------------------------------- *            04690
HEXPRUSR DS    0H                  Hex Print from Tape Data (INAREA)     04691
         ST    R5,R5HXPRT          Save register.                        04695
         L     R5,=A(TRTCSECT)     Point to translation table CSECT.     04696
         USING TRTCSECT,R5                                               04697
*                                                                        04702
HEXPRUXX DS    0H                                                        04715
         L     R2,=F'130'          MAKE SURE R2 HAS 130 BYTE LENGTH      04717
MOVESIZ2 DS    0H                                                        04720
         MVC   HEXPRTWK(133),HEXPRTWK-1 CLEAR OUTPUT AREA                04721
         BCTR  R2,0                ONE LESS FOR EXECUTE                  04722
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04723
         EX    R2,MOVRULER         PUT IN HEX RULER                      04724
         PUT   BRODUSER,LINE                                             04725
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04726
         EX    R2,MOVDATIN         Move the data in.                     04729
         EX    R2,TRHEXL0          TRANSLATE TO REMOVE UNPRINTABLES      04738
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04740
         EX    R2,MOVTOLIN         MOVE TRANSLATED DATA TO OUTPUT        04741
         PUT   BRODUSER,LINE                                             04742
         EX    R2,MOVDATIN         Move the data back in.                04745
         EX    R2,TRHEXL1          TRANSLATE TO PRINT FIRST NIBBLE       04748
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04749
         EX    R2,MOVTOLIN         MOVE 1ST HALF OF HEX TO OUTPUT        04750
         PUT   BRODUSER,LINE                                             04751
         EX    R2,MOVDATIN         Move the data back in.                04754
         EX    R2,TRHEXL2          TRANSLATE TO PRINT LAST NIBBLE        04757
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04758
         EX    R2,MOVTOLIN         MOVE 2ND HALF OF HEX TO OUTPUT        04759
         PUT   BRODUSER,LINE                                             04760
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04761
         PUT   BRODUSER,LINE       Print blank line.                     04760
** ---- >>>>>       Break in here to format header fields   -   below
         ST    R7,SAVRG7
         BAL   R7,FORMATRC
         L     R7,SAVRG7
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04761
         PUT   BRODUSER,LINE       Print blank line.                     04760
** ---- >>>>>       Break in here to format header fields   -   above
NOUSR004 DS    0H
         B     HEXPREND                                                  04762
MOVDATIN MVC   HEXPRTWK(*-*),REC130A      ***  EXECUTED  ***             04764
MOVRULER MVC   LINE+1(*-*),RULERHEX       ***  EXECUTED  ***             04765
MOVTOLIN MVC   LINE+1(*-*),HEXPRTWK       ***  EXECUTED  ***             04766
TRHEXL0  TR    HEXPRTWK(*-*),TRTBL0       ***  EXECUTED  ***             04768
TRHEXL1  TR    HEXPRTWK(*-*),TRTBL1       ***  EXECUTED  ***             04769
TRHEXL2  TR    HEXPRTWK(*-*),TRTBL2       ***  EXECUTED  ***             04770
R5HXPRT  DC    F'0'
         DC    C' '                                                      05250
HEXPRTWK DC    CL133' '                                                  05249
         DC    C' '                                                      05250
LINE     DC    CL133' '                                                  05251
HEXPREND DS    0H                                                        04771
         L     R5,R5HXPRT                                                04774
         DROP  R5                                                        04775
RETURN   DS    0H                                                        04194
         L     R13,4(,R13)                                               04214
         MVC   16(4,R13),=F'0'          Return code 0     in R15         04215
         LM    R14,R12,12(R13)                                           04217
         BR    R14                                                       04218
* --------------------------------------------------------- *            04777
         LTORG
         ENTRY BRODPRNT                                                  05425
BRODPRNT DCB   MACRF=PM,DDNAME=BRODPRNT,DSORG=PS,RECFM=FA,LRECL=133,   X 05426
               BLKSIZE=133                                               05427
         ENTRY BRODUSER                                                  05425
BRODUSER DCB   MACRF=PM,DDNAME=BRODUSER,DSORG=PS,RECFM=FA,LRECL=133,   X 05426
               BLKSIZE=133                                               05427
SAVE     DS    9D
DWORK    DC    D'0'
SAVPARMS DC    F'0'
SAVRECNO DC    F'0'
SAVRECAD DC    F'0'
SAVRG0   DC    F'0'
SAVRG3   DC    F'0'
SAVRG4   DC    F'0'
SAVRG4A  DC    F'0'
SAVRG6   DC    F'0'
SAVRG7   DC    F'0'
SAVRG7A  DC    F'0'
SAVRG7B  DC    F'0'
SAVRG7C  DC    F'0'
SAVRG7SB DC    F'0'
NOTETBLB DC    F'0'
NTHRDFLG DC    X'00'
USERFLAG DC    X'00'
ACTNTFLG DC    X'00'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - >>>>>>>>
DDNFLAG  DC    X'00'               Keep these four
EXECMODE DC    X'00'                 together......
FFACTREC DC    X'00'               FF actual record number on track
FFMRKREC DC    X'00'               FF marked record number on track
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - >>>>>>>>
USERID1  DC    CL7' '
NOTFMACT DC    CL8' ACTIVE '
NOTFMINA DC    CL8'inactive'
SAVRNHEX DC    F'0'
MASK7A   DC    XL7'40202020212020'
CURNDRBA DC    X'000000'           Current Notice RBA
CURNDNUM DC    X'0000'             Current Notice Number
NDNUMWRK DC    X'0000'             Work area for hi bit of notice numbr
NDRBAWRK DC    X'000000'           Work area to hold notice RBA
*
         DC    C' '                Initialized at beginning of program
BLANK44  DC    CL44' '             General Blanks if needed
*
FM001LST DC    CL43'This is the last Notices Directory Record. '
FM001DLS DC    CL16'                '
FM011LST DC    CL43'This is the last Userid Directory Record.  '
FM011DLS DC    CL16'                '
*
         DC    X'00'
REC130A  DC    130X'00'
RULERHEX DS    0CL130                                                    05255
         DC    C'K----+----1----+----2----+----3----+----4----+----5--'  05256
         DC    C'--+----6----+----7----+----8----+----9----+----0----+'  05257
         DC    C'----1----+----2----+----3----+----4'                    05258
RECRDMSG DS    0CL133
         DC    C' '
         DC    C'Relative Record Number in Decimal:  '
RECRDDEC DC    CL7' '
         DC    CL89' '
RECRDMHX DS    0CL133
         DC    C' '
         DC    C'Relative Record Number in Hex:      '
RECRDHEX DC    CL7' '
         DC    CL89' '
         SPACE
* --------------------------------------------------------- *            04777
* --       Record formatting print layout lines          -- *            04777
* --------------------------------------------------------- *            04777
FMT00LN0 DS    0CL133
         DC    CL6' '
         DC    CL6' **** '
         DC    CL27'Format of BRODCAST Notices '
         DC    CL27'Directory Record, Key X''00'''
         DC    CL6' **** '
         DC    CL61' '
* --------------------------------------------------------- *            04777
FMT00LN1 DS    0CL133
         DC    CL3' '
FM001NXT DC    CL43'RBA of next Notices Directory Record:      '
FM001HEX DC    CL7' '
         DC    CL4' '
FM001DLT DC    CL16'Decimal Value:  '
FM001DEC DC    CL7' '
         DC    CL62' '
* --------------------------------------------------------- *            04777
FMT00LN2 DS    0CL133
         DC    CL3' '
         DC    CL7'Slot #'
FM002DS1 DC    CL7'  '
         DC    CL3' '
         DC    CL9'Notice # '
FM002DN1 DC    CL7' '
         DC    CL5' Hex '
FM002HN1 DC    CL5' '
         DC    CL2' '
FM002AC1 DC    CL8' '
         DC    CL2' '
         DC    CL10'Hex RBA:  '
FM002HR1 DC    CL7' '
         DC    CL2' '
         DC    CL14'Decimal RBA:  '
FM002DR1 DC    CL7' '
         DC    CL48' '
* --------------------------------------------------------- *            04777
FMT01LN0 DS    0CL133
         DC    CL6' '
         DC    CL6' **** '
         DC    CL47'Format of BRODCAST Userid Dir Record, Key X''01'''
         DC    CL6' **** '
         DC    CL66' '
* --------------------------------------------------------- *            04777
FMT01LN1 DS    0CL133
         DC    CL3' '
FM011NXT DC    CL43'RBA of next Userid Directory Record:       '
FM011HEX DC    CL7' '
         DC    CL4' '
FM011DLT DC    CL16'Decimal Value:  '
FM011DEC DC    CL7' '
         DC    CL62' '
* --------------------------------------------------------- *            04777
FMT01L1A DS    0CL133
         DC    CL3' '
         DC    CL30' '
FMT01L1S DC    CL7' Start '
         DC    CL2' '
FMT01L1E DC    CL7'  End  '
         DC    CL84' '
* --------------------------------------------------------- *            04777
FMT01LN2 DS    0CL133
         DC    CL3' '
         DC    CL7'Slot #'
FM012SL1 DC    CL2'  '
         DC    CL3' '
         DC    CL9'Userid:  '
FM012US1 DC    CL7' '
         DC    CL2' '
FM012SH1 DC    CL7' '
         DC    CL2' '
FM012EH1 DC    CL7' '
         DC    CL2' '
         DC    CL16'Decimal Start:  '
FM012DS1 DC    CL7' '
         DC    CL14'Decimal End:  '
FM012DE1 DC    CL7' '
         DC    CL38' '
* --------------------------------------------------------- *            04777
FMT02LN0 DS    0CL133
         DC    CL6' '
         DC    CL6' **** '
         DC    CL48'Format of BRODCAST Notices Msg Record, Key X''02'''
         DC    CL6' **** '
         DC    CL66' '
* --------------------------------------------------------- *            04777
FMT02LN1 DS    0CL133
         DC    CL3' '
         DC    CL43'Length of this Notify Message :            '
FM021HEX DC    CL7' '
         DC    CL4' '
         DC    CL16'Decimal Value:  '
FM021DEC DC    CL7' '
         DC    CL53' '
* --------------------------------------------------------- *            04777
FMT02LN2 DS    0CL133
         DC    CL3' '
FMT22MSG DC    CL25'This NOTIFY record is an '
FMT22ACT DC    CL8'       '
FMT22LIT DC    CL10' message. '
         DC    CL87' '
* --------------------------------------------------------- *            04777
FMT02LN3 DS    0CL133
         DC    CL3' '
         DC    CL43'This Global Notice is Notice number:       '
FM023HEX DC    CL7' '
         DC    CL4' '
         DC    CL16'Decimal Value:  '
FM023DEC DC    CL7' '
         DC    CL62' '
* --------------------------------------------------------- *            04777
FMT03LN0 DS    0CL133
         DC    CL6' '
         DC    CL6' **** '
        DC    CL49'Format of BRODCAST User Message Record, Key X''03'''
         DC    CL6' **** '
         DC    CL66' '
* --------------------------------------------------------- *            04777
FMT03LN1 DS    0CL133
         DC    CL3' '
         DC    CL43'Length of this User Message :              '
FM031HEX DC    CL7' '
         DC    CL4' '
         DC    CL16'Decimal Value:  '
FM031DEC DC    CL7' '
         DC    CL53' '
* --------------------------------------------------------- *            04777
FMT03LN2 DS    0CL133
         DC    CL3' '
         DC    CL43'RBA of next chained message for this user: '
FM032HEX DC    CL7' '
         DC    CL4' '
         DC    CL16'Decimal Value:  '
FM032DEC DC    CL7' '
         DC    CL62' '
* --------------------------------------------------------- *            04777
FMT04LN0 DS    0CL133
         DC    CL8' '
         DC    CL6' **** '
         DC    Cl43'Format of BRODCAST Header Record, Key X''04'''
         DC    CL6' **** '
         DC    CL70' '
* --------------------------------------------------------- *            04777
FMT04LN1 DS    0CL133
         DC    CL3' '
         DC    CL41'RBA of First Notices Directory Record :  '
FM041HEX DC    CL7' '
         DC    CL4' '
         DC    CL16'Decimal Value:  '
FM041DEC DC    CL7' '
         DC    CL55' '
* --------------------------------------------------------- *            04777
FMT04LN2 DS    0CL133
         DC    CL3' '
         DC    CL41'RBA of First Userid Directory Record  :  '
FM042HEX DC    CL7' '
         DC    CL4' '
         DC    CL16'Decimal Value:  '
FM042DEC DC    CL7' '
         DC    CL55' '
* --------------------------------------------------------- *            04777
FMT04LN3 DS    0CL133
         DC    CL3' '
         DC    CL41'Total Number of Records in BRODCAST   :  '
FM043HEX DC    CL9' '
         DC    CL2' '
         DC    CL16'Decimal Value:  '
FM043DEC DC    CL7' '
         DC    CL55' '
* --------------------------------------------------------- *            04777
FMT04LN4 DS    0CL133
         DC    CL3' '
         DC    CL41'Maximum Record Number for Notices     :  '
FM044HEX DC    CL5' '
         DC    CL6' '
         DC    CL16'Decimal Value:  '
FM044DEC DC    CL7' '
         DC    CL55' '
* --------------------------------------------------------- *            04777
FMT04LN5 DS    0CL133
         DC    CL3' '
         DC    CL41'RBA of Free Search Record             :  '
FM045HEX DC    CL7' '
         DC    CL4' '
         DC    CL16'Decimal Value:  '
FM045DEC DC    CL7' '
         DC    CL55' '
* --------------------------------------------------------- *            04777
FMT04LN6 DS    0CL133
         DC    CL3' '
         DC    CL41'Gen Number for Incore Notices Table   :  '
FM046HEX DC    CL9' '
         DC    CL2' '
         DC    CL16'Decimal Value:  '
FM046DEC DC    CL7' '
         DC    CL55' '
* --------------------------------------------------------- *            04777
FMT05LN0 DS    0CL133
         DC    CL6' '
         DC    CL6' **** '
         DC    CL48'Format of BRODCAST Free Search Record, Key X''05'''
         DC    CL6' **** '
         DC    CL67' '
* --------------------------------------------------------- *            04777
FMT05LN1 DS    0CL133
         DC    CL3' '
         DC    CL33'RBA to start Free Search at:     '
FM051HEX DC    CL7' '
         DC    CL4' '
         DC    CL16'Decimal Value:  '
FM051DEC DC    CL7' '
         DC    CL63' '
* --------------------------------------------------------- *            04777
FMTFFLN0 DS    0CL133
FFBAD    DC    CL6' '
         DC    CL6' **** '
         DC    CL47'This is an empty User Message Record, Key X''FF'''
         DC    CL6' **** '
FFBADA   DC    CL58' '
         DC    CL2' '
FFBADER  DC    CL8' '
* --------------------------------------------------------- *            04777
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* -    S  U  B  R  O  U  T  I  N  E  S                          - *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* --------------------------------------------------------- *
*    BAL REGISTER IS R4.
* --------------------------------------------------------- *
HEX      DS    0H
         MVC   1(1,R15),0(R1)        Move byte
         UNPK  0(3,R15),1(2,R15)     Unpack
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)           Increment output pointer
         LA    R1,1(,R1)             Increment input pointer
         BCT   R0,HEX                Decrement length, then loop
         MVI   0(R15),C' '           Blank the trailing byte
         BR    R4                    Return to caller
HEXTAB   DC    C'0123456789ABCDEF'   Translate table
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEXSAVE  DS    3F                    Register save for HEX macro
SAV4HEX  DC    F'0'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* --------------------------------------------------------- *
*    BAL REGISTER IS R7.
* --------------------------------------------------------- *
FORMATRC DS    0H                    Format BRODCAST Records
*                                    ------ -------- -------
FORMCHEK DS    0H
         TM    DDNFLAG,X'01'
         BZ    NOPRT005
         CLI   REC130A,X'00'         Notices directory?
         BE    FORMAT00              Go process it.
         CLI   REC130A,X'01'         Userids?
         BE    FORMAT01              Go process it.
         CLI   REC130A,X'02'         Notices message?
         BE    FORMAT02              Go process it.
         CLI   REC130A,X'03'         User message?
         BE    FORMAT03              Go process it.
         CLI   REC130A,X'04'         BRODCAST Header?
         BE    FORMAT04              Go process it.
         CLI   REC130A,X'05'         Free Search Record?
         BE    FORMAT05              Go process it.
         CLI   REC130A,X'FF'         Blank user message slot?
         BE    FORMATFF              Go process it.
NOPRT005 DS    0H
         B     FORMCHEE              Not normal type. Just end.
FORMAT00 DS    0H                    NOTICES DIRECTORY RECORD
         ST    R3,SAVRG3             Save mapping register for DSECT
         PUT   BRODPRNT,FMT00LN0
         LA    R3,REC130A+1          Get actual record image
         USING BCDIR,R3
         MVC   LINE,LINE-1           Clear line
         HEX   FM001HEX+1,3,BCDNEXT
         XR    R6,R6                 Zero work register
         ICM   R6,7,BCDNEXT          Load it with RBA of next dir recd
* --- Test for last record  -  below
         LTR   R6,R6                 Is next record's RBA equal 000000?
         BNZ   FORLST00              Yes, this is last record.
         MVC   FM001NXT,FM001LST     Report it.
         MVC   FM001DLT,FM001DLS     Blank out second literal.
FORLST00 DS    0H
* --- Test for last record  -  above
         CVD   R6,DWORK              Convert to decimal
         MVC   FM001DEC,MASK7A       Move in mask
         ED    FM001DEC,DWORK+5      Edit value into report field
* --- Test for last record  -  below
         LTR   R6,R6                 R6 should still be zero if last.
         BNZ   FORLSU00              Not zero. Go on as usual.
         MVC   FM001DEC,BLANK44      Zero. Blank out the number value.
         MVC   FM001HEX,BLANK44      Zero. Blank out the number value.
FORLSU00 DS    0H
* --- Test for last record  -  above
         MVC   LINE,FMT00LN1         Prepare line for printing
         PUT   BRODPRNT,LINE
         MVC   LINE,LINE-1           Clear line for next time
         ST    R7,SAVRG7C
         BAL   R7,FORMT00A
         L     R7,SAVRG7C
         L     R3,SAVRG3             Restore mapping register
         DROP  R3
         B     FORMCHEE
FORMAT01 DS    0H                    USERIDS DIRECTORY RECORD
         ST    R3,SAVRG3
         PUT   BRODPRNT,FMT01LN0
         LA    R3,REC130A+1
         USING USDIR,R3
         MVC   LINE,LINE-1
         HEX   FM011HEX+1,3,USDNEXT
         XR    R6,R6
         ICM   R6,7,USDNEXT
* --- Test for last record  -  below
         LTR   R6,R6                 Is next record's RBA equal 000000?
         BNZ   FORLST01              Yes, this is last record.
         MVC   FM011NXT,FM011LST     Report it.
         MVC   FM011DLT,FM011DLS     Blank out second literal.
FORLST01 DS    0H
* --- Test for last record  -  above
         CVD   R6,DWORK
         MVC   FM011DEC,MASK7A
         ED    FM011DEC,DWORK+5
* --- Test for last record  -  below
         LTR   R6,R6                 R6 should still be zero if last.
         BNZ   FORLSU01              Not zero. Go on as usual.
         MVC   FM011DEC,BLANK44      Zero. Blank out the number value.
         MVC   FM011HEX,BLANK44      Zero. Blank out the number value.
FORLSU01 DS    0H
* --- Test for last record  -  above
         MVC   LINE,FMT01LN1
         PUT   BRODPRNT,LINE
         MVC   LINE,FMT01L1A
         PUT   BRODPRNT,LINE
         MVC   LINE,LINE-1
         ST    R7,SAVRG7A
         BAL   R7,FORMT01A
         L     R7,SAVRG7A
         L     R3,SAVRG3
         DROP  R3
         B     FORMCHEE
FORMAT02 DS    0H                    NOTICES MESSAGE RECORD
         ST    R3,SAVRG3
         PUT   BRODPRNT,FMT02LN0
         LA    R3,REC130A+1
         USING BCMSG,R3
         MVC   LINE,LINE-1
         HEX   FM021HEX+1,1,BCMLNG
         XR    R6,R6
         ICM   R6,1,BCMLNG
         CVD   R6,DWORK
         MVC   FM021DEC,MASK7A
         ED    FM021DEC,DWORK+5
         MVC   LINE,FMT02LN1
         PUT   BRODPRNT,LINE
         MVC   LINE,LINE-1
         ST    R7,SAVRG7B
         BAL   R7,FORMT02A
         L     R7,SAVRG7B
         L     R3,SAVRG3
         DROP  R3
         B     FORMCHEE
FORMAT03 DS    0H                    USERID MESSAGE RECORD
         TM    EXECMODE,X'04'
         BO    SKIPFMT3
         ST    R3,SAVRG3
         PUT   BRODPRNT,FMT03LN0
         LA    R3,REC130A+1
         USING USMSG,R3
         MVC   LINE,LINE-1
         HEX   FM031HEX+1,1,USMLNG
         XR    R6,R6
         ICM   R6,1,USMLNG
         CVD   R6,DWORK
         MVC   FM031DEC,MASK7A
         ED    FM031DEC,DWORK+5
         MVC   LINE,FMT03LN1
         PUT   BRODPRNT,LINE
         MVC   LINE,LINE-1
         HEX   FM032HEX+1,3,USMNEXT
         XR    R6,R6
         ICM   R6,7,USMNEXT
         CVD   R6,DWORK
         MVC   FM032DEC,MASK7A
         ED    FM032DEC,DWORK+5
         MVC   LINE,FMT03LN2
         PUT   BRODPRNT,LINE
         MVC   LINE,LINE-1
         L     R3,SAVRG3
         DROP  R3
SKIPFMT3 DS    0H
         B     FORMCHEE
FORMAT04 DS    0H                    BRODCAST HEADER RECORD
         ST    R3,SAVRG3
         PUT   BRODPRNT,FMT04LN0
         LA    R3,REC130A+1
         USING R1BC,R3
         MVC   LINE,LINE-1
         HEX   FM041HEX+1,3,R1BCPTR
         XR    R6,R6
         ICM   R6,7,R1BCPTR
         CVD   R6,DWORK
         MVC   FM041DEC,MASK7A
         ED    FM041DEC,DWORK+5
         MVC   LINE,FMT04LN1
         PUT   BRODPRNT,LINE
         MVC   LINE,LINE-1
         HEX   FM042HEX+1,3,R1USPTR
         XR    R6,R6
         ICM   R6,7,R1USPTR
         CVD   R6,DWORK
         MVC   FM042DEC,MASK7A
         ED    FM042DEC,DWORK+5
         MVC   LINE,FMT04LN2
         PUT   BRODPRNT,LINE
         MVC   LINE,LINE-1
         HEX   FM043HEX+1,4,R1RECNUM
         XR    R6,R6
         ICM   R6,15,R1RECNUM
         CVD   R6,DWORK
         MVC   FM043DEC(7),MASK7A
         ED    FM043DEC(7),DWORK+5
         MVC   LINE,FMT04LN3
         PUT   BRODPRNT,LINE
         MVC   LINE,LINE-1
         HEX   FM044HEX+1,2,R1BCMAX
         XR    R6,R6
         ICM   R6,3,R1BCMAX
         CVD   R6,DWORK
         MVC   FM044DEC,MASK7A
         ED    FM044DEC,DWORK+5
         MVC   LINE,FMT04LN4
         PUT   BRODPRNT,LINE
         MVC   LINE,LINE-1
         HEX   FM045HEX+1,3,R1FRESRH
         XR    R6,R6
         ICM   R6,7,R1FRESRH
         CVD   R6,DWORK
         MVC   FM045DEC,MASK7A
         ED    FM045DEC,DWORK+5
         MVC   LINE,FMT04LN5
         PUT   BRODPRNT,LINE
         MVC   LINE,LINE-1
         HEX   FM046HEX+1,4,R1GENNUM
         XR    R6,R6
         ICM   R6,15,R1GENNUM
         CVD   R6,DWORK
         MVC   FM046DEC(7),MASK7A
         ED    FM046DEC(7),DWORK+5
         MVC   LINE,FMT04LN6
         PUT   BRODPRNT,LINE
         MVC   LINE,LINE-1
         L     R3,SAVRG3
         DROP  R3
         B     FORMCHEE
FORMAT05 DS    0H                    FREE SEARCH RECORD
         ST    R3,SAVRG3
         PUT   BRODPRNT,FMT05LN0
         LA    R3,REC130A+1
         USING FREESRCH,R3
         MVC   LINE,LINE-1
         HEX   FM051HEX+1,3,FSEARCH
         XR    R6,R6
         ICM   R6,7,FSEARCH
         CVD   R6,DWORK
         MVC   FM051DEC,MASK7A
         ED    FM051DEC,DWORK+5
         MVC   LINE,FMT05LN1
         PUT   BRODPRNT,LINE
         MVC   LINE,LINE-1
         L     R3,SAVRG3
         DROP  R3
         B     FORMCHEE
FORMATFF DS    0H                    EMPTY USER MESSAGE RECORD SLOT
         ST    R3,SAVRG3
         CLC   FFACTREC,FFMRKREC
         BE    FORMFFOK
         MVC   FFBAD(6),=C' -BAD-'
         MVC   FFBADA(58),=C'1st Data Byte X''--'' not equal "Track RecX
               ord Number" X''--'''
         HEX   FFBADA+16,1,FFMRKREC
         HEX   FFBADA+54,1,FFACTREC
         MVI   FFBADA+18,X'7D'
         MVI   FFBADA+56,X'7D'
         MVI   FFBADA+57,X'4B'
         MVC   FFBADER(8),=C' *Error*'
FORMFFOK DS    0H
         PUT   BRODPRNT,FMTFFLN0
         MVC   FFBAD(6),BLANK44
         MVC   FFBADER(8),BLANK44
         MVC   LINE,LINE-1
         MVC   FFBADA(58),LINE
         L     R3,SAVRG3
         B     FORMCHEE
FORMCHEE DS    0H
FORMATEN DS    0H
         BR    R7
* --------------------------------------------------------- *
*    BAL REGISTER IS R7.
* --------------------------------------------------------- *
FORMT00A DS    0H                    Format one Userid entry at a time.
         LA    R3,REC130A+1          Point to image of current record.
         USING BCDIR,R3
         LA    R8,BCDNENT            BCTR register
         LA    R0,0                  Register for counting slots.
         ST    R0,SAVRG0             And initialize to 0.
FORMT00B DS    0H
         MVC   LINE,LINE-1           Clear line
         L     R0,SAVRG0             Load current count
         A     R0,=F'1'              Add one to it
         ST    R0,SAVRG0             Save it back.
         XR    R6,R6                 Clear register for decimal display
         LR    R6,R0                 Load it with slot count register
         CVD   R6,DWORK              Convert to packed
         MVC   FM002DS1(7),MASK7A    Load mask into print line
         ED    FM002DS1(7),DWORK+5   Edit RBA number on top of mask
         MVC   NDNUMWRK(2),BCDMSGNO  Message number to work area
         MVC   NDRBAWRK(3),BCDMRBA   RBA number to work area
         TM    BCDMFLG,BCDNOMSG      Check if this is active notice.
         BO    F00ACTVT              Flag is on, inactive notice.
         OI    ACTNTFLG,X'02'        Notice is ACTIVE......
F00ACTVT DS    0H
         NI    NDNUMWRK,X'7F'        Purify notice number for display
         HEX   FM002HN1,2,NDNUMWRK
         XR    R6,R6                 Clear register for decimal display
         ICM   R6,3,NDNUMWRK         Load it with slot count register
         CVD   R6,DWORK              Convert to packed
         MVC   FM002DN1(7),MASK7A    Load mask into print line
         ED    FM002DN1(7),DWORK+5   Edit RBA number on top of mask
         TM    ACTNTFLG,X'02'
         BZ    F00INACT
         MVC   FM002AC1(8),=C' Active '
         B     F00ACTGO
F00INACT DS    0H
         MVC   FM002AC1(8),=C'Inactive'
F00ACTGO DS    0H
         HEX   FM002HR1,3,NDRBAWRK
         XR    R6,R6                 Clear register for decimal display
         ICM   R6,7,NDRBAWRK         Load it with slot count register
         CVD   R6,DWORK              Convert to packed
         MVC   FM002DR1(7),MASK7A    Load mask into print line
         ED    FM002DR1(7),DWORK+5   Edit RBA number on top of mask
F00PRINT DS    0H
         MVC   LINE,LINE-1
         MVC   LINE,FMT00LN2
         PUT   BRODPRNT,LINE
         MVC   FM002AC1(8),=C'        '
         NI    ACTNTFLG,X'FD'        Turn off flag
         LA    R3,5(,R3)             Bump to next entry in directory.
         BCT   R8,FORMT00B
FORMT00E DS    0H
         NI    ACTNTFLG,X'FD'        Turn off flag in all cases.
         BR    R7                    And go back to the caller.
         DROP  R3
* --------------------------------------------------------- *
*    BAL REGISTER IS R7.
* --------------------------------------------------------- *
FORMT01A DS    0H                    Format one Userid entry at a time.
         LA    R3,REC130A+1          Point to image of current record.
         USING USDENTRY,R3
         LA    R8,9                  BCTR register
         LA    R0,0                  Register for counting slots.
         ST    R0,SAVRG0             And initialize to 0.
FORMT01B DS    0H
         MVC   LINE,LINE-1           Clear line
         L     R0,SAVRG0             Load current count
         A     R0,=F'1'              Add one to it
         ST    R0,SAVRG0             Save it back.
         HEX   FM012SL1,1,SAVRG0+3   Take advantage of max of 9. Hex it
         MVI   FM012SL1,X'40'        And blank the first hex digit.
F01REALU DS    0H
         MVC   FM012US1(7),USDID     Display current userid from entry
         CLC   FM012US1(7),SEVENZRO  Is this a blank entry?
         BNE   F01REALV              No. Don't mark as empty.
         MVC   FM012US1(7),SEVENEMP  Yes. Mark it as empty.
F01REALV DS    0H
         HEX   FM012SH1,3,USDRBA     Display beginning RBA in hex
         XR    R6,R6                 Clear register for decimal display
         ICM   R6,7,USDRBA           Load it with begin RBA
         CVD   R6,DWORK              Convert to packed
         MVC   FM012DS1(7),MASK7A    Load mask into print line
         ED    FM012DS1(7),DWORK+5   Edit RBA number on top of mask
         HEX   FM012EH1,3,USDEND     Display ending RBA in hex
         XR    R6,R6                 Clear register for decimal display
         ICM   R6,7,USDEND           Load it with ending RBA
         CVD   R6,DWORK              Convert to packed
         MVC   FM012DE1(7),MASK7A    Load mask into print line
         ED    FM012DE1(7),DWORK+5   Edit RBA number on top of mask
         MVC   LINE,FMT01LN2         Load completely loaded print line
         PUT   BRODPRNT,LINE
         LA    R3,13(,R3)            Bump one userid entry forward
         BCT   R8,FORMT01B           And do it until the end of record
FORMT01E DS    0H
         LA    R3,REC130A+1          Reset R3 before leaving.
         BR    R7                    And go back to the caller.
         DROP  R3
* --------------------------------------------------------- *
FORMT02A DS    0H                  Determine if Notices message Active,
*                                   by reading the Incore Notices
*                                   Directory Table we created before.
         ST    R7,SAVRG7SB
         NI    ACTNTFLG,X'FE'
FT2NOTBL DS    0H                  Read the Incore Notices Directory.
         L     R7,NOTETBLB         Address of incore Notices directory
         LTR   R7,R7
         BZ    FT2NOTBB
         CLC   =C'NDHDR',0(R7)     Is this the proper header?
         BNE   FT2NOTBB            No.
FT2NOTBP DS    0H
         LA    R7,5(,R7)           Bump past header.
         CLC   =C'NDTLR',0(R7)     Is this the trailer?
         BE    FT2NOTBE            Yes. Get out if we're at the end.
         CLC   =X'0000000000',0(R7)  Is this an empty entry?
         BE    FT2NOTBP            Yes. Just bump past and try again.
FT2NOTBC DS    0H
         MVC   CURNDNUM(2),0(R7)
         MVC   CURNDRBA(3),2(R7)
         CLC   CURNDRBA(3),SAVRNHEX+1
         BNE   FT2NOTBP
FT2NOTBS DS    0H
         TM    0(R7),X'80'         Is this an unused entry?
         BZ    FT2ACTIV            No. Count it as an active entry.
         B     FT2INACT            Yes. Count it as unused.
FT2ACTIV DS    0H
         OI    ACTNTFLG,X'01'
         MVC   FMT22ACT(8),NOTFMACT
         B     FT2PRINT
FT2INACT DS    0H
         MVC   FMT22ACT(8),NOTFMINA
FT2PRINT DS    0H
         MVC   LINE,LINE-1
         MVC   LINE,FMT02LN2
         PUT   BRODPRNT,LINE
         MVC   FMT22ACT(8),=C'        '
* -- >  Put processing for Notice number here.
         TM    ACTNTFLG,X'01'
         BZ    FT2NOTNA
         MVC   LINE,LINE-1
         NI    CURNDNUM,X'7F'
         HEX   FM023HEX+1,2,CURNDNUM
         XR    R6,R6
         ICM   R6,3,CURNDNUM
         CVD   R6,DWORK
         MVC   FM023DEC,MASK7A
         ED    FM023DEC,DWORK+5
         MVC   LINE,FMT02LN3
         PUT   BRODPRNT,LINE
         MVC   LINE,LINE-1
FT2NOTNA DS    0H
         B     FT2NOTBE
* -- >  Put processing for Notice number here.
FT2NOTBB DS    0H                  If the header is wrong, come here.
         MVC   LINE,LINE-1
         MVC   LINE,=CL133'   Notify Directory Table Read Error  -  2'
         PUT   BRODPRNT,LINE
         MVC   LINE,LINE-1
FT2NOTBE DS    0H
FORMT02E DS    0H
         NI    ACTNTFLG,X'FE'
         L     R7,SAVRG7SB
         BR    R7
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         LTORG
SEVENZRO DC    XL7'00000000000000'
SEVENEMP DC    CL7'-Empty-'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
TRTCSECT CSECT                                                           05486
* ------------------------------------------------------------------- *  05487
*   The purpose of these translate tables is to do an ISPF-like       *  05488
*   hex print on several lines.  TRTBL0 is EBCDIC printables.         *  05489
* ------------------------------------------------------------------- *  05490
TRTBL0   DS    0D                                                        05491
         DC    XL16'40404040404040404040404040404040'                    05492
         DC    XL16'40404040404040404040404040404040'                    05493
         DC    XL16'40404040404040404040404040404040'                    05494
         DC    XL16'40404040404040404040404040404040'                    05495
         DC    XL16'404040404040404040404A4B4C4D4E4F'                    05496
         DC    XL16'504040404040404040405A5B5C5D5E5F'                    05497
         DC    XL16'606140404040404040406A6B6C6D6E6F'                    05498
         DC    XL16'404040404040404040407A7B7C7D7E7F'                    05499
         DC    XL16'40818283848586878889404040404040'                    05500
         DC    XL16'40919293949596979899404040404040'                    05501
         DC    XL16'4040A2A3A4A5A6A7A8A9404040404040'                    05502
         DC    XL16'40404040404040404040404040404040'                    05503
         DC    XL16'C0C1C2C3C4C5C6C7C8C9404040404040'                    05504
         DC    XL16'D0D1D2D3D4D5D6D7D8D9404040404040'                    05505
         DC    XL16'E040E2E3E4E5E6E7E8E9404040404040'                    05506
         DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'                    05507
TRTBL1   DS    0D                                                        05508
         DC    XL16'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'                    05509
         DC    XL16'F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1'                    05510
         DC    XL16'F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2'                    05511
         DC    XL16'F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3'                    05512
         DC    XL16'F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4'                    05513
         DC    XL16'F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5'                    05514
         DC    XL16'F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6'                    05515
         DC    XL16'F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7'                    05516
         DC    XL16'F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8'                    05517
         DC    XL16'F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9'                    05518
         DC    XL16'C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1'                    05519
         DC    XL16'C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2'                    05520
         DC    XL16'C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3'                    05521
         DC    XL16'C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4'                    05522
         DC    XL16'C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5'                    05523
         DC    XL16'C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6'                    05524
TRTBL2   DS    0D                                                        05525
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05526
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05527
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05528
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05529
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05530
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05531
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05532
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05533
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05534
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05535
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05536
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05537
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05538
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05539
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05540
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05541
         EJECT                                                           05593
BDMPRINT CSECT
         SPACE
         IEZBITS
         SPACE
         IKJZT301
         SPACE
         IKJZT302
         SPACE
         IKJZT303
         SPACE
         IKJZT304
         SPACE
         IKJZT305
         SPACE
         IKJZT306
         SPACE
* ----------------------------------------------------------------- *
PRMDSECT DSECT
PRMDRCNO DS    F                   RBA number of record in BRODCAST
PRMDRCAD DS    F                   Address of 130-byte record to be
*                                   printed and optionally formatted.
PRMNDTBL DS    F                   Pointer to incore Notices Directory
*                                   Table, zero if it isn't there.
         END
