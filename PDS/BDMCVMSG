BDMCVMSG TITLE 'Convert User Messages from BDMXPORT to BDMMDUMP format'
*------------------------------------------------------------------*
*
*          BDMCVMSG (Convert BDMXPORT backup to BDMMDUMP format)
*
*
*       Copyright (C) 1995-2025 Sam Golob Systems Programming LLC
*                 All Rights Reserved
*
*
*        This program converts a VB-255 file that was created by
*        the BDMXPORT program to back up User Messages from a
*        BRODCAST Dataset, into BDMMDUMP format for reloading
*        using the BDMMLOAD program (instead of BDMSEND, which,
*        at the time of writing, is slow).
*
*------------------------------------------------------------------*
*
*
*        JCL TO INVOKE:
*
*            //BRODCAST EXEC PGM=BDMCVMSG,REGION=4M
*            //STEPLIB  DD  -- NONAUTHORIZED LIBRARY IF YOU CHOOSE --
*            //SYSPRINT DD  SYSOUT=A
*            //EXPORTIN DD  DISP=SHR,DSN=yourid.VB255.EXPORT
*            //BDMMDUMP DD  DISP=(NEW,CATLG,DELETE),
*            //   DSN=yourid.usermsg.dump.dataset,
*            //   DCB=(RECFM=FB,DSORG=PS,LRECL=130,BLKSIZE=27950),
*            //   SPACE=(TRK,(60,60),RLSE),UNIT=SYSALLDA,
*            //   VOL=SER=WORK04
*
* WRITTEN:    21 May 2007
*
* CHANGE LOG:
*    21 May 2007 -
*
*
*------------------------------------------------------------------*
         EJECT
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    DS    0H
         ST    R4,SAV4HEX
         STM   R15,R1,HEXSAVE
         LA    R1,&FROM
         LA    R0,&LEN
         LA    R15,&TO
         BAL   R4,HEX
         L     R4,SAV4HEX
         LM    R15,R1,HEXSAVE
         MEND
         SPACE
R0       EQU   0                  USED BY O.S.
R1       EQU   1                  ADDR OF PARM LIST
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9                   PTR TO OUTPUT LINE FOR PUT
R10      EQU   10                  BAL REGISTER
R11      EQU   11
R12      EQU   12                  BASE REGISTER
R13      EQU   13                  SAVE-AREA ADDRESS
R14      EQU   14                  ULTIMATE RETURN ADDRESS
R15      EQU   15                  ENTRY-PT ADDR, WORK REG, RET CODE
         SPACE
         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV
         LCLC  &PGMNAME
&VERSNUM SETC  ' 1.5.0A'
&PKGNAME SETC  'BRODMSTR'
&PKGTITL SETC  'Broadcast Master'
&VERTITL SETC  ' Version '
&COPYRGT SETC  'Copyright (c) 1995-2025 Sam Golob Systems Programming'
&COPYRSV SETC  ' LLC - All Rights Reserved  '
&PGMNAME SETC  'BDMCVMSG '
&PGMNAME AMODE 24
&PGMNAME RMODE 24
&PGMNAME CSECT
         B     BEGINN-*(,R15)
         DC    CL8'&PGMNAME'
         DC    C' '
         DC    C'&PKGTITL'
         DC    C'&VERTITL'
         DC    C'&VERSNUM'
         DC    C' '
         DC    C'&COPYRGT'
         DC    C'&COPYRSV'
         DC    CL16' &SYSDATE &SYSTIME '
         DC    CL6'HLASM '
         DC    C'&SYSVER'
         DC    C' '
BEGINN   DS    0H
         STM   R14,R12,12(R13)
         LR    R5,R1                  Save PARM address
         LR    R12,R15                Load entry address
         USING BDMCVMSG,R12,R11,R8    Establish addressability
         LA    R11,4095(,R12)
         LA    R11,1(,R11)
         LA    R8,4095(,R11)
         LA    R8,1(,R8)
         LR    R15,R13             Save caller's save address
         LA    R13,SAVE            Get our savearea address
         ST    R15,SAVE+4          Save off into low save
         ST    R13,8(,R15)         Chain mine back
         ST    R5,PARMSAVE         Store PARM address for reloading
INITPGM  DS    0H
         MVI   LINE-1,X'40'
         MVI   BLANK44-1,X'40'     Initialize Blanks area
         MVC   BLANK44(44),BLANK44-1
         MVC   OLDUSID(7),BLANK44
         SPACE
* ----------------------------------------------------------------- *    06223
TIOTSCAN DS    0H             Determine the presence of Optional         06224
*                             DDNAMES:  SYSPRINT, BRODUSER, SYSIN        06225
* ----->                      OPEN them if there is JCL for them.        06226
* ----------------------------------------------------------------- *    06227
         ST    R3,SAVER3
         ST    R5,SAVER5
         L     R5,16          R5=CVT                                     06228
         L     R5,0(,R5)      R5=TCB WORDS                               06229
         L     R5,4(,R5)      R5=MY TCB                                  06230
         L     R5,12(,R5)     R5=TIOT                                    06231
         LA    R5,24(,R5)     R5=FIRST DD ENTRY                          06232
TIOTLOOP CLC   0(4,R5),=XL4'00' END OF TIOT?                             06233
         BE    TIOTSEND       YES, CHECK FOR OUTPUT VOL OVERRIDES        06234
         CLC   4(8,R5),SYSPRINC     SYSPRINT DDNAME THERE?               06235
         BNE   TIOTPRTN       NO                                         06236
         OI    DDNFLAG,X'01'        SHOW PRESENCE OF SYSPRINT DD         06237
         B     TIOTNEXT       CONTINUE                                   06238
TIOTPRTN CLC   4(8,R5),BDMMDUMC                                          06239
         BNE   TIOTUSRN                                                  06240
         OI    DDNFLAG,X'02'        SHOW PRESENCE OF BDMMDUMP DD         06241
         B     TIOTNEXT                                                  06242
TIOTUSRN CLC   4(8,R5),EXPORTIC                                          06239
         BNE   TIOTNEXT                                                  06240
         OI    DDNFLAG,X'04'        SHOW PRESENCE OF EXPORTIN DD         06241
         B     TIOTNEXT                                                  06242
TIOTNEXT SR    R3,R3                                                     06243
         IC    R3,0(,R5)      R3=LENGTH OF DD ENTRY                      06244
         AR    R5,R3          R5=NEXT DD ENTRY                           06245
         B     TIOTLOOP       GO CHECK IT                                06246
TIOTSEND DS    0H                                                        06247
         L     R3,SAVER3
         L     R5,SAVER5
         B     OPEN
SYSPRINC DC    CL8'SYSPRINT'
BDMMDUMC DC    CL8'BDMMDUMP'
EXPORTIC DC    CL8'EXPORTIN'
* -------------------------------------------------------- *
*   OPEN files and print title lines in SYSPRINT report.   *
* -------------------------------------------------------- *
OPEN     DS    0H              .... TEST ALL THE DD NAMES .....
         TM    DDNFLAG,X'01'        SYSPRINT there?
         BO    OPENSYSP             Yes. Go OPEN it.
         WTO   'BDMCV00I     ----------------------------  ',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMCV10E     SYSPRINT DD Name is missing...',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMCV00I     ----------------------------  ',ROUTCDE=11X
               ,DESC=7
         TM    DDNFLAG,X'02'        BDMMDUMP there? Then it's allocated
         BZ    NODELMSG             Not there, no need to delete.
         WTO   'BDMCV03E     BDMMDUMP not created properly.',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMCV02E     Delete BDMMDUMP and rerun job.',ROUTCDE=11X
               ,DESC=7
         WTO   'BDMCV00I     ----------------------------  ',ROUTCDE=11X
               ,DESC=7
NODELMSG DS    0H
         B     EOJ16                End right away.  Code 16.
*
OPENSYSP DS    0H
         OPEN  (SYSPRINT,(OUTPUT))
         TM    DDNFLAG,X'04'        EXPORTIN missing?
         BZ    NODDNAME             Put out msgs and end with Code 12.
         OPEN  (EXPORTIN,(INPUT))
         TM    DDNFLAG,X'02'        BDMMDUMP missing?
         BZ    NODDNAME             Put out msgs and end with Code 12.
         OPEN  (BDMMDUMP,(OUTPUT))
         LA    R9,TITLINE          Title line
         BAL   R10,PRINT           Print it
         LA    R9,CPYRLINE         Copyright line
         BAL   R10,PRINT           Print it
         LA    R9,REPTLN01         Line with name of report
         BAL   R10,PRINT           Print it
         MVC   LINE,LINE-1
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
*
* ------------------------------------------------------------------- *
*     GET A VB-255 EXPORT FILE RECORD AND WRITE IT AS A BDMMDUMP
* ------------------------------------------------------------------- *
*
GETSTART DS    0H                 CLOSE is the EODAD address
         MVC   OLDUSID(7),BLANK44    Initialize the Userid field
GETDATIN DS    0H
         GET   EXPORTIN           Get a record
         LR    R3,R1              Save address of buffer
         XR    R2,R2              Clear work register
         LH    R2,0(,R3)          Bytes to move, plus 4
         S     R2,=F'4'           Subtract the 4
         STH   R2,NUMBYTES        And save the number
         LA    R3,4(,R3)          Bump past the RDW to the data
         ST    R3,CURBUFAD        Store the address of the data itself
         CLI   24(R3),C'{'        Is the message preceded by { - BDM
         BE    WRTDATIN           Bypass the bracket
         OI    BRACFLG,X'01'      Mark that it's in BCM format
WRTDATIN DS    0H
         CLC   OLDUSID(7),16(R3)  Compare the gotten Userid to the old
         BNE   WRTHEADR           Not the same. Write a ./--- header.
WRTMESGS DS    0H                 Write out the current message
         MVC   LINE,LINE-1        First do the SYSPRINT version
         XR    R2,R2              Clear the work register
         IC    R2,NUMBYTES+1      Total length of record - 4 for RDW
         TM    BRACFLG,X'01'
         BO    NOBRACS1
         S     R2,=F'27'          Get to the actual message data
         EX    R2,MOVEMSG         Move the message to the print line
         B     NOBRACS2
NOBRACS1 DS    0H
         S     R2,=F'26'          Get to the actual message data
         EX    R2,MOVEMSGC        Move the message to the print line
NOBRACS2 DS    0H
         PUT   SYSPRINT,LINE      And write it out
         MVC   REC130,REC130-1    Zero out the BDMMLOAD format record
         MVI   REC130,X'03'       Put the X'03' into the key
         TM    BRACFLG,X'01'      Is this in BCM format?
         BO    NOBRACS3           Yes. Do a different move.
         EX    R2,MOVEDATA        Move the message out there
         LA    R2,1(,R2)          Bump R2 to the true message length
         B     NOBRACS4           Skip over the "no brace" action
NOBRACS3 DS    0H
         LA    R2,1(,R2)          Bump R2 to the true message length
         EX    R2,MOVEDATC        Move the message out there
         LA    R2,1(,R2)          Bump R2 to the true message length
NOBRACS4 DS    0H
         STC   R2,LENTHMSG        And store the last character away
         MVC   REC130+1(1),LENTHMSG   Move binary length into record
         PUT   BDMMDUMP,REC130    Write out the BDMMDUMP record
         NI    BRACFLG,X'FF'-X'01'
         B     GETDATIN           Go get another BDMSEND format record
*
WRTHEADR DS    0H                     Write a ./--- format header.
         MVC   LINE,LINE-1            Print version. Blank the line.
         MVC   ADDUSUSR(7),BLANK44    Clear the Userid field
         MVC   ADDUSUSR(7),16(R3)     Dump the new Userid into it.
         MVC   LINE(130),ADDUSLNE     Bring the line to print.
         PUT   SYSPRINT,LINE          Print it
         PUT   BDMMDUMP,LINE          And dump it to the BDMMDUMP too
         MVC   OLDUSID(7),16(R3)      Renew the old Userid for compare
         B     WRTMESGS               And write the data record out.
* -----------------------------
INRCDS   DC    PL7'0'
NUMBYTES DC    XL2'00'            Number of bytes to move
LENTHMSG DC    XL1'00'                 Actual length moved to BDMMLOAD
CURBUFAD DS    F
OLDUS    DS    0CL8
OLDUSID  DC    CL7' '
OLDUSEND DC    CL1' '
MOVEMSG  MVC   LINEM(*-*),25(R3)       Curly braces surround message
MOVEDATA MVC   REC130+2(*-*),25(R3)    Move to BDMMLOAD format output
MOVEMSGC MVC   LINEM(*-*),24(R3)       Nothing surrounds the message
MOVEDATC MVC   REC130+2(*-*),24(R3)    Move to BDMMLOAD format output
         LTORG
*--------------------------------------------------------------------*
*        END OF OUTER LOOP
*        TIME TO CLOSE AND END THE PROGRAM, BYE.
*--------------------------------------------------------------------*
         SPACE
CLOSE    DS    0H
         CLOSE EXPORTIN
         CLOSE SYSPRINT
         TM    DDNFLAG,X'02'
         BZ    EOJ8
         CLOSE BDMMDUMP
EOJ0     DS    0H
         LA    R5,0                    Zero Return Code
         B     EOJ
EOJ4     DS    0H
         LA    R5,4                    RC = 4
         B     EOJ
EOJ8     DS    0H
         LA    R5,8                    RC = 8
         B     EOJ
EOJ12    DS    0H
         LA    R5,12                   RC = 12
         B     EOJ
EOJ16    DS    0H
         LA    R5,16                   RC = 16
         B     EOJ
EOJ      DS    0H
         L     R13,SAVE+4
         LR    R15,R5              Load return code into R15.
         ST    R15,16(,R13)        Put RC into passed save area.
         LM    R14,R12,12(R13)
         BR    R14                 Go back to system.
         SPACE
*--------------------------------------------------------------------*
*        ERROR IF NO BDMMDUMP OR EXPORTIN DD NAME                    *
*--------------------------------------------------------------------*
NODDNAME DS    0H
         LA    R9,TITLINE          Title line
         BAL   R10,PRINT           Print it
         LA    R9,CPYRLINE         Copyright line
         BAL   R10,PRINT           Print it
         LA    R9,REPTLN01         Line with name of report
         BAL   R10,PRINT           Print it
         MVC   LINE,LINE-1
         PUT   SYSPRINT,LINE
         TM    DDNFLAG,X'02'       BDMMDUMP DD there?
         BO    BYPBDMMD            Yes. Bypass msg that it's not.
         MVC   LINE,LINE-1
         MVC   LINEM(47),=C'BDMCV01E   ---  BDMMDUMP DD Name Missing  -X
               --  '
         PUT   SYSPRINT,LINE
BYPBDMMD DS    0H
         TM    DDNFLAG,X'04'       EXPORTIN DD there?
         BO    BYPMDMSG            Yes. Bypass msg that it's not.
         MVC   LINE,LINE-1
         MVC   LINEM(47),=C'BDMCV01E   ---  EXPORTIN DD Name Missing  -X
               --  '
         PUT   SYSPRINT,LINE
BYPMDMSG DS    0H
         TM    DDNFLAG,X'02'       BDMMDUMP DD there?
         BZ    NOCLSBRC            Yes. It needs to be deleted.
         MVC   LINE,LINE-1
         MVC   LINEM(47),=C'BDMCV03E   ---  BDMMDUMP not created properX
               ly..'
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         MVC   LINEM(47),=C'BDMCV02E   ---  Delete BDMMDUMP and Rerun -X
               --  '
         PUT   SYSPRINT,LINE
NOCLSBRC DS    0H
         MVC   LINE,LINE-1
         MVC   LINEM(47),=C'BDMCV05E   ***  Please correct your JCL   *x
               **  '
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1
         PUT   SYSPRINT,LINE
         CLOSE SYSPRINT
         B     EOJ12
*--------------------------------------------------------------------*
*        PRINT OUTPUT SUBROUTINE.
*--------------------------------------------------------------------*
         SPACE
PRINT    DS    0H
         PUT   SYSPRINT,(R9)       WRITE FROM AREA ADDRESS IN R9
         BR    R10                 RETURN TO WHENCE WE CAME
         SPACE
* --------------------------------------------------------- *
*    BAL REGISTER IS R4.
* --------------------------------------------------------- *
HEX      DS    0H
         MVC   1(1,R15),0(R1)        Move byte
         UNPK  0(3,R15),1(2,R15)     Unpack
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)           Increment output pointer
         LA    R1,1(,R1)             Increment input pointer
         BCT   R0,HEX                Decrement length, then loop
         MVI   0(R15),C' '           Blank the trailing byte
         BR    R4                    Return to caller
HEXTAB   DC    C'0123456789ABCDEF'   Translate table
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEXSAVE  DS    3F                    Register save for HEX macro
SAV4HEX  DC    F'0'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*
*--------------------------------------------------------------------*
*        DATA CONTROL BLOCKS FOLLOW.
*--------------------------------------------------------------------*
         SPACE
EXPORTIN DCB   MACRF=GL,DDNAME=EXPORTIN,DSORG=PS,RECFM=VB,EODAD=CLOSE, X
               EXLST=JFCB1
         SPACE
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,LRECL=133,MACRF=PM,RECFM=FBA
         SPACE
BDMMDUMP DCB   DSORG=PS,DDNAME=BDMMDUMP,MACRF=PM,                      X
               LRECL=130,RECFM=FB,EXLST=JFCB1
         DS    0F                  NEEDED FOR CORRECT EXLST
JFCB1    DC    X'87'
         DC    AL3(INFMJFCB)
         IEFJFCBN LIST=YES
         LTORG
         SPACE
*--------------------------------------------------------------------*
*        DATA AREAS FOLLOW.
*--------------------------------------------------------------------*
         SPACE
CVDAREA  DS    D
SAVE     DC    18F'0'
SAVRG45  DC    2F'0'               Save Regs 4 and 5 for NDTABLE build
SAVER1   DS    F                   Save Register 1
SAVER3   DS    F                   Save Register 3
SAVER5   DS    F                   Save Register 5
SAVER5A  DS    F                   Save Register 5
SAVER6   DS    F                   Preserve R6 during BRODPRNT handling
SAVER6A  DS    F                   Save Register 6
SAVER9A  DS    F                   BAL Register Save Area
SAVER9B  DS    F                   BAL Register Save Area
SAVER9C  DS    F                   BAL Register Save Area
SAVER9D  DS    F                   BAL Register Save Area
SAVER9E  DS    F                   BAL Register Save Area
SAVER9F  DS    F                   BAL Register Save Area
SAVER9G  DS    F                   BAL Register Save Area
SAVER9H  DS    F                   BAL Register Save Area
SAVER9I  DS    F                   BAL Register Save Area
SAVER9J  DS    F                   BAL Register Save Area
SAVER9K  DS    F                   BAL Register Save Area
SAVER9L  DS    F                   BAL Register Save Area
SAVER9M  DS    F                   BAL Register Save Area
SAVER9N  DS    F                   BAL Register Save Area
SAVER9O  DS    F                   BAL Register Save Area
SAVER9P  DS    F                   BAL Register Save Area
SAVER9Q  DS    F                   BAL Register Save Area
SAVER9R  DS    F                   BAL Register Save Area
SAVER9S  DS    F                   BAL Register Save Area
SAVER9T  DS    F                   BAL Register Save Area
SAVER9U  DS    F                   BAL Register Save Area
SAVER9V  DS    F                   BAL Register Save Area
SAVER9W  DS    F                   BAL Register Save Area
SAVER9X  DS    F                   BAL Register Save Area
SAVER9Y  DS    F                   BAL Register Save Area
SAVER10  DS    F                   Save Register 10
PARMSAVE DS    F                   Save passed PARM address if any
SAVERBA  DS    CL3                 SAVE LOCAL OF USER INDEX
         DC    C' '                Initialized at beginning of program
BLANK44  DC    CL44' '             General Blanks if needed
PWKAREA  DC    CL3' '              For uppercasing the PARM
ADDUSLNE DS    0CL130
ADDUSHDR DC    CL6'./--- '
ADDUSUSR DC    CL7'       '
ADDUSEND DC    CL117' '
* - - - - - - - - - - -  - - - - - <<<<<<<<<<< >>>>>>>>>>>   below
BRACFLG  DC    X'00'               Bracket flag
DDNFLAG  DC    X'00'               Results of TIOT scan
*              X'01'               SYSPRINT DD is coded in JCL
*              X'02'               BDMMDUMP DD is coded in JCL
*              X'04'               EXPORTIN DD is coded in JCL
* - - - - - - - - - - -  - - - - - <<<<<<<<<<< >>>>>>>>>>>   above
         DC    X'00'
REC130   DS    0CL130              Dump Record made with Key+Data
KEYHOLD  DC    XL1'00'             Key slot
RECHOLD  DC    XL129'00'           Data slot
INCORGEN DS    F
         DS    0F
MASK10   DC    XL10'40202020202020202120'
RECCNT   DC    PL1'0'
MSGCOUNT DC    PL5'0'
UWMCNT   DC    PL5'0'
NOTDIR   DC    PL5'0'              CT FOR NOTICE DIRECTORY RECS
USRIND   DC    PL5'0'              CT FOR USER MAIL DIRECTORY RECS
NOTMSG   DC    PL5'0'              CT FOR NOTICE MSG RECS
USRMSG   DC    PL5'0'              CT FOR USER MAIL MSG RECS
PTRMSG   DC    PL5'0'              CT FOR POINTER REC (ALWAYS 1) JDM1
REC04    DC    PL5'0'              CT FOR MASTER REC (ALWAYS 1)  JDM0
FREEREC  DC    PL5'0'              CT FOR INACTIVE MAIL MSG RECS
UNUSABL  DC    PL5'0'
USERS    DC    PL5'0'
ACTNOT   DC    PL5'0'              Number of active Notify messages
INANOT   DC    PL5'0'              Number of inactive Nofify messages
USERDASH DC    CL133'    ----------------------------------------------X
               --------------------'
*
USERID   DS    0CL8
USERIDI  DS    CL7
USERIDB  DS    CL1
         SPACE
*--------------------------------------------------------------------*
*--              M E S S A G E   L A Y O U T S                     --*
*--------------------------------------------------------------------*
         SPACE
DSNAMET  DS    0CL133
         DC    CL30'-BRODCAST Dataset Name  : '
DSNAMEN  DS    CL44
         DC    CL59' '
         SPACE
*--------------------------------------------------------------------*
         SPACE
DSVOLST  DS    0CL133
         DC    CL30' BRODCAST Dataset Volser: '
DSVOLSN  DS    CL6
         DC    CL97' '
         SPACE
*--------------------------------------------------------------------*
*--------------------------------------------------------------------*
*--------------------------------------------------------------------*
TITLINE  DS    0CL133
         DC    C'1'
         DC    CL3' '
         DC    CL6'---'
         DC    CL79'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM   -X
               --'
         DC    CL46' '
         SPACE
*--------------------------------------------------------------------*
         SPACE
CPYRLINE DS    0CL133
         DC    C'0'
         DC    CL3' '
* -->                               Currently 77 characters
         DC    C'&COPYRGT'
         DC    C'&COPYRSV'
* -->
         DC    CL52' '
         SPACE
*--------------------------------------------------------------------*
         SPACE
REPTLN01 DS    0CL133
         DC    C'-'
         DC    CL3' '
         DC    CL6'---'
         DC    CL52'&PGMNAME   ---   BDMXPORT Conversion to BDMMLOAD  '
         DC    C' ---'
         DC    CL67' '
*--------------------------------------------------------------------*
         DC    C' '                                                      05250
LINE     DC    CL133' '                                                  05251
LINET    EQU   LINE+7
LINEM    EQU   LINE+1
*--------------------------------------------------------------------*
         SPACE
         EJECT
         SPACE
         IEZBITS
         SPACE
         IKJZT301 DSECT=YES
         SPACE
         IKJZT302
         SPACE
         IKJZT303
         SPACE
         IKJZT304
         SPACE
         IKJZT305
         SPACE
         IKJZT306
         SPACE
         IKJEESCB
         END
