BDMREST  TITLE 'BDMREST - RESTORE BRODCAST DATASET FROM A BDMDUMP'
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  Documentation:   This program is a batch program to restore a      *
*                   copy of the BRODCAST dataset from an FB-130       *
*                   BDMDUMP backup.                                   *
*                                                                     *
*                                                                     *
*       Copyright (C) 1995-2025 Sam Golob Systems Programming LLC     *
*                 All Rights Reserved                                 *
*                                                                     *
*                                                                     *
*          This program tries to restore a copy of BRODCAST           *
*          in such a way, so it will be usable, if renamed to         *
*          SYS1.BRODCAST.  Therefore, the program only allows one     *
*          extent.  If you allocate secondary extents in your         *
*          creation JCL (as illustrated below), they will be          *
*          ignored.  The program reports exactly how large you        *
*          should allocate your new dataset, and you should make      *
*          it exactly that large.  This is because the dataset is     *
*          a direct access dataset, and it has a fixed number of      *
*          slots.  As copied, you can't expand it.                    *
*                                                                     *
*                                                                     *
*       Function:   To restore a SYS1.BRODCAST dataset or a copy      *
*                   in the same format, from a BDMDUMP FB-130 file.   *
*                                                                     *
*          Author:  Sam Golob             Version 1.5.0               *
*                                                                     *
*            Date:  May 09, 99                                        *
*                                                                     *
*                                                                     *
*       JCL to invoke:                                                *
*                                                                     *
* //BDMREST  EXEC PGM=BDMREST,REGION=3M                               *
* //STEPLIB  DD  DISP=SHR,DSN=SBGOLOB.LOAD                            *
* //BRODCAST DD  DSN=SBGOLOB.BRODCAST.COPY,DISP=(NEW,CATLG,DELETE),   *
* //         DCB=(DSORG=DA,RECFM=FB,BLKSIZE=129,KEYLEN=1,LRECL=129),  *
* //         SPACE=(TRK,(120,30),RLSE),UNIT=SYSDA                     *
* //BRODDUMP DD  DISP=SHR,DSN=SBGOLOB.BRODCAST.DUMP                   *
* //SYSPRINT DD  SYSOUT=*                                             *
*                                                                     *
*                                                                     *
*         Changes:                                                    *
*                                                                     *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*       I N S T R E A M    M A C R O S                                *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         MACRO
         IKJZT301  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*        UPDATED                          31MAY95 SBG.
*
*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                                RECORD 1                             *
*                                                                     *
*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *
*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *
*        CONCERNING THE DATA SET.                                     *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
R1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET
         AGO   .SKIP
.NODSECT ANOP
R1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET
.SKIP    ANOP
R1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW
R1BCFLGS DS    B -            NOTICES FLAGS - NOT USED
R1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST
*                               NOTICES DIRECTORY RECORD
R1USPTRP DS    0A -           SAME AS R1USPTR BELOW
R1USFLGS DS    B -            USER MAIL FLAGS - NOT USED
R1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD
R1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS
R1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -
*                               FROM MASTER SCHEDULER BASEA, BABCMAX
*                                                                     *
R1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =
*                               ' SYS1.BRODCAST DATA SET '
R1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS
*                               A 1-DIGIT NUMBER
         DS    CL1 -          RESERVED
R1FRESRH DS    CL3 -          RBA OF FREE SEARCH RECORD
R1GENNUM DS    F -            GENERATION NUMBER FOR IN-STORAGE NOTICE
*                               TABLE
         DS    CL76 -         RESERVED
         MEND
         MACRO
         IKJZT304  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*
*        IKJZT304       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                       USER MAIL DIRECTORY RECORD                    *
*                                                                     *
*        THE USER MAIL DIRECTORY RECORD (USDIR) IS A LOGICAL          *
*        DIRECTORY RECORD IN THE SYS1.BRODCAST DATA SET.              *
*        THE DIRECTORY CONTAINS USERIDS AND PTRS TO THE FIRST AND     *
*        LAST MESSAGE FOR EACH USERID.                                *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
USDIR    DSECT , -            USER MAIL DIRECTORY RECORD
         AGO   .SKIP
.NODSECT ANOP
USDIR    DS    0F -           USER MAIL DIRECTORY RECORD
.SKIP    ANOP
USDENTRY DS    0CL13 -        DIRECTORY ENTRY FOR 1 USERID
USDID    DS    CL7 -          USERID (LEFT JUSTIFIED, PADDED W/ BLANKS)
USDRBA   DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST
*                               MESSAGE FOR THIS USERID (ZERO IF NONE)
USDEND   DS    AL3 -          RBA OF LAST MESSAGE FOR THIS USERID
*                               (ZERO IF NONE)
         DS    8CL13 -        RESERVE SPACE FOR 8 MORE DIRECTORY
*                               ENTRIES IDENTICAL IN FORMAT TO THE
*                               PRECEDING 'USDENTRY'
         DS    XL8 -          RESERVED
USDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'
USDNEXT  DS    AL3 -          CHAIN PTR TO NEXT USER MAIL DIRECTORY
*                               RECORD (ZERO IF LAST)
         MEND
         MACRO
         IKJZT305  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*
*        IKJZT305       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                        USER MAIL MESSAGE RECORD                     *
*                                                                     *
*        THE USER MAIL MESSAGE RECORD (USMSG) IS A RECORD IN          *
*        THE SYS1.BRODCAST DATA SET WHICH CONTAINS A MAIL MESSAGE     *
*        INTENDED FOR A PARTICULAR USERID.                            *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
USMSG    DSECT , -            USER MAIL MESSAGE RECORD
         AGO   .SKIP
.NODSECT ANOP
USMSG    DS    0F -           USER MAIL MESSAGE RECORD
.SKIP    ANOP
USMLNG   DS    FL1 -          LENGTH OF MAIL MSG TEXT
USMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)
USMNEXT  DS    AL3 -          CHAIN PTR TO NEXT MAIL MESSAGE RECORD
*                               FOR THIS USERID (ZERO IF LAST)
         MEND
         MACRO
&NAME    HEX   &TO,&LEN,&FROM                                            01470
&NAME    DS    0H                                                        01471
         ST    R4,SAV4HEX                                                01472
         STM   R15,R1,HEXSAVE                                            01473
         LA    R1,&FROM                                                  01474
         LA    R0,&LEN                                                   01475
         LA    R15,&TO                                                   01476
         BAL   R4,HEX                                                    01477
         L     R4,SAV4HEX                                                01478
         LM    R15,R1,HEXSAVE                                            01479
         MEND
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
*        REGS
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 1
SP000    EQU   0
         SPACE 1
         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV
         LCLC  &PGMNAME
&VERSNUM SETC  ' 1.5.0A'
&PKGNAME SETC  'BRODMSTR'
&PKGTITL SETC  'Broadcast Master'
&VERTITL SETC  ' Version '
&COPYRGT SETC  'Copyright (c) 1995-2025 Sam Golob Systems Programming'
&COPYRSV SETC  ' LLC - All Rights Reserved  '
&PGMNAME SETC  'BDMREST '
&PGMNAME AMODE 24
&PGMNAME RMODE 24
&PGMNAME CSECT
         B     BEGINN-*(,R15)
         DC    CL8'&PGMNAME'
         DC    C' '
         DC    C'&PKGTITL'
         DC    C'&VERTITL'
         DC    C'&VERSNUM'
         DC    C' '
         DC    C'&COPYRGT'
         DC    C'&COPYRSV'
         DC    CL16' &SYSDATE &SYSTIME '
         DC    CL6'HLASM '
         DC    C'&SYSVER'
         DC    C' '
BEGINN   DS    0H
         STM   R14,R12,12(R13)     SAVE REGISTERS
         LR    R12,R15
         USING BDMREST,R12,R10,R8  Establish addressability
         LA    R10,4095(,R12)
         LA    R10,1(,R10)
         LA    R8,4095(,R10)
         LA    R8,1(,R8)
         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         USING DATAAREA,R13
         BAL   R9,INITCON          INITIALIZE CONSTANTS IN DATA AREA
         SPACE 1
DOBROD   OPEN  (BRODCAST,(OUTPUT))
         OPEN  (BRODDUMP,(INPUT))
         OPEN  (SYSPRINT,(OUTPUT))
         BAL   R9,HEADREAD         READ HEADER RECORD OF BDMDUMP FILE
*                                  AND EXTRACT ESSENTIAL DATASET INFO
*                                  FOR THE RESTORE.................
         L     R11,HIGHVAL         SAVE TOTAL RECORD COUNT
         CVD   R11,CVDWORK         CONVERT TO DECIMAL
         MVC   STORNUM1,CVDWORK    STORE AWAY FOR REPORTING
         BCTR  R11,0               LOWER BY HEADREAD WRITE
         BAL   R9,OUTHEADR         WRITE SYSPRINT HEADER
* ------------------------------------------------------------------ *
* ---    MAIN LOOP TO LOAD ALL THE BRODCAST RECORDS.             --- *
* ------------------------------------------------------------------ *
LOADBRD  DS    0H                  READ THROUGH USERID RECORDS
         GET   BRODDUMP,INREC      GET THE FIRST RECORD OF DUMP
         L     R7,RECONTRK         INCREMENT
         LA    R7,1(,R7)            THE
         ST    R7,RECONTRK           COUNT
         L     R7,NUMBREC          INCREMENT
         LA    R7,1(,R7)            THE
         ST    R7,NUMBREC            COUNT
*  DELETED USER MESSAGE RECORDS X'FF' IN THE KEY FIELD, HAVE
*  TO HAVE THE "R" PART OF THE RECORD'S TTR OR CCHHR INSERTED
*  INTO THE FIRST DATA BYTE OF THE RECORD.  IF THIS IS NOT
*  DONE, THE TSO SEND COMMAND GOES HAYWIRE.  FOR THIS REASON,
*  WHEN COPYING SYS1.BRODCAST BETWEEN TWO DIFFERENT DEVICE
*  TYPES, THIS VALUE HAS TO BE FILLED IN FOR THE CURRENT
*  DEVICE TYPE, OTHERWISE IT WILL GO OUT OF SYNCHRONIZATION.
         CLI   INREC,X'FF'         IS THIS A DELETED RECORD?
         BNE   GOWRITE             NO, DON'T HAVE TO PUT REC #
         MVC   INREC+1(1),RECONTRK+3   MOVE IN RECORD NUMBER
GOWRITE  DS    0H
         WRITE MDLDECB,SF,BRODCAST,INREC,'S',MF=E
         C     R15,=F'8'           CHECK IF END OF EXTENT
         BNE   GOSKIP1             NO. TRY IF END OF TRACK
         MVI   EOJFLAG,X'FF'       YES. INDICATE PRELIM END.
         B     ENDCHECK            FINISH PREMATURELY BUT CHECK WRITE
GOSKIP1  C     R15,=F'4'           CHECK IF END OF TRACK
         BNE   GOCHECK             NO. STILL IN MID OF TRACK
         CVD   R7,CVDWORK          CONVERT LAST TRACK NUMBER
         CP    STORNUM2,=P'0'      NONZERO NUMBER?
         BNE   GOSKIP2             YES. ONLY DO IT ONCE
         MVC   STORNUM2,CVDWORK    STORE IT AWAY
GOSKIP2  XR    R7,R7               ZERO REGISTER
         ST    R7,RECONTRK         RE-INITIALIZE REC/TRK
GOCHECK  DS    0H
         CHECK MDLDECB
         BCT   R11,LOADBRD         CYCLE THROUGH ALL RECORDS
         B     EOJ
* ------------------------------------------------------------------ *
ENDCHECK DS    0H                  CHECK last record written.
         CHECK MDLDECB
EOJ      DS    0H                  BYE.
         L     R7,NUMBREC          REPORT NUMBER OF RECORDS
         CVD   R7,CVDWORK            WHICH WERE ACTUALLY
         MVC   STORNUM3,CVDWORK        LOADED.
* -- >
         CLC   STORNUM3,STORNUM1   Was it exact?
         BNE   PRELMEND            No. Real preliminary end.
         MVI   EOJFLAG,X'00'       Actually OK.  Mark normal end.
PRELMEND DS    0H
* -- >
         BAL   R9,FINALRPT         Print the final report
         CLI   EOJFLAG,X'FF'       Abnormal end ?
         BNE   EOJGO1              No. Print that it's normal.
         BAL   R9,EOJPREL          Yes. Print diagnostics.
         B     EOJGO2
EOJGO1   DS    0H                  Normal end.
         BAL   R9,EOJNORM          Put out message for normal.
EOJGO2   DS    0H
         CLI   EOJFLAG,X'FF'       Preliminary end of load ?
         BNE   EOJGO2A             No. Set RC = 0
         LA    R5,8                Yes. Set RC = 8 and save in R5.
         B     EOJGO2B
EOJGO2A  DS    0H
         LA    R5,0                Save RC in R5 past FREEMAIN.
EOJGO2B  DS    0H
         CLOSE (BRODCAST)
         CLOSE (BRODDUMP)
         CLOSE (SYSPRINT)
         LR    R1,R13
         L     R13,4(,R13)
         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000
EOJGO3   DS    0H
         LR    R15,R5              Load return code into R15.
         ST    R15,16(,R13)        Put RC into passed save area.
         LM    R14,R12,12(R13)
EOJN     BR    R14
         LTORG
         EJECT
*-----------------------------------------------------------------*
*---*                S U B R O U T I N E S                    *---*
*-----------------------------------------------------------------*
         SPACE 2
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        READ THE SYS1.BRODCAST HEADER RECORD AND COPY FIELDS.    *
*
HEADREAD GET   BRODDUMP,INREC      GET THE FIRST RECORD OF DUMP
         L     R7,=F'1'            SHOW IT'S THE FIRST
         ST    R7,RECONTRK           RECORD IN THE TRACK
         SPACE
         LA    R3,INREC+1          INFO THAT SHOULD BE ON HEADER
         USING R1BC,R3             ADDRESSABILITY TO HEADER RECORD MAP
         MVC   HIGHVAL(4),R1RECNUM  SAVE NUMBER OF RECDS IN BRODCAST
         L     R7,NUMBREC          INCREMENT
         LA    R7,1(,R7)            THE
         ST    R7,NUMBREC            COUNT
         WRITE MDLDECB,SF,BRODCAST,INREC,'S',MF=E
         CHECK MDLDECB
         DROP  R3
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*   PRINT INSTRUCTIONS AND OTHER INFORMATION AT THE BEGINNING     *
*   OF THE PROGRAM EXECUTION.                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
OUTHEADR DS    0H
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE
         PUT   SYSPRINT,TITLINE
         PUT   SYSPRINT,CPYRLINE
         PUT   SYSPRINT,REPTLN01
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE
         MVC   OUTLINE(1),THRLINE          SKIP 3
         PUT   SYSPRINT,OUTLINE            ACTUALLY SKIP 6
         PUT   SYSPRINT,OUTLINE
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE
         MVC   OUTLINE+19(49),SYSMSG01     PUT OUT DOC
         PUT   SYSPRINT,OUTLINE             INSTRUCTIONS.
         MVC   OUTLINE+19(49),SYSMSG02     (A BUNCH OF LINES)
         PUT   SYSPRINT,OUTLINE
         MVC   OUTLINE+19(49),SYSMSG03
         PUT   SYSPRINT,OUTLINE
         MVC   OUTLINE+19(49),SYSMSG04
         PUT   SYSPRINT,OUTLINE
         MVC   OUTLINE+19(49),SYSMSG05
         PUT   SYSPRINT,OUTLINE
         MVC   OUTLINE+19(49),SYSMSG06
         PUT   SYSPRINT,OUTLINE
         MVC   OUTLINE+19(49),SYSMSG07
         PUT   SYSPRINT,OUTLINE
         MVC   OUTLINE+19(49),SYSMSG08
         PUT   SYSPRINT,OUTLINE
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE
         MVC   OUTLINE(1),THRLINE          SKIP 3 LINES,
         PUT   SYSPRINT,OUTLINE            PREPARING FOR
         BR    R9                          FINAL REPORT.
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*    NORMAL END OF JOB.  ALL RECORDS LOADED PROPERLY.             *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
EOJNORM  DS    0H
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE
         PUT   SYSPRINT,OUTLINE            MESSAGE.
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE
         MVC   OUTLINE(1),TWOLINE          SKIP 2
         MVC   OUTLINE+9(49),SYSMSG15      PUT OUT NORMAL EOJ
         PUT   SYSPRINT,OUTLINE            MESSAGE.
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE
         PUT   SYSPRINT,OUTLINE            MESSAGE.
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*    ABNORMAL END.  PROBABLY NOT ENOUGH PRIMARY SPACE ALLOCATED   *
*    TO FIT IN ALL THE RECORDS FROM THE COPIED SYS1.BRODCAST,     *
*    INTO THE FIRST EXTENT.  THIS CODE REPORTS ON HOW MANY        *
*    RECORDS WERE ACTUALLY LOADED, AND ON EXACTLY HOW MANY        *
*    TRACKS HAVE TO BE ALLOCATED IN THE FIRST EXTENT, SO THE      *
*    COPY WILL BE ABLE TO FUNCTION AS A NEW SYS1.BRODCAST         *
*    DATASET.                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
EOJPREL  DS    0H                     PUT OUT 'SPACE' MESSAGES
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE
         PUT   SYSPRINT,OUTLINE          PRINT OUT
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE
         MVC   OUTLINE(1),THRLINE          SKIP 3
         MVC   OUTLINE+9(49),SYSMSG16    MOVE MESSAGE TEXT
         PUT   SYSPRINT,OUTLINE          PRINT OUT
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE
         MVC   OUTLINE+9(49),SYSMSG17    MOVE MESSAGE TEXT
         OI    STORNUM4+7,X'0F'          MOVE IN REQUIRED
         UNPK  OUTLINE+40(8),STORNUM4      NUMBER OF TRACKS
         BAL   R5,STRIPZ1                STRIP LEADING ZEROS
         PUT   SYSPRINT,OUTLINE          PRINT OUT
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE
         MVC   OUTLINE+9(49),SYSMSG18    MOVE MESSAGE TEXT
         PUT   SYSPRINT,OUTLINE          PRINT OUT
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE
         PUT   SYSPRINT,OUTLINE          PRINT OUT
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE
         MVC   OUTLINE+9(49),SYSMSG20    MOVE MESSAGE TEXT
         PUT   SYSPRINT,OUTLINE          PRINT OUT
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE
         PUT   SYSPRINT,OUTLINE          PRINT OUT
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*    REPORT STATISTICS ON NUMBER OF RECORDS EXPECTED, NUMBER OF   *
*    RECORDS ACTUALLY LOADED, NUMBER OF RECORDS PER TRACK, THAT   *
*    WERE DETERMINED FOR THIS DEVICE TYPE, AND ACTUAL NUMBER OF   *
*    TRACKS ON THIS DEVICE WHICH WERE NEEDED TO ACCOMMODATE ALL   *
*    THE RECORDS FROM THE COPIED SYS1.BRODCAST DATASET.           *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
FINALRPT DS    0H
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE
         MVC   OUTLINE(1),THRLINE          SKIP 3
         PUT   SYSPRINT,OUTLINE            PUT OUT LINE
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE
         MVC   OUTLINE(1),TWOLINE          SKIP 2
         MVC   OUTLINE+9(49),SYSMSG11      NUMBER OF RECORDS
         OI    STORNUM1+7,X'0F'              EXPECTED
         UNPK  OUTLINE+62(8),STORNUM1
         BAL   R5,STRIPZ                   REMOVE LEADING ZROS
         PUT   SYSPRINT,OUTLINE            PUT OUT LINE
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE
         MVC   OUTLINE(1),TWOLINE          SKIP 2
         MVC   OUTLINE+9(49),SYSMSG12      NUMBER OF RECORDS
         OI    STORNUM3+7,X'0F'              ACTUALLY LOADED
         UNPK  OUTLINE+62(8),STORNUM3
         BAL   R5,STRIPZ                   STRIP LEADING ZEROS
         PUT   SYSPRINT,OUTLINE            PUT OUT LINE
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE
         MVC   OUTLINE(1),TWOLINE          SKIP 2
         MVC   OUTLINE+9(49),SYSMSG13      NUMBER OF RECORDS
         OI    STORNUM2+7,X'0F'              THAT FIT ONTO ONE
         UNPK  OUTLINE+62(8),STORNUM2          TRACK.
         BAL   R5,STRIPZ                   STRIP LEADING ZEROS
         PUT   SYSPRINT,OUTLINE            PUT OUT LINE
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE
         MVC   OUTLINE(1),TWOLINE          SKIP 2
         MVC   OUTLINE+9(49),SYSMSG14      NUMBER OF TRACKS
         MVC   STORWRK1(4),=X'00000000'    CLEAR UPPER ORDER OF BIG #
         MVC   STORWRK1+4(8),STORNUM1      LOAD SMALL # INTO BIG #
         DP    STORWRK1+3(9),STORNUM2+5(3)   TO BE ALLOCATED
         MVC   STORNUM4+3(5),STORWRK1+4        SO THAT ALL
         MVC   STORNUM5+5(3),STORWRK1+9          RECORDS FIT
         CP    STORNUM5,=P'0'                      EXACTLY.
         BE    FINOADD                     CALCULATE NUMBER.
         AP    STORNUM4,=P'1'
FINOADD  MVC   OUTLINE+9(49),SYSMSG14
         OI    STORNUM4+7,X'0F'
         UNPK  OUTLINE+62(8),STORNUM4      REPORT THE NUMBER.
         BAL   R5,STRIPZ                   STRIP LEADING ZEROS
         PUT   SYSPRINT,OUTLINE            PUT OUT RECORD
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*   ROUTINE TO STRIP LEADING ZEROS.  I'M DOING THIS TO AVOID A    *
*   POSSIBLE OCCASION FOR A S0C7, WHICH CAN HAPPEN WHEN YOU DO    *
*   AN ED INSTRUCTION THAT FAILS. UNPK DOESN'T HAVE THIS PROBLEM. *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
STRIPZ1  DS    0H
         LA    R11,7
         LA    R4,OUTLINE+40
         B     STRIPZL
STRIPZ   DS    0H
         LA    R11,7
         LA    R4,OUTLINE+62
STRIPZL  CLC   0(1,R4),=C'0'
         BNE   STRIPZE
         MVI   0(R4),X'40'
         LA    R4,1(,R4)
         BCT   R11,STRIPZL
STRIPZE  BR    R5
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEX      DS    0H                                                        04224
         MVC   1(1,R15),0(R1)        Move byte                           04225
         UNPK  0(3,R15),1(2,R15)     Unpack                              04226
         TR    0(2,R15),HEXTAB-240                                       04227
         LA    R15,2(,R15)           Increment output pointer            04228
         LA    R1,1(,R1)             Increment input pointer             04229
         BCT   R0,HEX                Decrement length, then loop         04230
         MVI   0(R15),C' '           Blank the trailing byte             04231
         BR    R4                    Return to caller                    04232
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                     04233
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEXSAVE  DS    3F                    Register save for HEX macro
SAV4HEX  DC    F'0'
         SPACE                                                           04234
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        DATA AREAS THAT NEED TO BE INITIALIZED AT THE BEGINNING  *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
INITCON  MVI   LINE-1,C' '         INITIALIZE BLANK
         MVC   LEVEL(7),BLANKS
         MVI   OUTLINE-1,C' '        INITIALIZE BLANK
         MVC   OUTLINE(133),OUTLINE-1  BLANK SYSPRINT OUTPUT AREA
         MVC   HIGHVAL(4),ZERRECX    ZERO OUT HIGHVAL COUNT
         MVC   NUMBREC(4),ZERRECX    ZERO OUT RECORD COUNTER
         MVC   INREC-2(2),ZERRECX    INITIALIZE INPUT AREA
         MVC   INREC(130),ZERRECX    INITIALIZE INPUT AREA
         MVC   INHDR(130),ZERRECX    INITIALIZE HEADER AREA
         MVI   RC15,X'00'            RETURN CODE AREA
         MVI   EOJFLAG,X'00'
         ZAP   STORNUM1,=P'0'        INITIALIZE PACKED FIELDS
         ZAP   STORNUM2,=P'0'        INITIALIZE PACKED FIELDS
         ZAP   STORNUM3,=P'0'        INITIALIZE PACKED FIELDS
         ZAP   STORNUM4,=P'0'        INITIALIZE PACKED FIELDS
         ZAP   STORNUM5,=P'0'        INITIALIZE PACKED FIELDS
         ZAP   STORNUM6,=P'0'        INITIALIZE PACKED FIELDS
         ZAP   STORNUM7,=P'0'        INITIALIZE PACKED FIELDS
         ZAP   STORNUM8,=P'0'        INITIALIZE PACKED FIELDS
         MVC   RECONTRK(4),ZERRECX   COUNTER FOR RECORD NUMBER
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         EJECT
*-----------------------------------------------------------------*
*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*
*-----------------------------------------------------------------*
PACKZERO DC    PL3'0'
PACKZER5 DC    PL5'0'
FULLZERO DC    F'0'
* - - - - - - - - - - - - - - - - - - - - - - - - *
MOVEID   MVC   NEWID(*-*),0(R1)    EXECUTED
         USING USMSG,R2
MOVEMSG  MVC   LINET(*-*),USMTEXT  EXECUTED
         DROP  R2
* - - - - - - - - - - - - - - - - - - - - - - - - *
ZERRECX  DS    0CL130
         DC    130X'00'
BLANKS   DC    C'        '         8 BLANKS
BLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER
ZEROS    DS    0CL8
ZERREC   DS    0CL128
ZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING
         DC    X'0000'
         DC    121X'00'
MESSAGE1 DC    C'BAD OPEN - ALLOC F(BRODCAST) DA(SYS1.BRODCAST) SH REU'
MESSEND  DC    C'* - - - - END OF MESSAGES FOR THIS USER - - - - *'
MESTOTAL DC    C'USER         HAD           DEFERRED TSO MESSAGES'
MESALL DC C'TOTAL DEFERRED TSO MESSAGES IN SYS1.BRODCAST              '
NEWPAGE  DC    C'1'
NEXTLIN  DC    C' '
TWOLINE  DC    C'0'
THRLINE  DC    C'-'
NOLINE   DC    C'+'
*--------------------------------------------------------------------*
TITLINE  DS    0CL133
         DC    C'1'
         DC    CL3' '
         DC    CL6'---'
         DC    CL79'&PGMNAME PROGRAM  -  &PKGTITL &VERTITL &VERSNUM   -X
               --'
         DC    CL46' '
         SPACE
*--------------------------------------------------------------------*
         SPACE
CPYRLINE DS    0CL133
         DC    C'0'
         DC    CL3' '
* -->                               Currently 77 characters
         DC    C'&COPYRGT'
         DC    C'&COPYRSV'
* -->
         DC    CL52' '
         SPACE
*--------------------------------------------------------------------*
         SPACE
REPTLN01 DS    0CL133
         DC    C'-'
         DC    CL3' '
         DC    CL6'---'
         DC    CL51'&PGMNAME   ---   BRODCAST Dataset Restore Program '
         DC    C' ---'
         DC    CL68' '
*--------------------------------------------------------------------*
SYSMSG01 DC    C'This program creates a copy of the BRODCAST      '
SYSMSG02 DC    C'dataset from a BDMDUMP file, which had originally'
SYSMSG03 DC    C'been created from a BRODCAST dataset or a copy.  '
SYSMSG04 DC    C'The restored dataset must reside in one extent.  '
SYSMSG05 DC    C'This program can restore BRODCAST across device  '
SYSMSG06 DC    C'types of different geometry, and will report on  '
SYSMSG07 DC    C'how many tracks exactly, should be used for the  '
SYSMSG08 DC    C'allocation of the output dataset.                '
SYSMSG09 DC    C'                                                 '
SYSMSG10 DC    C'                                                 '
SYSMSG1A DC    C'                                                 '
*
SYSMSG11 DC    C'Expected Number of Records in Copy, from Header :'
SYSMSG12 DC    C'Number of Records Actually Loaded into the Copy :'
SYSMSG13 DC    C'Number of Records per Track for this Device Type:'
SYSMSG14 DC    C'Expected Number of Tracks to be Allocated       :'
SYSMSG15 DC    C'  Loading Action Completed Successfully .        '
SYSMSG16 DC    C'Loading Interrupted Unexpectedly....             '
SYSMSG17 DC    C'Please rerun, and allocate                tracks '
SYSMSG18 DC    C' in a single extent.                             '
SYSMSG20 DC    C'WARNING - Output BRODCAST dataset is not usable !'
MASK4    DC    XL4'40202120'
MASK6    DC    XL6'402020202120'
MASK10   DC    XL10'40202020202020202120'
BPARM    DC    AL2(BPARME-BPARM,0),C'NON'
BPARME   EQU   *
         DS    0F
QNAM     DC    CL8'SYSIKJBC'
RNAME    DC    X'000000'
         SPACE 3
BRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X
               BLKSIZE=129,        LENGTH OF FILES BLOCK               X
               DSORG=PS,           SEQUENTIAL....                      X
               MACRF=(WL),         LOAD OF BDAM FILE                   X
               RECFM=F,            FIXED LENGTH                        X
               KEYLEN=1            SIZE OF KEY
BRODDUMP DCB   DSORG=PS,DDNAME=BRODDUMP,MACRF=GM,EODAD=EOJ,            X
               RECFM=FB,LRECL=130
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,LRECL=133,MACRF=PM,RECFM=FBA
         SPACE
         SPACE 3
         LTORG
         SPACE
         DS    0F
ENQUSER  ENQ   (QNAM,RNAME,E,,SYSTEM),MF=L
         SPACE 3
*-----------------------------------------------------------------*
*----         GETMAINED DATA AREA FIELDS                      ----*
*-----------------------------------------------------------------*
DATAAREA DSECT
SAVE     DS    9D
HIGHVAL  DS    F                   NUMBER OF RECORDS IN BRODCAST
NUMBREC  DS    F                   COUNT OF RECORDS LOADED
RECONTRK DS    F                   COUNT RECORDS ON THIS TRACK
RC15     DS    C                   STORE RETURN CODE FROM WRITE
NEWID    DC    C'        '         STORE PARM USERID HERE
         DS    CL72                PADDING
ADDADR   DS    0CL12
UMSGCNT  DC    PL3'0'              COUNT OF MESSAGES FOR EACH USER
TMSGCNT  DC    PL5'0'              COUNT OF ALL MESSAGES DISPLAYED
NEXT     DS    F                   FOR IKJIFRIF ADD ADDRESS
OLDID    DC    C'        '         STORE OLD USERID HERE
LEVEL    DS    0CL7                LEVEL OF SYS1.BRODCAST
LEVELLIT DS    CL6                    LITERAL 'LEVEL'
LEVELLEV DS    CL1                       LEVEL NUMBER - CHAR FMT
RNAM     DC    X'000000'           FREE SEARCH RECORD RBA - STORED
MYUSSLOT DC    X'00'               STORE SLOT OF MY USERID IN RECORD
NWUSRBA  DC    X'000000'           STORE RBA OF NEW USERID FOR LATER
NWUSSLOT DC    X'00'               STORE SLOT OF NEW USERID IN RECORD
FNUSRBA  DC    X'000000'           RBA OF USERID TO BE FOUND
FNUSSLOT DC    X'00'               SLOT OF THIS USERID IN RECORD
USERID   DS    0CL8                STORE FOUND USERID HERE
USERIDI  DS    CL7                 STORE FOUND USERID HERE
USERIDF  DS    CL1                 8TH CHARACTER
FINDID   DS    0CL8                USERID NAME TO BE FOUND
FINDIDI  DS    CL7                 FIRST 7 CHARACTERS
FINDIDF  DS    CL1                 8TH CHARACTER
         DS    0F                  ALIGN ON FULLWORD
SAVEINF1 DS    CL8                 PLACE TO STORE CCHHR
LINEB    DS    C                   LINE-1
LINE     DS    CL137
LINET    EQU   LINE+7
INHDR    DS    CL130
         DS    XL2
INREC    DS    CL130
         DS    0F
WRTWR    WRITE MDLDECB,SF,MF=L
WRTWREND DS    0F
WRTWRLEN EQU   *-WRTWR
STOR0001 DS    2F
STOR1415 DS    2F
WK1TOTAL DC    C'                                                '
WK1ALL DC C'                                                          '
WK1NOUSR DC    C'                                              '
EOJFLAG  DS    X
         DS    CL1
OUTLINE  DS    CL133
         DS    CL9                 FILLER
         DS    0D
CVDWORK  DS    D
STORNUM1 DS    PL8
STORNUM2 DS    PL8
STORNUM3 DS    PL8
STORNUM4 DS    PL8
STORNUM5 DS    PL8
STORNUM6 DS    PL8
STORNUM7 DS    PL8
STORNUM8 DS    PL8
STORWRK1 DS    PL12
         SPACE 1
DATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA
         IKJCPPL
         IKJUPT
         IKJPSCB
         IKJECT
         IKJIOPL
         IEZIOB   DSECT=YES
         IKJZT301 DSECT=YES
         IKJZT304 DSECT=YES
         IKJZT305 DSECT=YES
         CVT  DSECT=YES
         END
