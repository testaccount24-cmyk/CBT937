BDMNUPD TITLE 'BDMNUPD - AUTHORIZE UPDATE OF INCORE NOTICES TABLE'
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*           NAME:   BDMNUPD                                           *
*                                                                     *
*       Copyright (C) 1995-2025 Sam Golob Systems Programming LLC     *
*                 All Rights Reserved                                 *
*                                                                     *
*         SYNTAX:   BDMNUPD     (AS A TSO COMMAND)                    *
*                                                                     *
*       FUNCTION:   To set the TSVTNCTU bit in the TSVT (TSO Vector   *
*                   Table) which, when on, forces a reading of        *
*                   SYS1.BRODCAST to update the incore Notices        *
*                   table.  LISTBC tests this bit and updates the     *
*                   incore Notices, so any changes make by BDMNOTFY   *
*                   are made readable by LISTBC, as soon as LISTBC    *
*                   is executed once, by anybody on the system.       *
*                                                                     *
*                   This is correct for TSO/E 3.3.0 and later.        *
*                   At TSO/E 2.6.0 and below, in order to             *
*                   force a read of the BRODCAST dataset, you         *
*                   have to issue an OPER command with a SEND         *
*                   ' ',SAVE subcommand to actually update a          *
*                   message, after the TSVTNCTU bit has been set.     *
*                                                                     *
*                                                                     *
*      OPERATION:   APF AUTHORIZED  -  SETCODE AC(1)                  *
*                                                                     *
*                                                                     *
*          AUTHOR:  SAM GOLOB               VERSION:   1.5            *
*                                                                     *
*            DATE:  APR 26, 05                                        *
*                                                                     *
*         CHANGES:  04/26/05  -  Fix messages to correctly describe   *
*          (Version 1.4)         the condition encountered.  If not   *
*                                APF authorized, then say so.  If     *
*                                there is no TSVT, and therefore no   *
*                                need to do an update, then say so.   *
*                                (This is for an old version of MVS.) *
*                                Finally, if the bit has been updated *
*                                successfully, then say accurately    *
*                                under what conditions the incore     *
*                                Notices table will be accurately     *
*                                updated.                             *
*                                                                     *
*                                For z/OS 1.2 and below:  You need    *
*                                an actual write request to BRODCAST  *
*                                with an OPER SEND '  ',SAVE in order *
*                                for the incore Notices to be rewrit- *
*                                ten.  From z/OS 1.3 onward, a mere   *
*                                execution of LISTBC by anyone, will  *
*                                be enough, when the TSVTNCTU bit is  *
*                                on.  This is for TSO/E 3.3.0.        *
*                                                                     *
*         CHANGES:  05/17/05  -  Include a message to indicate the    *
*          (Version 1.5)         release of TSO/E that is currently   *
*                                running.                             *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*       I N S T R E A M    M A C R O S                                *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    STM   15,1,HEXSAVE
         LA    1,&FROM
         LA    0,&LEN
         LA    15,&TO
         BAL   4,HEX
         LM    15,1,HEXSAVE
         MEND
***********************************************************************
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
         YREGS
         SPACE 1
SP000    EQU   0
         SPACE 1
         GBLC  &VERSNUM,&PKGNAME,&PKGTITL,&VERTITL,&COPYRGT,&COPYRSV
         LCLC  &PGMNAME
&VERSNUM SETC  ' 1.5.0A'
&PKGNAME SETC  'BRODMSTR'
&PKGTITL SETC  'Broadcast Master'
&VERTITL SETC  ' Version '
&COPYRGT SETC  'Copyright (c) 1995-2025 Sam Golob Systems Programming'
&COPYRSV SETC  ' LLC - All Rights Reserved  '
&PGMNAME SETC  'BDMNUPD '
&PGMNAME AMODE 31
&PGMNAME RMODE ANY
&PGMNAME CSECT
         USING BDMNUPD,R12,R10
         B     BEGINN-*(,R15)
         DC    CL8'&PGMNAME'
         DC    C' '
         DC    C'&PKGTITL'
         DC    C'&VERTITL'
         DC    C'&VERSNUM'
         DC    C' '
         DC    C'&COPYRGT'
         DC    C'&COPYRSV'
         DC    CL16' &SYSDATE &SYSTIME '
         DC    CL6'HLASM '
         DC    C'&SYSVER'
         DC    C' '
BEGINN   DS    0H
         STM   R14,R12,12(R13)
         LR    R12,R15             LOAD FIRST BASE REGISTER
         LA    R10,4095(,R12)      LOAD SECOND BASE
         LA    R10,1(,R10)
         LR    R11,R1              PRESERVE CPPL POINTER.
         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         USING DATAAREA,R13
         BAL   R9,INITCON          INITIALIZE CONSTANTS IN DATA AREA
         BAL   R9,GETPSCB          GET PSCB IF ANY (IN R2)
         SPACE 1
         LTR   R2,R2               ANY PSCB?
         BZ    EOJ8                GET OUT.  NOT TSO.
         BAL   R9,CPPLPTRS         STORE STUFF OUT OF THE CPPL
         BAL   R9,SETIOPL          SET UP IOPL FOR PUTLINE
*        BAL   R9,CHEKAUTH         ARE WE OPER OR ACCT ?
CONT0    LTR   R11,R11             ANY CPPL?
         BZ    EOJ8                NO.  GET OUT
         L     R1,0(,R11)          PT TO CMD BUFFER.
         LTR   R1,R1               ANY CMD BUFFER?
         BZ    EOJ4                GET OUT IF NONE
         LH    R3,0(,R1)           LOAD LENGTH.
         STH   R3,CMBLENG          SAVE COMMAND BUFFER LENGTH
         CH    R3,=H'4'            ANYTHING?
         BNH   EOJ4                NO.  GET OUT.
         LR    R5,R3               LENGTH OF COMMAND + 4
         ICM   R5,14,FULLZERO      CLEAR HI ORDER 3 BYTES
         LH    R3,2(,R1)           LOAD OFFSET.
         STH   R3,OFFSETT          SAVE OFFSET.
         SR    R5,R3               SUBTRACT OFFSET FROM FULL LENGTH+4
         SH    R5,=H'4'            CORRECT FOR LENGTH OF CMDBUFR HEADER
* -----
         ST    R4,SAVER4X          Save work register.
         USING CVT,R4
         L     R4,16               CVT
         L     R4,CVTTVT           TSVT
         DROP  R4
         USING TSVT,R4             Use the IKJTSVT macro.
         CLC   =C'TSVT'(4),0(R4)   Is the TSVT acronym there?
         BNE   NOCORUPD            No. Report this must be an old MVS.
*  ---  >                  Fill in current TSO/E release.   below
         MVC   MSGT+27(1),TSVTLVER
         MVC   MSGT+29(2),TSVTLREL
         MVC   MSGT+32(1),TSVTLMOD
*  ---  >                  Fill in current TSO/E release.   above
         STM   R15,R1,SAVE1401     Now save registers and test if APF
         XR    R15,R15                  authorized.
         TESTAUTH FCTN=1           Are we authorized?
         LTR   R15,R15             Test the return code.
         BNZ   NOTAUTH             Not zero, tell not authorized.
         LM    R15,R1,SAVE1401     Restore registers used by TESTAUTH.
KZ       MODESET KEY=ZERO
         OI    TSVTFLG1,TSVTNCTU   Flag incore Notices need updating.
         DROP  R4
         L     R4,SAVER4X          Restore work register.
NZ       MODESET KEY=NZERO
*                          Write "BIT SUCCESSFULLY UPDATED" messages.
         MVC   LINE,LINE-1
         MVC   LINE,MESSAGET
         LA    R0,L'MESSAGET
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE,MESSAGEC
         LA    R0,L'MESSAGEC
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE,MESSAGEU
         LA    R0,L'MESSAGEU
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE,MESSAG00
         LA    R0,L'MESSAG00
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE,MESSAG01
         LA    R0,L'MESSAG01
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE,MESSAG02
         LA    R0,L'MESSAG02
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE,MESSAG03
         LA    R0,L'MESSAG03
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE,MESSAG04
         LA    R0,L'MESSAG04
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE,MESSAG05
         LA    R0,L'MESSAG05
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE,MESSAG06
         LA    R0,L'MESSAG06
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE,MESSAG07
         LA    R0,L'MESSAG07
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE,MESSAG08
         LA    R0,L'MESSAG08
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE,MESSAG09
         LA    R0,L'MESSAG09
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE,MESSAG10
         LA    R0,L'MESSAG10
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE,MESSAG11
         LA    R0,L'MESSAG11
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE,MESSAG12
         LA    R0,L'MESSAG12
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE,MESSAG13
         LA    R0,L'MESSAG13
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE,MESSAG14
         LA    R0,L'MESSAG14
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE,MESSAG15
         LA    R0,L'MESSAG15
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE,MESSAG16
         LA    R0,L'MESSAG16
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE,MESSAG17
         LA    R0,L'MESSAG17
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE,MSGT
         LA    R0,L'MSGT
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE,MESSAGEU
         LA    R0,L'MESSAGEU
         BAL   R4,MSG
         B     UPDTEND
NOTAUTH  DS    0H          Write "COMMAND NOT AUTHORIZED" message.
         L     R4,SAVER4X          Restore work register.
         MVC   LINE,LINE-1
         MVC   LINE,MESSAGET
         LA    R0,L'MESSAGET
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE,MESSAGEC
         LA    R0,L'MESSAGEC
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE,MESSAGEU
         LA    R0,L'MESSAGEU
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE,MESSAGEP
         LA    R0,L'MESSAGEP
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE,MESSAGEU
         LA    R0,L'MESSAGEU
         BAL   R4,MSG
         B     EOJ0
NOCORUPD DS    0H          Write "OLD MVS VERSION" message.
         L     R4,SAVER4X          Restore work register.
         MVC   LINE,LINE-1
         MVC   LINE,MESSAGET
         LA    R0,L'MESSAGET
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE,MESSAGEC
         LA    R0,L'MESSAGEC
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE,MESSAGEU
         LA    R0,L'MESSAGEU
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE,MESSAGEO
         LA    R0,L'MESSAGEO
         BAL   R4,MSG
         MVC   LINE,LINE-1
         MVC   LINE,MESSAGEU
         LA    R0,L'MESSAGEU
         BAL   R4,MSG
UPDTEND  DS    0H
         B     EOJ0
* ------------------------------------------------------------------ *
* ---    END OF MAIN ROUTINE TO SEND MESSAGE                     --- *
* ------------------------------------------------------------------ *
EOJ0     SR    R15,R15             SET CC = 0.
         B     EOJ                 CONT.
EOJ4     LA    R15,4               SET CC = 4.
         B     EOJ
EOJ8     LA    R15,8               SET CC = 8.
         B     EOJ                 CONT
EOJ      DS    0H                  BYE.
         LR    R1,R13
         L     R13,4(,R13)
         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000
         ST    R15,16(,R13)        PUT RC INTO PASSED SAVE AREA
         L     R14,12(,R13)
         LM    R0,R12,20(R13)
         BR    R14
         EJECT
*-----------------------------------------------------------------*
*---*                S U B R O U T I N E S                    *---*
*-----------------------------------------------------------------*
MSG      LA    R1,LINE             WRITE A LINE USING PUTLINE FACILITY
*        LOAD LENGTH OF MESSAGE INTO R0 BEFORE CALLING THIS ROUTINE.
         BAL   R14,PUTLINE
         MVC   LINE,LINE-1
         BR    R4
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        ROUTINE TO DISPLAY HEX VALUES                            *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEX      MVC   1(1,R15),0(R1)      MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         BR    R4                  RETURN TO CALLER
HEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        DATA AREAS THAT NEED TO BE INITIALIZED AT THE BEGINNING  *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
INITCON  MVI   LINE-1,C' '         INITIALIZE BLANK
         MVC   MSGTEXT(125),BLANKMSG   MOVE BLANKS TO MSG AREA
         MVC   MSGT,MESSAGER
         BR    R9
* ------------------------------------------------------------------ *
GETPSCB  L     R1,16               POINT TO CVT.
         L     R1,0(,R1)           POINT TO TCB/ASCB WORDS
         L     R1,4(,R1)           POINT TO TCB.
         L     R1,X'B4'(,R1)       POINT TO JSCB.
         L     R1,X'108'(,R1)      POINT TO PSCB.
         LA    R2,0(,R1)           CLEAR HIGH BYTE.  DUMP INTO R2
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*              SAVE CPPL POINTERS                                 *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         USING CPPL,R11
CPPLPTRS L     R6,CPPLUPT          SAVE CPPL POINTERS, SUCH AS:
         ST    R6,SAVEUPT             THE UPT
         L     R6,CPPLPSCB
         ST    R6,SAVEPSCB            THE PSCB
         L     R6,CPPLECT
         ST    R6,SAVEECT             THE ECT
         L     R6,CPPLCBUF
         ST    R6,CMBUFAD             THE COMMAND BUFFER ADDRESS
         ST    R11,SAVECPPL           AND THE CPPL ADDRESS ITSELF
         LA    R6,0
         BR    R9
         DROP  R11
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*              TEST IF USER HAS PSCB AUTHORIZATION.               *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         USING PSCB,R2
CHEKAUTH TM    PSCBATR1,PSCBACCT   ACCT USER?
         BO    CONT0               YES.  CONTINUE.
         TM    PSCBATR1,PSCBCTRL   OPER USER?
         BZ    EOJ4                NO.  GET OUT.
         DROP  R2
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
************************************************************
*        SET UP IOPL FOR PUTLINE                           *
************************************************************
         SPACE
         USING CPPL,R11
SETIOPL  LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         DROP  R11
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15
         SPACE
         L     R15,CVTPTR          POINT TO CVT                  JDM1
         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1
         TM    CVTPUTL,X'80'       IS PUTLINE LOADED? (VS2)      JDM1
         BNO   PUTLOAD             NO - BRANCH TO LOAD
         L     R15,CVTPUTL         YES - USE CVTPUTL             JDM1
         DROP  R15                                               JDM1
         B     PUTLOADX            BRANCH AROUND LOAD
PUTLOAD  LA    R0,=CL8'IKJPUTL '
         LOAD  EPLOC=(0)
         LR    R15,R0              GET ENTRY ADDRESS
         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE
PUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS
         BR    R9
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
************************************************************
*        PUTMSG ROUTINE                                    *
************************************************************
         SPACE
PUTMSG   STM   R14,R1,PUTSAVE
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTSAVE
         BR    R14
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
************************************************************
*        PUTLINE ROUTINE                                   *
************************************************************
         SPACE
PUTLINE  STM   R14,R1,PUTSAVE
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTSAVE
         BR    R14
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         EJECT
*-----------------------------------------------------------------*
*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*
*-----------------------------------------------------------------*
FULLZERO DC    F'0'
* - - - - - - - - - - - - - - - - - - - - - - - - *
BLANKS   DC    C'        '         8 BLANKS
BLANKMSG DC    CL125' '
*--------------------------------------------------------------------*
*--------------------------------------------------------------------*
         SPACE
CPYRLINE DS    0CL133
         DC    C'0'
         DC    CL3' '
* -->                               Currently 77 characters
         DC    C'&COPYRGT'
         DC    C'&COPYRSV'
* -->
         DC    CL52' '
         SPACE
*--------------------------------------------------------------------*
MESSAGET DC    CL72'&PGMNAME PROGRAM - &PKGTITL &VERTITL &VERSNUM'
MESSAGEU DS    0CL72
         DC    72C'-'
MESSAGEP DC    C'TSVTNCTU bit has not been set because APF authorizatio-
               n is needed.'
MESSAGEO DC    C'TSVT is not present. This is an older MVS version.'
MESSAGEC DS    0CL77                Currently 77 characters
         DC    C'&COPYRGT'
         DC    C'&COPYRSV'
MESSAG00 DC   C'The purpose of the BDMNUPD program is to force an     '
MESSAG01 DC   C'update to the Incore Notices Table which LISTBC reads.'
MESSAG02 DC   C'The need for update is signalled by the TSVTNCTU bit  '
MESSAG03 DC   C'in the TSO Vector Table, mapped by macro IKJTSVT.     '
MESSAG04 DC   C'Once the TSVTNCTU bit has been set, it depends which  '
MESSAG05 DC   C'TSO release you have, as to what program will interro-'
MESSAG06 DC   C'gate the bit, and update the Incore Notices Table.    '
MESSAG07 DC   C'     -  The TSVTNCTU bit has now been set  -          '
MESSAG08 DC   C'At TSO/E Release 3 and above, running LISTBC alone    '
MESSAG09 DC   C'will create a new Incore Notices Table.               '
MESSAG10 DC   C'Below TSO/E Release 3, you have to do an              '
MESSAG11 DC   C' OPER SEND '' '',SAVE first.                          '
MESSAG12 DC   C'This means that z/OS 1.2 and below, will require the  '
MESSAG13 DC   C' OPER SEND '' '',SAVE.                                '
MESSAG14 DC   C'And z/OS 1.3 and above, only requires that someone    '
MESSAG15 DC   C' somewhere in the system, will execute LISTBC, which  '
MESSAG16 DC   C' means that all that is necessary is that someone will'
MESSAG17 DC   C' LOGON to a TSO session.                              '
MESSAGER DC    C'This release of TSO/E is:  x.xx.x .'
         SPACE 3
         LTORG
         SPACE
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE 3
*-----------------------------------------------------------------*
*----         GETMAINED DATA AREA FIELDS                      ----*
*-----------------------------------------------------------------*
DATAAREA DSECT
SAVE     DS    9D
SAVE1401 DS    4F
CMBUFAD  DS    F                   COMMAND BUFFER ADDRESS
         DS    CL72                PADDING
         DC    C' '
         DS    0F                  ALIGN ON FULLWORD
SAVECPPL DS    F                   SAVE THE CPPL
SAVEUPT  DS    F                   SAVE FOR IKJIFRIF
SAVEPSCB DS    F                   SAVE FOR IKJIFRIF
SAVEECT  DS    F                   SAVE FOR IKJIFRIF
SAVER4X  DS    F                   SAVE WORK REGISTER VALUE
HEXSAVE  DS    3F                  SAVE FOR HEX MACRO
MYPPL    DS    7F
MYANS    DS    F
MYECB    DS    F                   USED BY PUTLINE ROUTINE
MYIOPL   DS    4F                  USED BY PUTLINE ROUTINE
MYPTPB   DS    3F                  USED BY PUTLINE ROUTINE
MYPUTLEP DS    F                   USED BY PUTLINE ROUTINE
MYOLD    DS    2F                  USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL130            USED BY PUTLINE ROUTINE
PUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE
LINEB    DS    C                   LINE-1
LINE     DS    CL137
LINET    EQU   LINE+7
OFFSETT  DS    H
CMBLENG  DS    H
MSGTEXT  DS    CL125
         DS    CL130               Padding to 255 characters
MSGT     DS    CL35
         DS    0D                  Doubleword boundary
         SPACE 1
DATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA
         IKJCPPL
         IKJUPT
         IKJPSCB
         IKJECT
         IKJIOPL
         IKJTSVT
         IEZIOB   DSECT=YES
         IEZBITS
         CVT  DSECT=YES
         END
