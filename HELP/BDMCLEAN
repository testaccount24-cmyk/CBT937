---   BDMCLEAN PROGRAM  -  Broadcast Master  Version   1.5.0A   ---
     Copyright (c) 1995-2025 Sam Golob Systems Programming LLC
                     All Rights Reserved

 BDMCLEAN -  Improve the appearance of the BRODCAST dataset
             by cleaning out irrelevant data from Global
             Notify messages and User Message records that
             were previously used.

Execution Mode:   TSO Command - using the PUTLINE interface
--------- ----

Description of Operation:
----------- -- ---------

  The BDMCLEAN program is meant to make it easier to "physically
look" at a BRODCAST dataset and determine if a Global Notify message
or a User message record is used, or not.  LISTBC leaves a lot of
data around from previous messages when it "deletes" a User message.
So does OPER, SEND,DELETE when it deletes a previously used Global
Notify message.  So it seemed the appropriate thing to do, when
creating a BRODCAST dataset management package, to clean the things
up, and make the real use of each record slot, easier to physically
see.

  There are two types of records that have to be cleaned up, and
each of them must be done in its own way.

Global Notify records:

  A Global Notify record is "in use" if its directory pointer has a
certain bit set to "off".  So, to clean all Global Notify records
that are not in use, if the bit in the directory record shows that
the Notify record is not in use, then the entire record is zeroed out
with hex zeros.

  If a Global Notify record is marked in use by its directory record,
then the actual length of the notice is shown by the first data byte.
To clean out the rest of the record from debris left by earlier and
longer Notices, a field of 129 zeros is laid out, the used part of
the record is laid over the zeros, and the whole thing is written
back to the same slot.  This cleans out the appearance of the Notice.


User Message records:

  A User Message record slot is marked "free" if its "key byte" is
X'FF' and the first data byte is the "R" of the "TTR" or "CCHHR"
(the position of the record on the track).  All the rest of the data
in the record is irrelevant.  So if the BDMCLEAN program sees a free
User Message record, it replaces all the rest of the data in it, with
hex zeros.


JCL Requirements or TSO Allocations:
--- ------------ -- --- -----------

  The BDMCLEAN program is a TSO command, but it uses the PUTLINE
interface to write its output to the terminal.  Therefore you can
run the BDMCLEAN program under TSO-in-batch, and still see its
output.  You can (of course) also run BDMCLEAN as a TSO command.

Allocation Requirement -

  The particular copy of the BRODCAST dataset which you want to
clean, must be pointed to by the BRODCAST DD name, as follows:

ALLOC FI(BRODCAST) DA(your.BRODCAST.dataset) SH REUSE

or

//BRODCAST  DD  DISP=SHR,DSN=your.BRODCAST.dataset


Subcommands:
-----------
            INSTRUCTIONS FOR BDMCLEAN TSO COMMAND
            ------------ --- -------- --- -------
         BDMCLEAN N - CLEAN NOTICES ONLY
         BDMCLEAN U - CLEAN USER MESSAGES ONLY
         BDMCLEAN M - CLEAN USER MESSAGES ONLY
         BDMCLEAN   - CLEAN BOTH NOTICES AND USERID MESSAGES


Report:
------
         COUNT OF USED  NOTICES CLEANED:          14
         COUNT OF EMPTY NOTICES CLEANED:         236
         TOTAL COUNT OF NOTICES CLEANED:         250

         COUNT OF USER MESSAGES CLEANED:        5923

Program Logic:
------- -----

  The basic principles of the program logic were mentioned above,
in the "Description of Operation" section.

Error Handling:
----- --------

  BDMCLEAN just checks the first letter of any subcommand, if one is
entered.  If it is a U, then only User Message records are cleaned.
If it is an N or an M, then only Global Notice records are cleaned.
If it is anything else, then both are cleaned.  If no subcommand
is entered, then both are cleaned.

* ----------------------------------------------------------------- *

  If the BRODCAST DD allocation is missing, then BDMCLEAN issues
the following message:

    IEC130I BRODCAST DD STATEMENT MISSING
    BAD OPEN - ALLOC F(BRODCAST) DA(SYS1.BRODCAST) SH REU


