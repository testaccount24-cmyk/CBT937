---   BDMCVMSG PROGRAM  -  Broadcast Master  Version   1.5.0A   ---
     Copyright (c) 1995-2025 Sam Golob Systems Programming LLC
                     All Rights Reserved


 BDMCVMSG -  Converts EXPORT format message output from the BDMXPORT
             format to BDMMLOAD input format, so the messages can be
             loaded quickly into a new BRODCAST Dataset using the
             bulk message loader program, BDMMLOAD.


Execution Mode:   Batch Program
--------- ----

Description of Operation:
----------- -- ---------

  BDMCVMSG takes input from either BDMXPORT format (with the BDMSEND
messages enclosed in curly brackets) or from BCMXPORT format, with
the messages not enclosed between any other characters.

  Output of the program is written in BDMMLOAD format, with the FB-130
version of all the User Message records preceded by a header record
containing the Userid which the messages belong to, as follows:

  Format of the Header Record :

./--- IBMUSER

starting in Column 1.

  Messages in this BDMMDUMP output dataset are intended to be
reloaded into a new BRODCAST Dataset, using the Bulk Message Loader
program, BDMMLOAD.  See the Help member for BDMMLOAD to get
additional information.

  BDMMLOAD is a very quick message reloader.


JCL Requirements:
--- ------------

  The BDMCVMSG program is a relatively simple program that converts
User Messages in BDMSEND format, which were output from the BDMXPORT
program, in a VB-255 file, to an FB-130 file in BDMMLOAD input format.

  Required DD names -

EXPORTIN - This is the BDMXPORT format VB-255 file which contains
           dumped messages in BDMSEND format.

      Sample JCL definition for the BRODCAST dataset.

  //EXPORTIN DD DISP=SHR,DSN=SBGOLOB.NEW.EXPORT

BDMMDUMP - This is the FB-130 dataset that contains the dumped
           records from BRODCAST.

      Sample JCL definition for BRODDUMP DD name.

  //BDMMDUMP DD DISP=(NEW,CATLG,DELETE),
  //            DSN=SBGOLOB.NEW.MSGDUMP,
  //            DCB=(LRECL=130,BLKSIZE=27950,DSORG=PS),
  //            SPACE=(TRK,(15,45),RLSE),
  //            UNIT=SYSALLDA,VOL=SER=WORK04

SYSPRINT - A SYSOUT DD name which contains the report showing
           all the messages which are being converted, in an
           approximation of the BDMMLOAD format.


   Report Appearance (SYSPRINT)
   ------ ---------- ----------

 ---   BDMCVMSG  PROGRAM  -  Broadcast Master  Version   1.5.0A   ---
 Copyright (c) 1995-2025 Sam Golob Systems Programming LLC - All Rights Reserved
 ---   BDMCVMSG    ---   BDMXPORT Conversion to BDMMLOAD    ---

./--- USR0001
 06.56.33 JOB48077 $HASP165 PEO25ZE5 ENDED AT OURCMPNY  MAXCC=3 CN(INTERNAL)
 06.56.36 JOB48050 $HASP165 PEO25ZEP ENDED AT OURCMPNY  MAXCC=0 CN(INTERNAL)
 06.57.02 JOB48063 $HASP165 PEO25ZE3 ENDED AT OURCMPNY  MAXCC=0 CN(INTERNAL)
 13.21.24 JOB05403 $HASP165 PEO25Z11 ENDED AT OURCMPNY  MAXCC=3 CN(INTERNAL)
 13.21.36 JOB05407 $HASP165 PEO25ZE9 ENDED AT OURCMPNY  MAXCC=3 CN(INTERNAL)
 13.21.39 JOB05409 $HASP165 PEO25Z10 ENDED AT OURCMPNY  MAXCC=3 CN(INTERNAL)
 13.21.58 JOB05413 $HASP165 PEO25Z14 ENDED AT OURCMPNY  MAXCC=3 CN(INTERNAL)

     and so forth, until all converted messages are displayed.


Program Logic
------- -----

  The BDMCVMSG program takes the VB-255 input and finds out how
long each record is.  The length of the message is assumed to be
the distance from after where the curly bracket starts, until just
before the close curly bracket at the end.  This length is dumped
into the FB-130 output record, which looks like a BRODCAST Dataset
User Message Record.

  In reality, the message length is calculated from the record
length in the Record Descriptor Word (RDW) that was obtained via
a QSAM GET of each input record.  BDMXPORT produces just the right
sized variable length records, so the message length can be figured
out in this way (and it is correct).

  The BDMSEND messages in the VB-255 format input file are followed
by a Userid.  At the outset of the program, and thereafter, whenever
the Userid changes from one message to the next, a Header Record is
produced of the form:

./--- userid

to separate messages belonging to different Userids.

  Messages from the BDMMDUMP output dataset are intended to be reloaded
into a new BRODCAST Dataset, using the Bulk Message Loader program,
BDMMLOAD.


Error Handling:
----- --------

  The existence of each required DD name in the JCL is verified
using a TIOT scan at the beginning of BDMCVMSG program execution.
If a required DD name is missing, then the program issues an error
message, and does not rely on the operating system to do so.

  In the case that the BDMMDUMP DD name was coded, and other DD
names were not coded, then the dataset pointed to by the BDMMDUMP
will not be created properly, and therefore it will have to be
deleted manually before the job is rerun.  Error messages tell
you what to do, as follows:

   Cases:
   -----

 -----------------------------------------------------------------

SYSPRINT DD Name is missing:  In this case, there is no SYSPRINT to
   write messages to, so the BDMCVMSG program writes the messages to
   the JOB LOG, depending on whether BDMMDUMP DD was correctly coded
   or not.  IF BDMMDUMP was correctly coded, it is not written to,
   but it was allocated.  Therefore it must be deleted before the
   job can be correctly rerun.  JOB LOG messages as follows:

 BDMCV00I     ----------------------------
 BDMCV10E     SYSPRINT DD Name is missing...
 BDMCV00I     ----------------------------
 BDMCV03E     BDMMDUMP not created properly.
 BDMCV02E     Delete BDMMDUMP and rerun job.
 BDMCV00I     ----------------------------
 IEF142I SBGOLOBD BDMCVMSG - STEP WAS EXECUTED - COND CODE 0016

   A Return Code of 16 is issued (because of the severity of not
      having SYSPRINT to write to).

 -----------------------------------------------------------------

BDMMDUMP DD Name is missing:  In this case, the BDMMDUMP DD has not
   been allocated, so therefore it does not have to be deleted.
   So a message is written to SYSPRINT as follows:

 ---   BDMCVMSG  PROGRAM  -  Broadcast Master  Version   1.5.0A   ---
 Copyright (c) 1995-2025 Sam Golob Systems Programming LLC - All Rights Reserved
 ---   BDMCVMSG    ---   BDMXPORT Conversion to BDMMLOAD    ---

BDMCV01E   ---  BDMMDUMP DD Name Missing  ---
BDMCV05E   ***  Please correct your JCL   ***

   A Return Code of 12 is issued.

 -----------------------------------------------------------------

EXPORTIN DD Name is missing:  It depends on whether BDMMDUMP
   was also coded, and therefore BDMMDUMP will then have to be
   deleted before the job can be correctly rerun.  If BDMMDUMP
   is present and coded, then the following is displayed:

 BDMCV01E   ---  EXPORTIN DD Name Missing  ---
 BDMCV03E   ---  BDMMDUMP not created properly..
 BDMCV02E   ---  Delete BDMMDUMP and Rerun ---

 BDMCV05E   ***  Please correct your JCL   ***

   If the BDMMDUMP DD is also missing, then the following is
   displayed:

 BDMCV01E   ---  BDMMDUMP DD Name Missing  ---
 BDMCV01E   ---  EXPORTIN DD Name Missing  ---

 BDMCV05E   ***  Please correct your JCL   ***

   A Return Code of 12 is issued.


